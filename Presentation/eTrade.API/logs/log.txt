2022-08-10 21:28:26.282 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-10 21:28:26.771 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-10 21:28:26.775 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-10 21:28:26.780 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-10 21:28:26.781 +03:00 [INF] Hosting environment: Development
2022-08-10 21:28:26.783 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-10 22:49:59.037 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-10 22:49:59.444 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-10 22:49:59.446 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-10 22:49:59.450 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-10 22:49:59.453 +03:00 [INF] Hosting environment: Development
2022-08-10 22:49:59.467 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-10 22:50:29.739 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-10 22:50:29.826 +03:00 [INF] CORS policy execution successful.
2022-08-10 22:50:29.844 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 114.2720ms
2022-08-10 22:50:29.852 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-10 22:50:29.856 +03:00 [INF] CORS policy execution successful.
2022-08-10 22:50:29.882 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-10 22:50:29.916 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-10 22:50:32.195 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-10 22:50:32.894 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-10 22:50:33.716 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-10 22:50:33.924 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-10 22:50:34.019 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-10 22:50:34.041 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4116.6223ms
2022-08-10 22:50:34.043 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-10 22:50:34.067 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4214.8413ms
2022-08-11 20:44:01.719 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 20:44:02.563 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 20:44:02.565 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 20:44:02.569 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 20:44:02.570 +03:00 [INF] Hosting environment: Development
2022-08-11 20:44:02.571 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:27:59.088 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:27:59.405 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:27:59.407 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:27:59.411 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:27:59.414 +03:00 [INF] Hosting environment: Development
2022-08-11 21:27:59.420 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:03.356 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:47:03.738 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:47:03.740 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:47:03.745 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:47:03.746 +03:00 [INF] Hosting environment: Development
2022-08-11 21:47:03.746 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:25.243 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:47:25.587 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:47:25.589 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:47:25.595 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:47:25.596 +03:00 [INF] Hosting environment: Development
2022-08-11 21:47:25.598 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:29.123 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-11 21:47:29.204 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:47:29.212 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:47:29.217 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:47:29.228 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 109.7288ms
2022-08-11 21:47:29.234 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-11 21:47:29.242 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:47:29.248 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:47:29.282 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-11 21:47:29.320 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-11 21:47:29.374 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-11 21:47:31.359 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:47:31.935 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-11 21:47:32.694 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-11 21:47:32.986 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-11 21:47:33.052 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-11 21:47:33.065 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:47:33.077 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3748.5442ms
2022-08-11 21:47:33.080 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-11 21:47:33.084 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjAyNDM2NTIsImV4cCI6MTY2MDI0NDU1MiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.znb81mtuXtnQbUB-L8SRRqkK3lVBUwgvigQf4_h_Z74","expiration":"2022-08-11T19:02:32.3972794Z","refreshToken":"fus+MGvXaBDWMJsK6/hJaOFDAkH9yA0OkgXQ7e+e5ds="}}
2022-08-11 21:47:33.101 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3867.2313ms
2022-08-11 21:48:05.058 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-11 21:48:05.061 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:05.067 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:05.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:48:05.071 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 13.1146ms
2022-08-11 21:48:05.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-11 21:48:05.096 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:05.100 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:05.361 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-11 21:48:05.370 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-11 21:48:05.393 +03:00 [INF] Get All Products
2022-08-11 21:48:05.439 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:48:05.601 +03:00 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-11 21:48:05.619 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-11 21:48:05.623 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-11 21:48:05.663 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-11 21:48:05.680 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-11 21:48:05.697 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:48:05.699 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 325.7677ms
2022-08-11 21:48:05.702 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-11 21:48:05.705 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-11 21:48:05.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 627.1376ms
2022-08-11 21:48:10.357 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-11 21:48:10.360 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:10.364 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:10.366 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:48:10.369 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 12.9446ms
2022-08-11 21:48:10.374 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-11 21:48:10.380 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:10.385 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:10.389 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-11 21:48:10.400 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-11 21:48:10.420 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:48:10.842 +03:00 [INF] Executed DbCommand (176ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-11 21:48:10.939 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-11 21:48:10.943 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:48:10.945 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 541.8602ms
2022-08-11 21:48:10.947 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-11 21:48:10.950 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-11 21:48:10.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 580.1819ms
2022-08-13 10:36:31.356 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-13 10:36:32.191 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-13 10:36:32.192 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-13 10:36:32.199 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-13 10:36:32.200 +03:00 [INF] Hosting environment: Development
2022-08-13 10:36:32.201 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-13 10:37:43.525 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/users/login text/plain 62
2022-08-13 10:37:43.624 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /users/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 62
Postman-Token: [Redacted]
2022-08-13 10:37:43.683 +03:00 [INF] RequestBody: 
2022-08-13 10:37:43.686 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:37:43.740 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/users/login text/plain 62 - 404 0 - 221.3921ms
2022-08-13 10:37:59.551 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/users/login text/plain 59
2022-08-13 10:37:59.555 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /users/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:37:59.568 +03:00 [INF] RequestBody: 
2022-08-13 10:37:59.571 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:37:59.573 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/users/login text/plain 59 - 404 0 - 21.9492ms
2022-08-13 10:38:33.660 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:33.662 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:33.667 +03:00 [INF] RequestBody: 
2022-08-13 10:38:33.668 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:33.670 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 9.9024ms
2022-08-13 10:38:41.221 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:41.222 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:41.225 +03:00 [INF] RequestBody: 
2022-08-13 10:38:41.229 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:41.232 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 10.5720ms
2022-08-13 10:38:43.319 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:43.322 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:43.329 +03:00 [INF] RequestBody: 
2022-08-13 10:38:43.338 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:43.341 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 22.1181ms
2022-08-13 10:38:58.727 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:58.729 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:58.731 +03:00 [INF] RequestBody: 
2022-08-13 10:38:58.732 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:58.735 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 7.5627ms
2022-08-13 10:44:27.807 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 136
2022-08-13 10:44:27.814 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 136
Postman-Token: [Redacted]
2022-08-13 10:44:27.818 +03:00 [INF] RequestBody: 
2022-08-13 10:44:27.819 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:44:27.820 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 136 - 404 0 - 12.7315ms
2022-08-24 21:41:43.011 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-24 21:41:44.219 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-24 21:41:44.221 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-24 21:41:44.226 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-24 21:41:44.227 +03:00 [INF] Hosting environment: Development
2022-08-24 21:41:44.228 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-24 21:42:44.350 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-24 21:42:44.464 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:44.470 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:44.472 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:44.483 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 139.1170ms
2022-08-24 21:42:44.486 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-24 21:42:44.494 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:44.496 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:44.527 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:42:44.580 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-24 21:42:44.635 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-24 21:42:46.806 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:42:47.556 +03:00 [INF] Executed DbCommand (130ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:42:48.417 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:42:48.643 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-24 21:42:48.714 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-24 21:42:48.738 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:42:48.749 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4161.2164ms
2022-08-24 21:42:48.752 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:42:48.755 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjEzNjY1NjgsImV4cCI6MTY2MTM2NzQ2OCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.bI8XqiShpdiC5G2qJx7zX202rQHYfc1gdhmVslFEfmg","expiration":"2022-08-24T18:57:48.0781386Z","refreshToken":"RqKCHXdn8Q1FJqTZCizKNV1nqIgFATDrkjYXgXcBa2E="}}
2022-08-24 21:42:48.774 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4287.6962ms
2022-08-24 21:42:52.597 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:52.597 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:52.600 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:52.600 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:52.604 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:52.605 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:52.607 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:52.608 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:52.610 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.1433ms
2022-08-24 21:42:52.611 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.4786ms
2022-08-24 21:42:54.636 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:54.638 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:54.638 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:54.641 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:54.645 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:54.646 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:54.648 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:54.649 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:54.651 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.3936ms
2022-08-24 21:42:54.652 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.9623ms
2022-08-24 21:42:56.663 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:56.665 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:56.666 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:56.669 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:56.670 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:56.672 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:56.674 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:56.675 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:56.676 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 12.2058ms
2022-08-24 21:42:56.677 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.5462ms
2022-08-24 21:42:58.691 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:58.692 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:58.693 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:58.694 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:58.696 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:58.697 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:58.698 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:58.699 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:58.700 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.8456ms
2022-08-24 21:42:58.701 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.9474ms
2022-08-24 21:43:00.715 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:00.717 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:00.718 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:00.720 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:00.722 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:00.722 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:00.724 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:00.725 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.3583ms
2022-08-24 21:43:00.726 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:00.730 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.7890ms
2022-08-24 21:43:02.831 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:02.833 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:02.839 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:02.842 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:02.843 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.9782ms
2022-08-24 21:43:02.852 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:02.854 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:02.860 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:02.861 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:02.862 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.6692ms
2022-08-24 21:43:05.833 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:05.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:05.835 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:05.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:05.842 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:05.846 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:05.848 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:05.852 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:05.857 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 22.0688ms
2022-08-24 21:43:05.854 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 21.0407ms
2022-08-24 21:43:08.839 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:08.840 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:08.847 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:08.849 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:08.853 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.3677ms
2022-08-24 21:43:08.858 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:08.859 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:08.865 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:08.866 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:08.868 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 10.6807ms
2022-08-24 21:43:11.824 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:11.825 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:11.826 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:11.827 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:11.829 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:11.831 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:11.832 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:11.833 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:11.834 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.7645ms
2022-08-24 21:43:11.835 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 10.4681ms
2022-08-24 21:43:14.830 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:14.832 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:14.835 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:14.837 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:14.839 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.9989ms
2022-08-24 21:43:14.850 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:14.853 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:14.858 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:14.860 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:14.862 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.9103ms
2022-08-24 21:43:17.833 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:17.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:17.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:17.839 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:17.843 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:17.849 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:17.850 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:17.851 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:17.852 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.8822ms
2022-08-24 21:43:17.853 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.1026ms
2022-08-24 21:43:20.822 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:20.823 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:20.825 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:20.827 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:20.830 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:20.835 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:20.836 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:20.838 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:20.840 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.0838ms
2022-08-24 21:43:20.843 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 19.5775ms
2022-08-24 21:43:55.078 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-24 21:43:55.522 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-24 21:43:55.524 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-24 21:43:55.528 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-24 21:43:55.529 +03:00 [INF] Hosting environment: Development
2022-08-24 21:43:55.530 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-24 21:43:55.669 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:55.669 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:55.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.748 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.748 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.752 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:55.752 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:55.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 97.0799ms
2022-08-24 21:43:55.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 97.0849ms
2022-08-24 21:43:55.776 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:43:55.776 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:43:55.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.788 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.790 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.814 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.814 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.843 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:43:55.843 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:43:55.850 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.850 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.859 +03:00 [INF] RequestBody: 
2022-08-24 21:43:55.860 +03:00 [INF] RequestBody: 
2022-08-24 21:43:55.869 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"MVeWWC_FkWLg2OZYJplR5Q","connectionToken":"OVnbedpV34WmeTRmMqXwyQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:43:55.869 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"k_uPm1LZcFGIpXuhs0zVRg","connectionToken":"-pEqnhOm1jhH-6pCokbK-w","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:43:55.880 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 103.6230ms
2022-08-24 21:43:55.891 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 114.9754ms
2022-08-24 21:43:55.912 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=OVnbedpV34WmeTRmMqXwyQ - -
2022-08-24 21:43:55.936 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:43:55.937 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.940 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:43:55.973 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=-pEqnhOm1jhH-6pCokbK-w - -
2022-08-24 21:43:55.974 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:43:55.976 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.977 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:44:11.952 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-24 21:44:11.954 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:11.957 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:11.957 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:44:11.962 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 10.0785ms
2022-08-24 21:44:11.969 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-24 21:44:11.973 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:11.976 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:11.977 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:44:12.015 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-24 21:44:12.035 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-24 21:44:13.896 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:44:14.596 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:44:15.003 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:44:15.176 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-24 21:44:15.249 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-24 21:44:15.264 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:44:15.271 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3244.347ms
2022-08-24 21:44:15.273 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:44:15.277 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjEzNjY2NTQsImV4cCI6MTY2MTM2NzU1NCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.E3CW6-9Ht3NFrbTJYPk9UBRym9f-TuBknri3i-X5fyc","expiration":"2022-08-24T18:59:14.8290054Z","refreshToken":"tzZHPJSHIksyCassX/jleWD3d3XqzMPWEhFe9VEnHok="}}
2022-08-24 21:44:15.297 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3327.5573ms
2022-08-24 21:44:19.492 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:44:19.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:19.495 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:19.496 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:44:19.497 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.9746ms
2022-08-24 21:44:19.500 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:44:19.501 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:19.502 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:19.772 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:44:19.783 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:44:19.800 +03:00 [INF] Get All Products
2022-08-24 21:44:19.852 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:44:19.942 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:44:19.968 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:44:19.972 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:44:20.005 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:44:20.020 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:44:20.035 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:44:20.037 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 250.191ms
2022-08-24 21:44:20.040 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:44:20.042 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:44:20.048 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 548.4134ms
2022-08-24 21:46:18.223 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:46:18.223 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:46:18.236 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:43:55 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:46:18.231 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:43:55 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:46:18.241 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=-pEqnhOm1jhH-6pCokbK-w - - - 101 - - 142268.2074ms
2022-08-24 21:46:18.243 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=OVnbedpV34WmeTRmMqXwyQ - - - 101 - - 142330.8003ms
2022-08-24 21:46:19.389 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:19.390 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:19.392 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:19.392 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:46:19.393 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.3891ms
2022-08-24 21:46:19.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:19.397 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:19.400 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:19.403 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:19.405 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:46:19.410 +03:00 [INF] Get All Products
2022-08-24 21:46:19.424 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:46:19.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:46:19.434 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:46:19.437 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:46:19.438 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:46:19.439 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 31.7191ms
2022-08-24 21:46:19.440 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:19.441 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:46:19.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 46.8910ms
2022-08-24 21:46:54.016 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:54.018 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:54.019 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:54.020 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:46:54.021 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.1725ms
2022-08-24 21:46:54.031 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:54.032 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:54.034 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:54.038 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:54.039 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:46:54.046 +03:00 [INF] Get All Products
2022-08-24 21:46:54.048 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:46:54.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:46:54.060 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:46:54.064 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:46:54.067 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:46:54.068 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.2178ms
2022-08-24 21:46:54.070 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:54.071 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:46:54.075 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 43.9461ms
2022-08-24 21:47:27.767 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:27.775 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:27.777 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:27.778 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:27.779 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 12.8237ms
2022-08-24 21:47:27.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:27.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:27.787 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:27.788 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:27.789 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:47:27.791 +03:00 [INF] Get All Products
2022-08-24 21:47:27.793 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:47:27.795 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:47:27.798 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:47:27.800 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:47:27.802 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:47:27.803 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.8437ms
2022-08-24 21:47:27.804 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:27.805 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:47:27.808 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 25.3670ms
2022-08-24 21:47:30.388 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:47:30.390 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:30.394 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.396 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:30.398 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.0456ms
2022-08-24 21:47:30.402 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:47:30.404 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:30.407 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.408 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:47:30.411 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:47:30.413 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:47:30.415 +03:00 [INF] RequestBody: 
2022-08-24 21:47:30.416 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"IETguZrsrPL1_8W3hlCXlQ","connectionToken":"dJccAi9d5uN39bbfsThQSA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:47:30.420 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 18.2648ms
2022-08-24 21:47:30.434 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=dJccAi9d5uN39bbfsThQSA - -
2022-08-24 21:47:30.435 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:47:30.436 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.437 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:47:33.560 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:33.561 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:33.567 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:33.568 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:33.569 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.2628ms
2022-08-24 21:47:33.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:33.575 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:33.576 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:33.577 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:33.578 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:47:33.581 +03:00 [INF] Get All Products
2022-08-24 21:47:33.582 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:47:33.586 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:47:33.588 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:47:33.590 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:47:33.592 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:47:33.593 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.567ms
2022-08-24 21:47:33.594 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:33.595 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:47:33.597 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 23.3198ms
2022-08-24 21:51:05.488 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:51:05.491 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:47:30 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:51:05.492 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=dJccAi9d5uN39bbfsThQSA - - - 101 - - 215058.1692ms
2022-08-24 21:51:06.286 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:06.288 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:06.293 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:06.295 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:51:06.297 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 11.6845ms
2022-08-24 21:51:06.303 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:06.304 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:06.310 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:06.312 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:06.313 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:51:06.316 +03:00 [INF] Get All Products
2022-08-24 21:51:06.318 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:51:06.394 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:51:06.399 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:51:06.404 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:51:06.407 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:51:06.408 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 93.0086ms
2022-08-24 21:51:06.410 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:06.412 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:51:06.415 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 112.7390ms
2022-08-24 21:51:51.814 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:51.817 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:51.821 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:51.824 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:51:51.827 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 12.4482ms
2022-08-24 21:51:51.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:51.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:51.841 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:51.842 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:51.843 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:51:51.846 +03:00 [INF] Get All Products
2022-08-24 21:51:51.847 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:51:51.850 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:51:51.854 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:51:51.857 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:51:51.859 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:51:51.862 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3803ms
2022-08-24 21:51:51.866 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:51.867 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:51:51.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 34.3203ms
2022-08-24 21:52:19.971 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-08-24 21:52:19.973 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:19.975 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:19.975 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:19.977 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 6.0917ms
2022-08-24 21:52:19.986 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 41
2022-08-24 21:52:19.988 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 41
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:19.990 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:19.992 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:52:19.996 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:20.000 +03:00 [INF] RequestBody: {"name":"ÜrüntSt","stock":3,"price":25}
2022-08-24 21:52:20.013 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:20.187 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-24 21:52:20.199 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-08-24 21:52:20.200 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 202.1296ms
2022-08-24 21:52:20.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:52:20.204 +03:00 [INF] Response:
StatusCode: 201
2022-08-24 21:52:20.206 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 41 - 201 0 - 220.5500ms
2022-08-24 21:52:20.221 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:20.223 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:20.226 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:20.227 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:20.229 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.8267ms
2022-08-24 21:52:20.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:20.235 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:20.238 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:20.239 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:20.241 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:20.245 +03:00 [INF] Get All Products
2022-08-24 21:52:20.246 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:20.248 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:20.251 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:20.254 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:20.256 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:20.258 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.2753ms
2022-08-24 21:52:20.260 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:20.261 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:20.263 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 30.1086ms
2022-08-24 21:52:23.033 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:23.035 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.037 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.040 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:23.044 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 10.3824ms
2022-08-24 21:52:23.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:23.051 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.055 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.057 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.059 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:23.065 +03:00 [INF] Get All Products
2022-08-24 21:52:23.066 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:23.073 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:23.078 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:52:23.080 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:52:23.085 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-24 21:52:23.089 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:23.091 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:23.092 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 28.4022ms
2022-08-24 21:52:23.094 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.095 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:23.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 48.6980ms
2022-08-24 21:52:23.608 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:23.610 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.613 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.616 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:23.620 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 12.2639ms
2022-08-24 21:52:23.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:23.626 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.629 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.631 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.634 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:23.638 +03:00 [INF] Get All Products
2022-08-24 21:52:23.639 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:23.642 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:23.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:23.649 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:23.650 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:23.652 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.8221ms
2022-08-24 21:52:23.653 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.655 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:23.659 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 35.0071ms
2022-08-24 21:52:24.328 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:24.330 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:24.334 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:24.337 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:24.341 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 12.9132ms
2022-08-24 21:52:24.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:24.347 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:24.351 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:24.353 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:24.355 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:24.357 +03:00 [INF] Get All Products
2022-08-24 21:52:24.358 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:24.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:24.364 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:24.367 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:24.369 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:24.371 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.3162ms
2022-08-24 21:52:24.372 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:24.373 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:24.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 29.4068ms
2022-08-24 21:52:33.179 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:33.182 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:33.184 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:33.185 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:33.187 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.5311ms
2022-08-24 21:52:33.192 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:33.194 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:33.197 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:33.199 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:33.200 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:33.204 +03:00 [INF] Get All Products
2022-08-24 21:52:33.206 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:33.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:33.213 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:33.216 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:33.218 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:33.219 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8774ms
2022-08-24 21:52:33.220 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:33.223 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:33.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 34.4209ms
2022-08-24 21:52:35.648 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:35.651 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:35.653 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:35.655 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:35.656 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 8.4288ms
2022-08-24 21:52:35.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:35.664 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:35.667 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:35.669 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:35.673 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:35.677 +03:00 [INF] Get All Products
2022-08-24 21:52:35.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:35.686 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:35.692 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-24 21:52:35.697 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:35.700 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:35.702 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.9661ms
2022-08-24 21:52:35.704 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:35.706 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:35.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 46.4623ms
2022-08-24 21:52:36.259 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:36.260 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:36.264 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:36.265 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:36.266 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 7.5126ms
2022-08-24 21:52:36.271 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:36.274 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:36.276 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:36.277 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:36.279 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:36.282 +03:00 [INF] Get All Products
2022-08-24 21:52:36.283 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:36.287 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:36.290 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:36.294 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:36.298 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:36.300 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.5877ms
2022-08-24 21:52:36.302 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:36.303 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:36.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 35.3538ms
2022-08-24 21:52:37.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:37.159 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:37.165 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:37.168 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:37.173 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 15.8128ms
2022-08-24 21:52:37.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:37.180 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:37.186 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:37.189 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:37.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:37.194 +03:00 [INF] Get All Products
2022-08-24 21:52:37.196 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:37.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:37.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:37.205 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:37.206 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:37.207 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.8882ms
2022-08-24 21:52:37.208 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:37.209 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:37.210 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 32.1682ms
2022-08-24 21:53:36.733 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:53:36.740 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:36.743 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.744 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:36.747 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.0439ms
2022-08-24 21:53:36.756 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:53:36.758 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:36.762 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.764 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:53:36.766 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:53:36.767 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:53:36.769 +03:00 [INF] RequestBody: 
2022-08-24 21:53:36.775 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"e_44rBFMnfwl_t8nvwLnLw","connectionToken":"0--94H5I5GdYh5I0pWelKg","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:53:36.784 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 27.6195ms
2022-08-24 21:53:36.798 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=0--94H5I5GdYh5I0pWelKg - -
2022-08-24 21:53:36.799 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:53:36.803 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.805 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:53:38.480 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:53:38.481 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:38.485 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:38.486 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:53:38.488 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:53:38.490 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:53:38.494 +03:00 [INF] RequestBody: 
2022-08-24 21:53:38.496 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"YxqRHM6JfHKiF2MJ4LbeXw","connectionToken":"94pPs0g3Y5OsodrM4NjvTQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:53:38.497 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 17.7608ms
2022-08-24 21:53:38.508 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=94pPs0g3Y5OsodrM4NjvTQ - -
2022-08-24 21:53:38.509 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:53:38.510 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:38.511 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:53:42.236 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:42.237 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:42.241 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:42.243 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:42.245 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.3277ms
2022-08-24 21:53:42.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:42.250 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:42.251 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:42.252 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:42.253 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:42.256 +03:00 [INF] Get All Products
2022-08-24 21:53:42.257 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:42.260 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:42.262 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:42.264 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:42.266 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:42.267 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.2558ms
2022-08-24 21:53:42.269 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:42.270 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:42.272 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 22.5839ms
2022-08-24 21:53:44.288 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:44.290 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:44.292 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:44.294 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:44.296 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:44.300 +03:00 [INF] Get All Products
2022-08-24 21:53:44.302 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:44.307 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:44.309 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:44.311 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:44.313 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:44.314 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.6637ms
2022-08-24 21:53:44.315 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:44.317 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:44.319 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 31.1894ms
2022-08-24 21:53:54.110 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-08-24 21:53:54.111 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.114 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.115 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:54.118 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 7.5964ms
2022-08-24 21:53:54.123 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 39
2022-08-24 21:53:54.125 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 39
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.128 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.130 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:53:54.131 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:54.134 +03:00 [INF] RequestBody: {"name":"sdaass","stock":1,"price":112}
2022-08-24 21:53:54.136 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:54.140 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-24 21:53:54.146 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-08-24 21:53:54.147 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 13.1784ms
2022-08-24 21:53:54.148 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:53:54.149 +03:00 [INF] Response:
StatusCode: 201
2022-08-24 21:53:54.150 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 39 - 201 0 - 27.7738ms
2022-08-24 21:53:54.171 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:54.172 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.175 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.177 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:54.179 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 8.5583ms
2022-08-24 21:53:54.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:54.186 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.189 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.190 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:54.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:54.194 +03:00 [INF] Get All Products
2022-08-24 21:53:54.195 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:54.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:54.200 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:54.204 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:54.206 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:54.207 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.6041ms
2022-08-24 21:53:54.208 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:54.210 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:54.213 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 29.0763ms
2022-08-24 21:53:57.967 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:53:57.977 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:53:36 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:53:57.989 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=0--94H5I5GdYh5I0pWelKg - - - 101 - - 21190.7342ms
2022-08-24 21:53:59.345 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:53:59.348 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:53:38 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:53:59.362 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=94pPs0g3Y5OsodrM4NjvTQ - - - 101 - - 20854.7477ms
2022-08-29 14:36:21.052 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 14:36:22.118 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 14:36:22.120 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 14:36:22.128 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 14:36:22.129 +03:00 [INF] Hosting environment: Development
2022-08-29 14:36:22.130 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 14:37:09.057 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 14:37:09.162 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:09.167 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:09.174 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:09.190 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 138.4442ms
2022-08-29 14:37:09.197 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 14:37:09.214 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:09.221 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:09.286 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 14:37:09.328 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 14:37:09.389 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 14:37:11.808 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:37:12.901 +03:00 [INF] Executed DbCommand (456ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 14:37:13.797 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 14:37:14.005 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 14:37:14.086 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 14:37:14.101 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:37:14.119 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4782.0876ms
2022-08-29 14:37:14.123 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 14:37:14.127 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3NzMwMzMsImV4cCI6MTY2MTc3MzkzMywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.famu6I_94sDznCpQo8nKGAK0IuGZ6UfjWKD3wKDrfj4","expiration":"2022-08-29T11:52:13.4305814Z","refreshToken":"H2izJrVpZ3l2/CiF6NdxPwYMHVCpDrgVXwspa/N2WVE="}}
2022-08-29 14:37:14.160 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4962.4833ms
2022-08-29 14:37:17.062 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-29 14:37:17.064 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:17.067 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:17.070 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 7.8990ms
2022-08-29 14:37:17.099 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-29 14:37:17.101 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:17.102 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.103 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-29 14:37:17.120 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-29 14:37:17.127 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-29 14:37:17.129 +03:00 [INF] RequestBody: 
2022-08-29 14:37:17.130 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"LKXJfwawtECPNzXK5EdN4A","connectionToken":"aAS-dGbqjiLjeJIMsnbIzw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-29 14:37:17.132 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 32.8692ms
2022-08-29 14:37:17.162 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=aAS-dGbqjiLjeJIMsnbIzw - -
2022-08-29 14:37:17.174 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-29 14:37:17.176 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.178 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-29 14:37:37.993 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:37:37.995 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:37.997 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:37.998 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:37.999 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.5526ms
2022-08-29 14:37:38.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:37:38.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:38.013 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:38.349 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:37:38.365 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:37:38.398 +03:00 [INF] Get All Products
2022-08-29 14:37:38.479 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:37:38.707 +03:00 [INF] Executed DbCommand (141ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:37:38.736 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:37:38.747 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:37:38.777 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:37:38.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:37:38.812 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:37:38.817 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 443.0183ms
2022-08-29 14:37:38.818 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:37:38.822 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:37:38.826 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 821.7841ms
2022-08-29 14:38:03.325 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:03.328 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:03.333 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:03.335 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:03.336 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 11.2171ms
2022-08-29 14:38:03.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:03.349 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:03.353 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:03.356 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:03.358 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:03.362 +03:00 [INF] Get All Products
2022-08-29 14:38:03.375 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:03.379 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:03.384 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:03.395 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:03.396 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:03.399 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 39.1823ms
2022-08-29 14:38:03.401 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:03.411 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:03.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 76.3759ms
2022-08-29 14:38:05.894 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-29 14:38:05.897 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:05.900 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:05.901 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:05.902 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.8080ms
2022-08-29 14:38:05.907 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-29 14:38:05.918 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:05.923 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:05.926 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-29 14:38:05.930 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:05.941 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:06.452 +03:00 [INF] Executed DbCommand (161ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-29 14:38:06.617 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-29 14:38:06.620 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:06.622 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 688.108ms
2022-08-29 14:38:06.624 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-29 14:38:06.627 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-29 14:38:06.628 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 721.0870ms
2022-08-29 14:38:15.804 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:15.806 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:15.813 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:15.816 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:15.820 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 15.5270ms
2022-08-29 14:38:15.828 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:15.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:15.840 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:15.843 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:15.847 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:15.856 +03:00 [INF] Get All Products
2022-08-29 14:38:15.858 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:15.868 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:15.873 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:38:15.886 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:38:15.895 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-29 14:38:15.900 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:15.902 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:15.916 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 64.1099ms
2022-08-29 14:38:15.923 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:15.925 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:15.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 102.5770ms
2022-08-29 14:38:16.958 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:16.961 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:16.968 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:16.983 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:16.988 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 30.7652ms
2022-08-29 14:38:16.995 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:16.997 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:16.999 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:17.021 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:17.025 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:17.031 +03:00 [INF] Get All Products
2022-08-29 14:38:17.034 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:17.042 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:17.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:17.058 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:17.060 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:17.064 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 33.1197ms
2022-08-29 14:38:17.075 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:17.078 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:17.104 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 109.6191ms
2022-08-29 14:38:19.247 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:19.249 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:19.257 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:19.258 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:19.262 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 16.6180ms
2022-08-29 14:38:19.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:19.268 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:19.280 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:19.282 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:19.283 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:19.290 +03:00 [INF] Get All Products
2022-08-29 14:38:19.293 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:19.297 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:19.306 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:19.312 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:19.314 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:19.324 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 34.4807ms
2022-08-29 14:38:19.326 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:19.328 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ed0b79e4-889b-4b7b-835e-210870bdfb46","name":"sdaass","stock":1,"price":112,"createdDate":"2022-08-24T18:53:54.138928Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:19.330 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 62.0731ms
2022-08-29 14:38:34.187 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - -
2022-08-29 14:38:34.191 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:34.196 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:34.198 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:34.208 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - - - 204 - - 21.1027ms
2022-08-29 14:38:34.214 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - -
2022-08-29 14:38:34.215 +03:00 [INF] Request:
Protocol: HTTP/2
Method: DELETE
Scheme: https
PathBase: 
Path: /api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:34.228 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:34.231 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API)'
2022-08-29 14:38:34.247 +03:00 [INF] Route matched with {action = "Delete", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(eTrade.Application.Features.Commands.Product.RemoveProduct.RemoveProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:34.260 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:34.273 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-29 14:38:34.513 +03:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Products"
WHERE "Id" = @p0;
2022-08-29 14:38:34.538 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-29 14:38:34.540 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API) in 287.3156ms
2022-08-29 14:38:34.548 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API)'
2022-08-29 14:38:34.553 +03:00 [INF] Response:
StatusCode: 200
2022-08-29 14:38:34.562 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - - - 200 0 - 347.7719ms
2022-08-29 14:38:35.295 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:35.297 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:35.300 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:35.304 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:35.307 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 12.0981ms
2022-08-29 14:38:35.320 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:35.327 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:35.331 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:35.333 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:35.335 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:35.339 +03:00 [INF] Get All Products
2022-08-29 14:38:35.341 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:35.343 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:35.348 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:35.363 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:35.367 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:35.370 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.066ms
2022-08-29 14:38:35.374 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:35.377 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:35.382 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 62.3950ms
2022-08-29 14:38:49.820 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:49.821 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:49.826 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:49.828 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:49.830 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 10.1577ms
2022-08-29 14:38:49.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:49.842 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:49.847 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:49.850 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:49.852 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:49.859 +03:00 [INF] Get All Products
2022-08-29 14:38:49.860 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:49.862 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:49.879 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:49.885 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:49.888 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:49.890 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.2068ms
2022-08-29 14:38:49.893 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:49.902 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:49.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 66.4855ms
2022-08-29 14:38:51.307 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:51.310 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:51.324 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:51.326 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:51.338 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 31.1734ms
2022-08-29 14:38:51.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:51.356 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:51.371 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:51.381 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:51.386 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:51.395 +03:00 [INF] Get All Products
2022-08-29 14:38:51.398 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:51.401 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:51.407 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-29 14:38:51.420 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:51.422 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:51.427 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 34.2399ms
2022-08-29 14:38:51.431 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:51.433 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:51.448 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 95.3734ms
2022-08-29 14:38:55.567 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:55.568 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:55.578 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:55.580 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:55.583 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 16.4106ms
2022-08-29 14:38:55.591 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:55.595 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:55.598 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:55.600 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:55.613 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:55.625 +03:00 [INF] Get All Products
2022-08-29 14:38:55.628 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:55.642 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:55.648 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:55.656 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:55.659 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:55.664 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 40.4144ms
2022-08-29 14:38:55.673 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:55.674 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:55.685 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 93.1076ms
2022-08-29 14:43:09.252 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 14:43:09.911 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 14:43:09.914 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 14:43:09.919 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 14:43:09.920 +03:00 [INF] Hosting environment: Development
2022-08-29 14:43:09.921 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 14:44:06.436 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:44:06.580 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:44:06.590 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:44:06.596 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:44:06.611 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 181.6581ms
2022-08-29 14:44:06.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:44:06.630 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:44:06.632 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:44:06.996 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:44:07.047 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:44:07.398 +03:00 [INF] Get All Products
2022-08-29 14:44:08.862 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:44:09.315 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:44:09.377 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:44:09.380 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:44:09.442 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:44:09.467 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:44:09.492 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:44:09.506 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2446.7132ms
2022-08-29 14:44:09.510 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:44:09.514 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:44:09.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 2915.6968ms
2022-08-29 14:47:23.740 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:47:23.751 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:47:23.753 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:47:23.754 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:47:23.755 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 14.9492ms
2022-08-29 14:47:23.760 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:47:23.761 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:47:23.763 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:47:23.769 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:47:23.770 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:47:23.773 +03:00 [INF] Get All Products
2022-08-29 14:47:23.828 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:47:23.835 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:47:23.842 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:47:23.846 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:47:23.848 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:47:23.850 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 78.0129ms
2022-08-29 14:47:23.852 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:47:23.854 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:47:23.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 95.7108ms
2022-08-29 18:02:15.594 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 18:02:15.598 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:15.603 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:15.606 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:02:15.609 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 15.7682ms
2022-08-29 18:02:15.625 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 18:02:15.633 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:15.641 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:15.647 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:02:15.666 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 18:02:15.699 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 18:02:15.748 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:02:16.093 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:02:16.422 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:02:16.689 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 18:02:16.774 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 18:02:16.780 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:02:16.785 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1114.8288ms
2022-08-29 18:02:16.790 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:02:16.796 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3ODUzMzYsImV4cCI6MTY2MTc4NjIzNiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.s--kFLPm7c_xpKBfMgARH9fftIrAafi8j993l6wfwEs","expiration":"2022-08-29T15:17:16.3799819Z","refreshToken":"2+BUxVo1LPgu+qNrdhyu4g6xfy/s31wXzHb0/nZocpw="}}
2022-08-29 18:02:16.807 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 1181.5922ms
2022-08-29 18:02:16.954 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 18:02:16.956 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:16.959 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:16.959 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:02:16.961 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.9430ms
2022-08-29 18:02:16.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 18:02:16.974 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:16.976 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:16.981 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:02:16.984 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:02:16.990 +03:00 [INF] Get All Products
2022-08-29 18:02:16.992 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:02:16.996 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:02:17.000 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:02:17.003 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:02:17.005 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:02:17.006 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.2663ms
2022-08-29 18:02:17.008 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:02:17.009 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:02:17.014 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 41.3456ms
2022-08-29 18:26:37.407 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 18:26:38.166 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 18:26:38.168 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 18:26:38.174 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 18:26:38.175 +03:00 [INF] Hosting environment: Development
2022-08-29 18:26:38.176 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 18:26:38.489 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:38.566 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.574 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.580 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:26:38.585 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 18:26:38.589 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.591 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.593 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:26:38.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 9.5673ms
2022-08-29 18:26:38.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 111.3439ms
2022-08-29 18:26:38.597 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:38.599 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 18:26:38.604 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.609 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.612 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.614 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.646 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:26:38.646 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:38.698 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 18:26:38.698 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:26:38.751 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 18:26:39.459 +03:00 [INF] Get All Products
2022-08-29 18:26:40.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:40.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:41.329 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:26:41.380 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 18:26:41.381 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 18:26:41.414 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:26:41.430 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:26:41.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:26:41.463 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:41.474 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2764.5461ms
2022-08-29 18:26:41.477 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:41.477 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:26:41.491 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 2894.8577ms
2022-08-29 18:26:42.160 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:26:42.309 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 18:26:42.370 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 18:26:42.374 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:42.376 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3674.4083ms
2022-08-29 18:26:42.379 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:26:42.383 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3ODY4MDEsImV4cCI6MTY2MTc4NzcwMSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.1dWirX3NzELjVCkmCJy4tks5Q1OkxeIQtcOA_-8hstk","expiration":"2022-08-29T15:41:41.8391718Z","refreshToken":"GsD5rk2oa98J7yqCXLWaVTlEdN5KMj1ZuLF2FwalU+A="}}
2022-08-29 18:26:42.391 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3791.5938ms
2022-08-29 18:26:43.141 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:43.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:43.144 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:43.148 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:43.149 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:26:43.155 +03:00 [INF] Get All Products
2022-08-29 18:26:43.202 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:43.205 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:26:43.208 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:26:43.210 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:26:43.211 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:43.213 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 61.4094ms
2022-08-29 18:26:43.216 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:43.218 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:26:43.221 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 79.2245ms
2022-08-29 18:27:05.096 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:27:05.098 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:27:05.100 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:27:05.101 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:27:05.103 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.0690ms
2022-08-29 18:27:05.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:27:05.113 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:27:05.117 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:27:05.119 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:27:05.119 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:27:05.124 +03:00 [INF] Get All Products
2022-08-29 18:27:05.126 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:27:05.130 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:27:05.133 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:27:05.136 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:27:05.137 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:27:05.139 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.4189ms
2022-08-29 18:27:05.146 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:27:05.147 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:27:05.151 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.6351ms
2022-08-29 18:28:28.559 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:28:28.560 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:28:28.563 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:28:28.565 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:28:28.567 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3700ms
2022-08-29 18:28:28.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:28:28.578 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:28:28.580 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:28:28.583 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:28:28.584 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:28:28.588 +03:00 [INF] Get All Products
2022-08-29 18:28:28.590 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:28:28.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:28:28.598 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:28:28.605 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:28:28.606 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:28:28.609 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.544ms
2022-08-29 18:28:28.611 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:28:28.612 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:28:28.616 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 40.9543ms
2022-08-29 18:29:23.722 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:23.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:23.736 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:23.737 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:23.739 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.8135ms
2022-08-29 18:29:23.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:23.746 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:23.748 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:23.750 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:23.753 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:23.757 +03:00 [INF] Get All Products
2022-08-29 18:29:23.759 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:23.766 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:23.771 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:23.777 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:23.779 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:23.783 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.356ms
2022-08-29 18:29:23.791 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:23.793 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:23.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 55.0265ms
2022-08-29 18:29:34.447 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:34.455 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:34.457 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:34.458 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:34.460 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.1491ms
2022-08-29 18:29:34.468 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:34.474 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:34.477 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:34.479 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:34.482 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:34.487 +03:00 [INF] Get All Products
2022-08-29 18:29:34.489 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:34.492 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:34.495 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:34.498 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:34.500 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:34.501 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.726ms
2022-08-29 18:29:34.502 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:34.503 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:34.506 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.7046ms
2022-08-29 18:29:55.230 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:55.239 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:55.242 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:55.244 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:55.246 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.8880ms
2022-08-29 18:29:55.252 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:55.253 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:55.256 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:55.258 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:55.260 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:55.265 +03:00 [INF] Get All Products
2022-08-29 18:29:55.268 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:55.272 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:55.279 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:55.283 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:55.286 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:55.288 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.2574ms
2022-08-29 18:29:55.291 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:55.293 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:55.302 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 50.7044ms
2022-08-29 18:30:01.134 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:01.136 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:01.140 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:01.142 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:01.144 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.3205ms
2022-08-29 18:30:01.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:01.156 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:01.160 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:01.161 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:01.164 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:01.170 +03:00 [INF] Get All Products
2022-08-29 18:30:01.171 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:01.174 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:01.178 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:01.184 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:01.186 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:01.188 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.0867ms
2022-08-29 18:30:01.191 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:01.193 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:01.198 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.0412ms
2022-08-29 18:30:15.954 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:15.956 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:15.960 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:15.961 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:15.963 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0096ms
2022-08-29 18:30:15.967 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:15.969 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:15.972 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:15.973 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:15.976 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:15.981 +03:00 [INF] Get All Products
2022-08-29 18:30:15.983 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:15.987 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:15.992 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:15.997 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:15.999 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:16.002 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.6128ms
2022-08-29 18:30:16.004 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:16.007 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:16.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 48.1016ms
2022-08-29 18:30:30.534 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:30.536 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:30.542 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:30.543 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:30.546 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.5713ms
2022-08-29 18:30:30.559 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:30.562 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:30.567 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:30.575 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:30.579 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:30.586 +03:00 [INF] Get All Products
2022-08-29 18:30:30.588 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:30.593 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:30.597 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:30.601 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:30.603 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:30.604 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.0983ms
2022-08-29 18:30:30.605 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:30.606 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:30.610 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 50.3473ms
2022-08-29 18:30:53.958 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:53.960 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:53.963 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:53.964 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:53.966 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.6073ms
2022-08-29 18:30:53.976 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:53.977 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:53.980 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:53.982 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:53.985 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:53.990 +03:00 [INF] Get All Products
2022-08-29 18:30:53.992 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:53.996 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:54.000 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:54.003 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:54.005 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:54.007 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.7368ms
2022-08-29 18:30:54.009 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:54.011 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:54.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 39.4652ms
2022-08-29 18:31:04.522 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:31:04.535 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:31:04.538 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:31:04.540 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:31:04.542 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 19.7787ms
2022-08-29 18:31:04.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:31:04.551 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:31:04.554 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:31:04.556 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:31:04.558 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:31:04.562 +03:00 [INF] Get All Products
2022-08-29 18:31:04.563 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:31:04.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:31:04.568 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:31:04.572 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:31:04.573 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:31:04.575 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.7054ms
2022-08-29 18:31:04.578 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:31:04.580 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:31:04.586 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.4102ms
2022-08-30 08:16:44.136 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 08:16:44.855 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 08:16:44.856 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 08:16:44.860 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 08:16:44.861 +03:00 [INF] Hosting environment: Development
2022-08-30 08:16:44.862 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 08:20:06.157 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:06.266 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:06.273 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:06.276 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:06.296 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 144.0305ms
2022-08-30 08:20:06.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:06.314 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:06.319 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:06.351 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:06.400 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:07.173 +03:00 [INF] Get All Products
2022-08-30 08:20:09.042 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:09.510 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:09.592 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:20:09.594 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:20:09.652 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:09.684 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:09.715 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:09.729 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3316.8857ms
2022-08-30 08:20:09.731 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:09.737 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:09.753 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3453.9471ms
2022-08-30 08:20:10.957 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 08:20:10.960 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:10.968 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:10.971 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:10.973 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 16.8539ms
2022-08-30 08:20:10.977 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 08:20:10.982 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:10.987 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:10.988 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:20:10.992 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 08:20:11.004 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 08:20:11.066 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:11.220 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:20:12.133 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:20:12.320 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 08:20:12.399 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 08:20:12.404 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:12.407 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1412.3351ms
2022-08-30 08:20:12.411 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:20:12.415 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4MzY4MTEsImV4cCI6MTY2MTgzNzcxMSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.IkPAl9T_51Kt8lA9h_Z5Y8wUCRdk03VwnS4h0HMQHoE","expiration":"2022-08-30T05:35:11.7359885Z","refreshToken":"wQtkHIQDkurMaytNmm5PDSO0vOOL1cakem+xa5WNc94="}}
2022-08-30 08:20:12.425 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 1447.0485ms
2022-08-30 08:20:14.143 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:14.146 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:14.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:14.153 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:14.156 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.5112ms
2022-08-30 08:20:14.162 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:14.164 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:14.172 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:14.175 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:14.178 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:14.181 +03:00 [INF] Get All Products
2022-08-30 08:20:14.190 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:14.193 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:14.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:14.199 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:14.200 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:14.201 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.8912ms
2022-08-30 08:20:14.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:14.203 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:14.207 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.5509ms
2022-08-30 08:20:21.021 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:21.022 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:21.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:21.028 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:21.031 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0584ms
2022-08-30 08:20:21.055 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:21.056 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:21.062 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:21.064 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:21.066 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:21.078 +03:00 [INF] Get All Products
2022-08-30 08:20:21.080 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:21.084 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:21.088 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:21.096 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:21.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:21.100 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.4301ms
2022-08-30 08:20:21.101 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:21.102 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:21.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 52.0870ms
2022-08-30 08:21:12.045 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:21:12.049 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:21:12.051 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:21:12.053 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:21:12.058 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.0803ms
2022-08-30 08:21:12.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:21:12.071 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:21:12.079 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:21:12.087 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:21:12.089 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:21:12.092 +03:00 [INF] Get All Products
2022-08-30 08:21:12.094 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:21:12.100 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:21:12.105 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:21:12.109 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:21:12.113 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:21:12.119 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.9265ms
2022-08-30 08:21:12.121 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:21:12.122 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:21:12.126 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 56.0323ms
2022-08-30 08:22:42.572 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:22:42.602 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:22:42.611 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:22:42.620 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:22:42.625 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 52.9926ms
2022-08-30 08:22:42.629 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:22:42.631 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:22:42.633 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:22:42.637 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:22:42.640 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:22:42.655 +03:00 [INF] Get All Products
2022-08-30 08:22:42.671 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:22:42.691 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:22:42.695 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:22:42.703 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:22:42.706 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:22:42.707 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 53.4204ms
2022-08-30 08:22:42.709 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:22:42.719 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:22:42.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 97.0166ms
2022-08-30 08:23:42.486 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:23:42.496 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:23:42.499 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:23:42.505 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:23:42.508 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.1109ms
2022-08-30 08:23:42.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:23:42.518 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:23:42.519 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:23:42.520 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:23:42.524 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:23:42.528 +03:00 [INF] Get All Products
2022-08-30 08:23:42.530 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:23:42.534 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:23:42.536 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:23:42.540 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:23:42.541 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:23:42.542 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.8507ms
2022-08-30 08:23:42.543 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:23:42.544 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:23:42.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 31.7665ms
2022-08-30 08:24:26.084 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:24:26.099 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:26.104 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:26.105 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:24:26.106 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.5054ms
2022-08-30 08:24:26.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:24:26.115 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:26.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:26.119 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:26.120 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:24:26.124 +03:00 [INF] Get All Products
2022-08-30 08:24:26.127 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:24:26.131 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:24:26.134 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:24:26.137 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:24:26.138 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:24:26.139 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.9582ms
2022-08-30 08:24:26.142 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:26.144 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:24:26.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.6627ms
2022-08-30 08:24:50.832 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:24:50.838 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:50.842 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:50.844 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:24:50.846 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 13.9960ms
2022-08-30 08:24:50.854 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:24:50.856 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:50.861 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:50.862 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:50.867 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:24:50.872 +03:00 [INF] Get All Products
2022-08-30 08:24:50.874 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:24:50.878 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:24:50.883 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:24:50.888 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:24:50.889 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:24:50.890 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.0688ms
2022-08-30 08:24:50.892 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:50.897 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:24:50.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 45.1699ms
2022-08-30 08:26:34.327 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:34.334 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:34.338 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:34.339 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:34.345 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 18.9889ms
2022-08-30 08:26:34.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:34.352 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:34.354 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:34.354 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:34.355 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:34.361 +03:00 [INF] Get All Products
2022-08-30 08:26:34.362 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:34.365 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:34.367 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:26:34.370 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:34.373 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:34.375 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.541ms
2022-08-30 08:26:34.376 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:34.378 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:34.381 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.5188ms
2022-08-30 08:26:44.026 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:26:44.028 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:44.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:44.033 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:44.036 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.9649ms
2022-08-30 08:26:44.042 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:26:44.044 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:44.050 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:44.053 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:44.055 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:44.060 +03:00 [INF] Get All Products
2022-08-30 08:26:44.063 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:44.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:44.069 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:26:44.070 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:26:44.074 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:26:44.077 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:44.079 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:44.080 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.9547ms
2022-08-30 08:26:44.081 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:44.083 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:44.084 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.7593ms
2022-08-30 08:26:57.064 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:57.067 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:57.069 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:57.069 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:57.071 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.1178ms
2022-08-30 08:26:57.075 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:57.076 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:57.078 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:57.079 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:57.080 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:57.083 +03:00 [INF] Get All Products
2022-08-30 08:26:57.084 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:57.087 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:57.092 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:26:57.103 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:57.105 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:57.107 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.248ms
2022-08-30 08:26:57.111 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:57.112 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:57.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.2631ms
2022-08-30 08:30:11.915 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:30:11.916 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:30:11.922 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:30:11.923 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:30:11.931 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.2010ms
2022-08-30 08:30:11.939 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:30:11.950 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:30:11.954 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:30:11.956 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:30:11.957 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:30:11.963 +03:00 [INF] Get All Products
2022-08-30 08:30:11.965 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:30:11.967 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:30:11.970 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:30:11.975 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:30:11.977 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:30:11.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.935ms
2022-08-30 08:30:11.980 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:30:11.982 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:30:11.988 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 48.4803ms
2022-08-30 08:31:12.449 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:12.455 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:12.460 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:12.461 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:31:12.463 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 14.2443ms
2022-08-30 08:31:12.476 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:12.478 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:12.481 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:12.482 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:12.483 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:31:12.488 +03:00 [INF] Get All Products
2022-08-30 08:31:12.492 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:31:12.496 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:31:12.500 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:31:12.506 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:31:12.509 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:31:12.510 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.4271ms
2022-08-30 08:31:12.512 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:12.513 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:31:12.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 40.0599ms
2022-08-30 08:31:41.910 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:41.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:41.915 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:41.917 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:31:41.919 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.2132ms
2022-08-30 08:31:41.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:41.929 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:41.932 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:41.934 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:41.935 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:31:41.942 +03:00 [INF] Get All Products
2022-08-30 08:31:41.943 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:31:41.947 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:31:41.950 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:31:41.953 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:31:41.956 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:31:41.957 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8012ms
2022-08-30 08:31:41.959 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:41.960 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:31:41.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.8644ms
2022-08-30 08:32:07.109 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:07.112 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:07.115 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:07.116 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:07.118 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0420ms
2022-08-30 08:32:07.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:07.126 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:07.129 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:07.131 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:07.133 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:07.144 +03:00 [INF] Get All Products
2022-08-30 08:32:07.145 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:07.223 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:07.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:07.230 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:07.232 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:07.233 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 90.4245ms
2022-08-30 08:32:07.235 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:07.245 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:07.250 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 125.1761ms
2022-08-30 08:32:14.931 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:14.934 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:14.936 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:14.938 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:14.940 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1831ms
2022-08-30 08:32:14.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:14.948 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:14.950 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:14.951 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:14.953 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:14.955 +03:00 [INF] Get All Products
2022-08-30 08:32:14.956 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:14.960 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:14.966 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:14.970 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:14.972 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:14.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.0539ms
2022-08-30 08:32:14.980 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:14.981 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:14.988 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.8830ms
2022-08-30 08:32:38.896 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:38.898 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:38.900 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:38.901 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:38.904 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.3886ms
2022-08-30 08:32:38.911 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:38.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:38.915 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:38.917 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:38.922 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:38.926 +03:00 [INF] Get All Products
2022-08-30 08:32:38.928 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:38.932 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:38.940 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:38.943 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:38.944 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:38.946 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.5905ms
2022-08-30 08:32:38.947 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:38.950 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:38.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 42.7625ms
2022-08-30 08:33:47.220 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:33:47.221 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:33:47.228 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:33:47.229 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:33:47.232 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.0491ms
2022-08-30 08:33:47.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:33:47.240 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:33:47.247 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:33:47.249 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:33:47.251 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:33:47.257 +03:00 [INF] Get All Products
2022-08-30 08:33:47.260 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:33:47.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:33:47.268 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:33:47.274 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:33:47.278 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:33:47.279 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.9348ms
2022-08-30 08:33:47.282 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:33:47.285 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:33:47.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 54.7856ms
2022-08-30 08:35:53.544 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.558 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.572 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.573 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:35:53.575 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 30.2587ms
2022-08-30 08:35:53.585 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.587 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.595 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.599 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.602 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:35:53.613 +03:00 [INF] Get All Products
2022-08-30 08:35:53.615 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:35:53.619 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:35:53.624 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:35:53.628 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:35:53.630 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:35:53.633 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.0132ms
2022-08-30 08:35:53.634 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.639 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:35:53.645 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 59.9082ms
2022-08-30 08:35:53.984 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.985 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.988 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.990 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.991 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:35:53.993 +03:00 [INF] Get All Products
2022-08-30 08:35:53.994 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:35:53.997 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:35:54.001 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:35:54.006 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:35:54.008 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:35:54.009 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.6786ms
2022-08-30 08:35:54.011 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:54.013 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:35:54.023 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.3035ms
2022-08-30 08:37:06.905 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:37:06.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:37:06.917 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:37:06.919 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:37:06.921 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.2300ms
2022-08-30 08:37:06.928 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:37:06.930 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:37:06.936 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:37:06.938 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:37:06.939 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:37:06.947 +03:00 [INF] Get All Products
2022-08-30 08:37:06.949 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:37:06.952 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:37:06.954 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:37:06.960 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:37:06.961 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:37:06.963 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.2385ms
2022-08-30 08:37:06.964 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:37:06.967 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:37:06.971 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 42.5177ms
2022-08-30 08:38:43.619 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:38:43.621 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:38:43.625 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:38:43.626 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:38:43.628 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1715ms
2022-08-30 08:38:43.640 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:38:43.642 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:38:43.647 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:38:43.648 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:38:43.653 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:38:43.658 +03:00 [INF] Get All Products
2022-08-30 08:38:43.660 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:38:43.670 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:38:43.675 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:38:43.683 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:38:43.685 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:38:43.686 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.52ms
2022-08-30 08:38:43.688 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:38:43.689 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:38:43.693 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 53.2339ms
2022-08-30 08:40:36.021 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:36.033 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:36.043 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:36.044 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:40:36.047 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 25.6675ms
2022-08-30 08:40:36.058 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:36.061 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:36.063 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:36.065 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:36.069 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:36.072 +03:00 [INF] Get All Products
2022-08-30 08:40:36.073 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:36.076 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:36.078 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:36.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:36.084 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:36.085 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.4178ms
2022-08-30 08:40:36.087 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:36.089 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:36.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.5761ms
2022-08-30 08:40:48.305 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:48.307 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:48.312 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:48.316 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:40:48.322 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.0300ms
2022-08-30 08:40:48.326 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:48.331 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:48.340 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:48.341 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:48.343 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:48.349 +03:00 [INF] Get All Products
2022-08-30 08:40:48.354 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:48.358 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:48.365 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:48.371 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:48.375 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:48.377 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.8427ms
2022-08-30 08:40:48.379 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:48.396 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:48.402 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 75.3805ms
2022-08-30 08:40:52.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:52.795 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:52.797 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:52.799 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:52.800 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:52.802 +03:00 [INF] Get All Products
2022-08-30 08:40:52.803 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:52.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:52.811 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:52.814 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:52.816 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:52.817 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.7953ms
2022-08-30 08:40:52.819 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:52.823 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:52.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.3564ms
2022-08-30 08:41:39.391 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 08:41:39.398 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:39.408 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:39.410 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:41:39.413 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 21.1896ms
2022-08-30 08:41:39.423 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 08:41:39.428 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:39.429 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:39.430 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:41:39.431 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 08:41:39.434 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 08:41:39.436 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:41:39.442 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:41:39.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:41:39.465 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 08:41:39.470 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 08:41:39.472 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:41:39.473 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 39.2061ms
2022-08-30 08:41:39.474 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:41:39.482 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4MzgwOTksImV4cCI6MTY2MTgzODk5OSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.ut8S17s_SrEz4sxIY4p6wfhCu1sq06U2MUfqJkFVMD8","expiration":"2022-08-30T05:56:39.4556139Z","refreshToken":"cBqq6IqInTIo0+QMU6VQimuQLEDrmQr7AmS6dbnPsGo="}}
2022-08-30 08:41:39.486 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 62.3381ms
2022-08-30 08:41:41.022 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:41:41.023 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:41.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:41.028 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:41:41.030 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.6505ms
2022-08-30 08:41:41.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:41:41.036 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:41.039 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:41.040 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:41:41.041 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:41:41.044 +03:00 [INF] Get All Products
2022-08-30 08:41:41.045 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:41:41.049 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:41:41.053 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:41:41.055 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:41:41.056 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:41:41.057 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.6157ms
2022-08-30 08:41:41.058 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:41:41.061 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:41:41.065 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.9135ms
2022-08-30 08:42:00.279 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:42:00.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:00.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:00.287 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:42:00.290 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.6933ms
2022-08-30 08:42:00.302 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:42:00.310 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:00.316 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:00.317 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:00.318 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:42:00.322 +03:00 [INF] Get All Products
2022-08-30 08:42:00.324 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:42:00.333 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:42:00.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:42:00.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:42:00.338 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:42:00.339 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.9988ms
2022-08-30 08:42:00.341 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:00.342 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:42:00.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.2294ms
2022-08-30 08:42:08.161 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:42:08.163 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:08.167 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:08.169 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:42:08.171 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.9681ms
2022-08-30 08:42:08.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:42:08.179 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:08.187 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:08.189 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:08.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:42:08.195 +03:00 [INF] Get All Products
2022-08-30 08:42:08.197 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:42:08.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:42:08.205 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:42:08.207 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:42:08.208 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:42:08.210 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.6215ms
2022-08-30 08:42:08.211 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:08.212 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:42:08.216 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 38.3354ms
2022-08-30 08:43:28.274 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:43:28.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:43:28.284 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:43:28.285 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:43:28.289 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 15.2983ms
2022-08-30 08:43:28.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:43:28.308 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:43:28.313 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:43:28.314 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:43:28.315 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:43:28.318 +03:00 [INF] Get All Products
2022-08-30 08:43:28.319 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:43:28.323 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:43:28.325 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:43:28.331 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:43:28.332 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:43:28.333 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8796ms
2022-08-30 08:43:28.334 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:43:28.336 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:43:28.337 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 36.9657ms
2022-08-30 08:44:01.755 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:01.756 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:01.760 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:01.761 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:01.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.2042ms
2022-08-30 08:44:01.768 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:01.770 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:01.773 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:01.775 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:01.777 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:01.787 +03:00 [INF] Get All Products
2022-08-30 08:44:01.788 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:01.791 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:01.799 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:44:01.803 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:01.805 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:01.807 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.5877ms
2022-08-30 08:44:01.809 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:01.814 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:01.817 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 48.5407ms
2022-08-30 08:44:31.689 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:31.696 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:31.700 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:31.701 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:31.703 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.2999ms
2022-08-30 08:44:31.712 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:31.715 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:31.719 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:31.720 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:31.721 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:31.725 +03:00 [INF] Get All Products
2022-08-30 08:44:31.726 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:31.732 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:31.735 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:31.737 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:31.739 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:31.741 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.6196ms
2022-08-30 08:44:31.744 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:31.745 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:31.748 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.6681ms
2022-08-30 08:44:34.659 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:34.661 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:34.668 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:34.670 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:34.672 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 12.4974ms
2022-08-30 08:44:34.678 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:34.684 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:34.688 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:34.690 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:34.693 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:34.699 +03:00 [INF] Get All Products
2022-08-30 08:44:34.700 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:34.704 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:34.706 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:44:34.708 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:34.713 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:34.714 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.1181ms
2022-08-30 08:44:34.716 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:34.717 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:34.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 41.4931ms
2022-08-30 08:44:35.896 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:44:35.898 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:35.901 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:35.902 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:35.905 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 8.9897ms
2022-08-30 08:44:35.909 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:44:35.911 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:35.916 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:35.922 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:35.924 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:35.928 +03:00 [INF] Get All Products
2022-08-30 08:44:35.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:35.936 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:35.939 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:35.941 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:35.943 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:35.944 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.7271ms
2022-08-30 08:44:35.945 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:35.947 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:44:35.948 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 38.9457ms
2022-08-30 08:44:37.126 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:44:37.128 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:37.131 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:37.132 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:37.134 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 8.4975ms
2022-08-30 08:44:37.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:44:37.138 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:37.140 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:37.142 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:37.143 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:37.145 +03:00 [INF] Get All Products
2022-08-30 08:44:37.147 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:37.153 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:37.157 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:37.159 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:37.161 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:37.164 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.1133ms
2022-08-30 08:44:37.165 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:37.167 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:44:37.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 31.9519ms
2022-08-30 08:44:43.145 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-2&size=12 - -
2022-08-30 08:44:43.148 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.152 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.154 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:43.156 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-2&size=12 - - - 204 - - 10.7743ms
2022-08-30 08:44:43.161 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-2&size=12 - -
2022-08-30 08:44:43.164 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.168 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.169 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.170 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:43.173 +03:00 [INF] Get All Products
2022-08-30 08:44:43.174 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:43.178 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:43.215 +03:00 [ERR] Failed executing DbCommand (27ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:43.433 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.676 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 503.6205ms
2022-08-30 08:44:43.677 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.718 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-3&size=12 - -
2022-08-30 08:44:43.726 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.728 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.729 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.795 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:43.797 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-3&size=12 - - - 204 - - 78.9206ms
2022-08-30 08:44:43.800 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:43.802 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-3&size=12 - -
2022-08-30 08:44:43.803 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.806 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.808 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-2&size=12 - - - 500 - application/json 647.1148ms
2022-08-30 08:44:43.810 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.813 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:43.816 +03:00 [INF] Get All Products
2022-08-30 08:44:43.817 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:43.820 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:43.826 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:43.830 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.947 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 131.302ms
2022-08-30 08:44:43.948 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.981 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.027 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:44.029 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-3&size=12 - - - 500 - application/json 226.2868ms
2022-08-30 08:44:44.235 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-4&size=12 - -
2022-08-30 08:44:44.236 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:44.240 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:44.241 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:44.244 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-4&size=12 - - - 204 - - 9.2873ms
2022-08-30 08:44:44.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-4&size=12 - -
2022-08-30 08:44:44.251 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:44.255 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:44.256 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:44.257 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:44.260 +03:00 [INF] Get All Products
2022-08-30 08:44:44.263 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:44.265 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:44.270 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:44.274 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.379 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 119.3138ms
2022-08-30 08:44:44.380 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:44.418 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.479 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:44.480 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-4&size=12 - - - 500 - application/json 230.8934ms
2022-08-30 08:44:45.278 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-5&size=12 - -
2022-08-30 08:44:45.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:45.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:45.288 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:45.293 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-5&size=12 - - - 204 - - 14.0897ms
2022-08-30 08:44:45.297 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-5&size=12 - -
2022-08-30 08:44:45.302 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:45.305 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:45.306 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:45.308 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:45.311 +03:00 [INF] Get All Products
2022-08-30 08:44:45.312 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:45.316 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:45.320 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:45.323 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:45.417 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 106.8438ms
2022-08-30 08:44:45.420 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:45.448 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:45.482 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:45.483 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-5&size=12 - - - 500 - application/json 186.1709ms
2022-08-30 08:44:53.287 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - -
2022-08-30 08:44:53.289 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:53.292 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:53.294 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:53.296 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - - - 204 - - 8.1350ms
2022-08-30 08:44:53.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - -
2022-08-30 08:44:53.303 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:53.305 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:53.306 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:53.308 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:53.311 +03:00 [INF] Get All Products
2022-08-30 08:44:53.311 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:53.314 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:53.323 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:53.328 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:53.428 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 117.7205ms
2022-08-30 08:44:53.430 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:53.472 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:53.522 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:53.523 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - - - 500 - application/json 223.7978ms
2022-08-30 08:44:54.006 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:54.008 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:54.010 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:54.012 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:54.014 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.6028ms
2022-08-30 08:44:54.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:54.018 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:54.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:54.029 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:54.032 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:54.035 +03:00 [INF] Get All Products
2022-08-30 08:44:54.038 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:54.040 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:54.042 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:54.044 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:54.045 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:54.046 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.4939ms
2022-08-30 08:44:54.047 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:54.048 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:54.052 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 34.1795ms
2022-08-30 08:45:22.920 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:45:22.921 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:45:22.925 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:45:22.926 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:45:22.929 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.5488ms
2022-08-30 08:45:22.935 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:45:22.936 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:45:22.941 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:45:22.943 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:45:22.946 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:45:22.957 +03:00 [INF] Get All Products
2022-08-30 08:45:22.960 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:45:22.967 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:45:22.971 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:45:22.976 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:45:22.979 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:45:22.983 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 28.0704ms
2022-08-30 08:45:22.985 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:45:22.991 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:45:22.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 64.0143ms
2022-08-30 08:47:05.712 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:05.721 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:05.724 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:05.725 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:47:05.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.0014ms
2022-08-30 08:47:05.737 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:05.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:05.745 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:05.747 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:05.749 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:47:05.761 +03:00 [INF] Get All Products
2022-08-30 08:47:05.764 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:47:05.767 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:47:05.771 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:47:05.773 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:47:05.775 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:47:05.775 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3012ms
2022-08-30 08:47:05.776 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:05.778 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:47:05.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.2057ms
2022-08-30 08:47:34.090 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:34.092 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:34.094 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:34.095 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:47:34.098 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3552ms
2022-08-30 08:47:34.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:34.124 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:34.134 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:34.139 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:34.142 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:47:34.156 +03:00 [INF] Get All Products
2022-08-30 08:47:34.158 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:47:34.168 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:47:34.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:47:34.178 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:47:34.185 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:47:34.188 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.6392ms
2022-08-30 08:47:34.194 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:34.195 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:47:34.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 92.2182ms
2022-08-30 08:48:40.580 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:48:40.587 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:48:40.590 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:48:40.592 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:48:40.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 15.0256ms
2022-08-30 08:48:40.607 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:48:40.615 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:48:40.619 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:48:40.621 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:48:40.622 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:48:40.626 +03:00 [INF] Get All Products
2022-08-30 08:48:40.627 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:48:40.631 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:48:40.634 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:48:40.637 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:48:40.639 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:48:40.640 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.539ms
2022-08-30 08:48:40.642 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:48:40.645 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:48:40.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.8716ms
2022-08-30 08:49:31.496 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:31.503 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:31.507 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:31.508 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:31.510 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 13.8914ms
2022-08-30 08:49:31.520 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:31.523 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:31.526 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:31.529 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:31.530 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:31.537 +03:00 [INF] Get All Products
2022-08-30 08:49:31.539 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:31.543 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:31.545 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:49:31.550 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:31.551 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:31.552 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.1175ms
2022-08-30 08:49:31.554 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:31.555 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:31.557 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 37.0289ms
2022-08-30 08:49:33.801 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:33.802 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:33.807 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:33.809 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:33.816 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.2426ms
2022-08-30 08:49:33.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:33.825 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:33.831 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:33.833 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:33.835 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:33.837 +03:00 [INF] Get All Products
2022-08-30 08:49:33.838 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:33.842 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:33.846 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:49:33.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:33.850 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:33.851 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.2669ms
2022-08-30 08:49:33.853 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:33.855 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:33.860 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.6098ms
2022-08-30 08:49:36.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:36.114 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:36.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:36.120 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:36.121 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:36.123 +03:00 [INF] Get All Products
2022-08-30 08:49:36.125 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:36.131 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:36.134 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:49:36.137 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:36.139 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:36.140 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.3901ms
2022-08-30 08:49:36.144 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:36.147 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:36.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 35.5174ms
2022-08-30 08:49:40.003 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:40.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:40.009 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:40.011 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:40.013 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.7311ms
2022-08-30 08:49:40.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:40.019 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:40.026 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:40.027 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:40.030 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:40.032 +03:00 [INF] Get All Products
2022-08-30 08:49:40.033 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:40.036 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:40.042 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:49:40.045 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:40.048 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:40.049 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.972ms
2022-08-30 08:49:40.051 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:40.052 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:40.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.3599ms
2022-08-30 08:56:27.634 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:27.635 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:27.641 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:27.644 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:27.647 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.7363ms
2022-08-30 08:56:27.666 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:27.679 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:27.685 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:27.687 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:27.690 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:27.694 +03:00 [INF] Get All Products
2022-08-30 08:56:27.696 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:27.796 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:27.799 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:27.801 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:27.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:27.805 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 112.6519ms
2022-08-30 08:56:27.817 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:27.823 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:27.832 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 166.1146ms
2022-08-30 08:56:30.613 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:30.615 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:30.619 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:30.621 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:30.623 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.8318ms
2022-08-30 08:56:30.627 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:30.629 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:30.631 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:30.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:30.634 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:30.636 +03:00 [INF] Get All Products
2022-08-30 08:56:30.637 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:30.644 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:30.646 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:56:30.649 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:30.650 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:30.651 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.4097ms
2022-08-30 08:56:30.653 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:30.656 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:30.658 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 31.4059ms
2022-08-30 08:56:33.491 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:33.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:33.497 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:33.499 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:33.501 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.3161ms
2022-08-30 08:56:33.505 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:33.507 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:33.513 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:33.514 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:33.515 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:33.518 +03:00 [INF] Get All Products
2022-08-30 08:56:33.519 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:33.522 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:33.525 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:33.530 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:33.533 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:33.534 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.2106ms
2022-08-30 08:56:33.536 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:33.539 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:33.550 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.4457ms
2022-08-30 08:56:36.334 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:36.335 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:36.339 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:36.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:36.342 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.5515ms
2022-08-30 08:56:36.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:36.349 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:36.352 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:36.353 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:36.354 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:36.357 +03:00 [INF] Get All Products
2022-08-30 08:56:36.357 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:36.360 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:36.366 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:56:36.368 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:36.370 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:36.372 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3779ms
2022-08-30 08:56:36.373 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:36.375 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:36.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 30.8664ms
2022-08-30 08:56:37.804 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:56:37.805 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:37.809 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:37.810 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:37.811 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 7.4765ms
2022-08-30 08:56:37.814 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:56:37.815 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:37.817 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:37.818 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:37.818 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:37.821 +03:00 [INF] Get All Products
2022-08-30 08:56:37.822 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:37.824 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:37.826 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:37.831 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:37.832 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:37.833 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.4712ms
2022-08-30 08:56:37.835 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:37.837 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:56:37.838 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 23.6002ms
2022-08-30 08:56:39.291 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:56:39.294 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:39.300 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:39.305 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:39.306 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 15.1142ms
2022-08-30 08:56:39.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:56:39.313 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:39.318 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:39.320 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:39.324 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:39.326 +03:00 [INF] Get All Products
2022-08-30 08:56:39.327 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:39.330 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:39.335 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:39.338 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:39.339 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:39.340 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.435ms
2022-08-30 08:56:39.341 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:39.343 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:56:39.344 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 32.2163ms
2022-08-30 08:56:40.857 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:40.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:40.862 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:40.864 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:40.866 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.9030ms
2022-08-30 08:56:40.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:40.872 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:40.874 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:40.875 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:40.876 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:40.879 +03:00 [INF] Get All Products
2022-08-30 08:56:40.880 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:40.886 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:40.889 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:40.893 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:40.894 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:40.895 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.5209ms
2022-08-30 08:56:40.896 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:40.900 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:40.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.8867ms
2022-08-30 08:58:33.635 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:58:33.642 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:58:33.654 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:58:33.655 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:58:33.658 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.9374ms
2022-08-30 08:58:33.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:58:33.670 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:58:33.673 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:58:33.704 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:58:33.723 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:58:33.734 +03:00 [INF] Get All Products
2022-08-30 08:58:33.736 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:58:33.745 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:58:33.749 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:58:33.758 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:58:33.760 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:58:33.762 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.3912ms
2022-08-30 08:58:33.773 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:58:33.779 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:58:33.793 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 124.2007ms
2022-08-30 08:59:39.448 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:59:39.449 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:59:39.454 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:59:39.464 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:59:39.468 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 21.0968ms
2022-08-30 08:59:39.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:59:39.480 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:59:39.484 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:59:39.487 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:59:39.490 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:59:39.506 +03:00 [INF] Get All Products
2022-08-30 08:59:39.513 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:59:39.525 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:59:39.534 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:59:39.545 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:59:39.548 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:59:39.553 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 48.106ms
2022-08-30 08:59:39.558 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:59:39.560 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:59:39.566 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 88.5887ms
2022-08-30 09:03:23.869 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 09:03:23.875 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:23.884 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:23.885 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:23.886 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 17.0968ms
2022-08-30 09:03:23.890 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 09:03:23.891 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:23.894 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:23.895 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 09:03:23.896 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 09:03:23.898 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 09:03:23.912 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:24.040 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 09:03:24.056 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 09:03:24.064 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 09:03:24.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 09:03:24.074 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:24.075 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 177.4997ms
2022-08-30 09:03:24.079 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 09:03:24.080 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4Mzk0MDQsImV4cCI6MTY2MTg0MDMwNCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.VukX1ZpQu1f_sRHbqxYdSkIwvo_BA71ds3Lvjq5WaY4","expiration":"2022-08-30T06:18:24.0545508Z","refreshToken":"8D75QoI1HVrhiS/OsvdRNZ4uvbNsZihh4p0PPvhHEf4="}}
2022-08-30 09:03:24.083 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 192.9767ms
2022-08-30 09:03:24.827 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 09:03:24.830 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:24.837 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.842 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:24.847 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 19.5037ms
2022-08-30 09:03:24.861 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 09:03:24.862 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:24.864 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.865 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 09:03:24.878 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 09:03:24.881 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 09:03:24.884 +03:00 [INF] RequestBody: 
2022-08-30 09:03:24.889 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"gKn43inN_5_0P_EYr6_Rhg","connectionToken":"1gEJQLHwYsYyS5Zhn96eFw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 09:03:24.891 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 30.3708ms
2022-08-30 09:03:24.914 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=1gEJQLHwYsYyS5Zhn96eFw - -
2022-08-30 09:03:24.915 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 09:03:24.919 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.921 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 09:03:27.304 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 09:03:27.306 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:27.308 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:27.309 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:27.311 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.6907ms
2022-08-30 09:03:27.314 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 09:03:27.315 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:27.317 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:27.319 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 09:03:27.320 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:27.322 +03:00 [INF] Get All Products
2022-08-30 09:03:27.323 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:27.326 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 09:03:27.329 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 09:03:27.335 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 09:03:27.337 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:27.339 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.2605ms
2022-08-30 09:03:27.340 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 09:03:27.342 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 09:03:27.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 32.5323ms
2022-08-30 09:03:29.188 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:29.190 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:29.193 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:29.194 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:29.195 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.4891ms
2022-08-30 09:03:29.199 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:29.202 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:29.203 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:29.449 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:03:29.454 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:29.461 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:29.810 +03:00 [INF] Executed DbCommand (107ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 09:03:29.893 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 09:03:29.900 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:29.902 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 444.6145ms
2022-08-30 09:03:29.910 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:03:29.914 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-30 09:03:29.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 716.9761ms
2022-08-30 09:03:49.373 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:49.375 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:49.378 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:49.379 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:49.380 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.6491ms
2022-08-30 09:03:49.385 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 multipart/form-data;+boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR 152986
2022-08-30 09:03:49.387 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 152986
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:49.391 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:49.395 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 09:03:49.400 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:53.172 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:53.181 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-30 09:03:53.394 +03:00 [INF] Executed DbCommand (109ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-30 09:03:53.420 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@p6='?' (DbType = Guid), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p6, @p7);
2022-08-30 09:03:53.433 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-30 09:03:53.436 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 4032.0767ms
2022-08-30 09:03:53.438 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 09:03:53.440 +03:00 [INF] Response:
StatusCode: 200
2022-08-30 09:03:53.444 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 multipart/form-data;+boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR 152986 - 200 0 - 4059.0819ms
2022-08-30 09:04:01.013 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:04:01.016 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:04:01.019 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:04:01.020 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:04:01.022 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.5284ms
2022-08-30 09:04:01.026 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:04:01.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:04:01.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:04:01.034 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:04:01.037 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:04:01.042 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:04:01.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 09:04:01.050 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 09:04:01.053 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:04:01.055 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 13.5692ms
2022-08-30 09:04:01.056 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:04:01.057 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 09:04:01.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 32.3561ms
2022-08-30 09:13:28.513 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:13:40.763 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:13:41.151 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-08-30 09:13:41.213 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-08-30 09:13:41.353 +03:00 [INF] Executed DbCommand (132ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-08-30 09:13:41.372 +03:00 [INF] Applying migration '20220830061328_mig_10'.
2022-08-30 09:13:41.492 +03:00 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Files" ADD "Showcase" boolean NULL;
2022-08-30 09:13:41.494 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220830061328_mig_10', '6.0.4');
2022-08-30 09:15:26.032 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 09:15:26.390 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 09:15:26.391 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 09:15:26.395 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 09:15:26.396 +03:00 [INF] Hosting environment: Development
2022-08-30 09:15:26.397 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:08:14.649 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:08:15.603 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:08:15.605 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:08:15.608 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:08:15.609 +03:00 [INF] Hosting environment: Development
2022-08-30 11:08:15.610 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:23:37.087 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:23:37.171 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:37.179 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:37.185 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:37.204 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 120.5390ms
2022-08-30 11:23:37.209 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:23:37.219 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:37.223 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:37.257 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:23:37.309 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:23:37.380 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:23:39.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:40.122 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:23:40.969 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:23:41.156 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:23:41.240 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:23:41.253 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:41.262 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3941.1936ms
2022-08-30 11:23:41.263 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:23:41.267 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDc4MjAsImV4cCI6MTY2MTg0ODcyMCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.uP4UEbc1JrJsD0GRiONrdgi-UKuSFzA_XLygLoh9frc","expiration":"2022-08-30T08:38:40.6201655Z","refreshToken":"dGxW7gxO3c5i5Vu9iRdXgORsJchfMcXOHr2vQpG9uww="}}
2022-08-30 11:23:41.288 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4079.7758ms
2022-08-30 11:23:41.355 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:23:41.357 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:41.359 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:41.360 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:41.361 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.9135ms
2022-08-30 11:23:41.365 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:23:41.378 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:41.386 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:41.388 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:23:41.398 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:23:41.430 +03:00 [INF] Get All Products
2022-08-30 11:23:41.490 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:41.543 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:23:41.561 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:23:41.563 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:23:41.582 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:23:41.595 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:23:41.613 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:41.616 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 214.4122ms
2022-08-30 11:23:41.617 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:23:41.622 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:23:41.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 265.6992ms
2022-08-30 11:23:44.279 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:23:44.282 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:44.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:44.288 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:44.291 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 11.8275ms
2022-08-30 11:23:44.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:23:44.300 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:44.306 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:44.554 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:23:44.560 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:23:44.580 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:44.890 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:23:45.010 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:23:45.017 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:45.021 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 457.0758ms
2022-08-30 11:23:45.027 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:23:45.031 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:23:45.034 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 738.4469ms
2022-08-30 11:24:30.839 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:24:30.841 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:24:30.846 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:24:30.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:24:30.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 9.3489ms
2022-08-30 11:24:30.853 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 application/json 2
2022-08-30 11:24:30.861 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 2
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:24:30.864 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:24:30.865 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2022-08-30 11:24:30.866 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2022-08-30 11:24:30.867 +03:00 [INF] RequestBody: 
2022-08-30 11:24:30.867 +03:00 [INF] Response:
StatusCode: 405
Allow: DELETE, GET
2022-08-30 11:24:30.873 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 application/json 2 - 405 0 - 19.6072ms
2022-08-30 11:25:27.458 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:25:27.852 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:25:27.853 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:25:27.858 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:25:27.859 +03:00 [INF] Hosting environment: Development
2022-08-30 11:25:27.859 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:26:38.652 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:26:38.745 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:38.753 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:38.759 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:38.779 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 130.4370ms
2022-08-30 11:26:38.792 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:26:38.800 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:38.804 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:38.829 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:26:38.865 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:26:38.898 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:26:41.113 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:41.836 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:26:42.570 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:26:42.759 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:26:42.829 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:26:42.846 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:42.865 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3985.1277ms
2022-08-30 11:26:42.869 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:26:42.876 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDgwMDIsImV4cCI6MTY2MTg0ODkwMiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.Jc3Div3JDsMnUuIqK3-T2wYb-0Yg2n7dNady09tXMto","expiration":"2022-08-30T08:41:42.3002474Z","refreshToken":"qDumC/5NfHRR3Piuvj6qVXO0GxYAAMFEad4scnf7AXE="}}
2022-08-30 11:26:42.908 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4116.0979ms
2022-08-30 11:26:44.307 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:26:44.309 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:44.311 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.312 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:44.314 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 6.2610ms
2022-08-30 11:26:44.322 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:26:44.325 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:44.328 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.329 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:26:44.346 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:26:44.349 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:26:44.350 +03:00 [INF] RequestBody: 
2022-08-30 11:26:44.351 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"8tnpcTr0VNjlvWTJ_jzQEQ","connectionToken":"hJYIrfCLpjdFtTaJSuW_cA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:26:44.356 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 33.2229ms
2022-08-30 11:26:44.384 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=hJYIrfCLpjdFtTaJSuW_cA - -
2022-08-30 11:26:44.392 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:26:44.394 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.397 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 11:26:46.925 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:26:46.926 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:46.928 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:46.929 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:46.931 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.5717ms
2022-08-30 11:26:46.936 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:26:46.938 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:46.946 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:46.948 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:46.962 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:46.982 +03:00 [INF] Get All Products
2022-08-30 11:26:47.040 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:47.093 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:26:47.115 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:26:47.119 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:26:47.140 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:26:47.158 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:26:47.178 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:47.181 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 213.1653ms
2022-08-30 11:26:47.186 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:47.187 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:26:47.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 254.9091ms
2022-08-30 11:26:48.590 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:48.592 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:48.594 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:48.596 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:48.598 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.4653ms
2022-08-30 11:26:48.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:48.609 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:48.614 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:48.884 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:26:48.893 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:48.926 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:49.222 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:26:49.336 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:26:49.340 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:49.342 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 436.9523ms
2022-08-30 11:26:49.345 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:26:49.347 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:26:49.349 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 744.2667ms
2022-08-30 11:26:51.412 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:51.414 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:51.416 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:51.418 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:51.420 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.3855ms
2022-08-30 11:26:51.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:51.425 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:51.431 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:51.433 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:51.441 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetByIdProduct.GetByIdProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:51.461 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:51.705 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 255.9916ms
2022-08-30 11:26:51.706 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:51.739 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. See the inner exception for more information. To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
 ---> System.FormatException: Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).
   at System.Guid.GuidResult.SetFailure(Boolean overflow, String failureMessageID)
   at System.Guid.TryParseExactN(ReadOnlySpan`1 guidString, GuidResult& result)
   at System.Guid.TryParseGuid(ReadOnlySpan`1 guidString, GuidResult& result)
   at System.Guid.Parse(ReadOnlySpan`1 input)
   at System.Guid.Parse(String input)
   at lambda_method333(Closure )
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.GetValue(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.GetValue(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, Boolean generateParameter)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression, Boolean clearEvaluatedValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, LambdaExpression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, Expression`1 predicate, CancellationToken cancellationToken)
   at eTrade.Persistence.Repositories.ReadRepository`1.GetByIdAsync(String id, Boolean tracking) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Repositories\ReadRepository.cs:line 0
   at eTrade.Application.Features.Queries.Product.GetByIdProduct.GetByIdProductQueryHandler.Handle(GetByIdProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetByIdProduct\GetByIdProductQueryHandler.cs:line 23
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetByIdProductQueryRequest getByIdProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-08-30 11:26:52.023 +03:00 [ERR] An exception was thrown while attempting to evaluate a LINQ query parameter expression. See the inner exception for more information. To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
2022-08-30 11:26:52.027 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 500 - application/json 603.4976ms
2022-08-30 11:27:02.687 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 11:27:02.690 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 08:26:44 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 11:27:02.692 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=hJYIrfCLpjdFtTaJSuW_cA - - - 101 - - 18307.9893ms
2022-08-30 11:50:27.645 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:50:28.102 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:50:28.104 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:50:28.109 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:50:28.110 +03:00 [INF] Hosting environment: Development
2022-08-30 11:50:28.110 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:50:35.973 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:50:36.052 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:36.061 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:36.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:50:36.084 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 114.6831ms
2022-08-30 11:50:36.088 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:50:36.135 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:36.138 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:36.162 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:50:36.199 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:50:36.231 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:50:37.990 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:50:38.608 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:50:39.054 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:50:39.240 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:50:39.317 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:50:39.330 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:50:39.342 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3135.039ms
2022-08-30 11:50:39.345 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:50:39.348 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDk0MzgsImV4cCI6MTY2MTg1MDMzOCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.ceSOcEjqWyU3RDKiTdSIMv6ZZ2JICNMayJY88IJofHc","expiration":"2022-08-30T09:05:38.8595575Z","refreshToken":"4b7zwQRTRQaPi2cTC4Vx20UTGGpFB5VuFBtBj9gNjzo="}}
2022-08-30 11:50:39.372 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3284.6319ms
2022-08-30 11:50:44.963 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:50:44.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:44.969 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:44.971 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:50:44.972 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.1384ms
2022-08-30 11:50:44.984 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:50:44.987 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:44.989 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:44.994 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:50:45.011 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:50:45.014 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:50:45.015 +03:00 [INF] RequestBody: 
2022-08-30 11:50:45.017 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"l_fiOdhIkXBGMNRo_5KlBw","connectionToken":"qdHbP9oOZGQsybSejko0Dw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:50:45.019 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 35.1502ms
2022-08-30 11:50:45.048 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=qdHbP9oOZGQsybSejko0Dw - -
2022-08-30 11:50:45.061 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:50:45.065 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:45.069 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 11:54:08.511 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:54:09.003 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:54:09.016 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:54:09.025 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:54:09.026 +03:00 [INF] Hosting environment: Development
2022-08-30 11:54:09.027 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:54:13.028 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:54:13.109 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:13.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:13.124 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:13.136 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 111.7133ms
2022-08-30 11:54:13.150 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:54:13.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:13.170 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:13.195 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:54:13.235 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:13.578 +03:00 [INF] Get All Products
2022-08-30 11:54:15.100 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:15.585 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:54:15.659 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:54:15.663 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:54:15.720 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:54:15.753 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:54:15.775 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:15.786 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2540.4757ms
2022-08-30 11:54:15.788 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:54:15.792 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:54:15.810 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 2660.3246ms
2022-08-30 11:54:17.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:17.160 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:17.164 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:17.165 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:17.167 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.9973ms
2022-08-30 11:54:17.171 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:17.176 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:17.179 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:17.564 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:54:17.570 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:17.685 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:18.273 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:54:18.516 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:54:18.522 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:18.526 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 951.2493ms
2022-08-30 11:54:18.532 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:54:18.538 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:54:18.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 1375.8364ms
2022-08-30 11:54:20.979 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:20.981 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:20.983 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:20.984 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:20.986 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.2818ms
2022-08-30 11:54:20.993 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:20.998 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:21.001 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:21.004 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 11:54:21.008 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:21.035 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:21.093 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 11:54:21.138 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 11:54:21.346 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-08-30 11:54:21.414 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 11:54:21.417 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:21.419 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 404.675ms
2022-08-30 11:54:21.421 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 11:54:21.422 +03:00 [INF] ResponseBody: {}
2022-08-30 11:54:21.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 430.4867ms
2022-08-30 11:54:23.782 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:54:23.783 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:23.786 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.786 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:23.788 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 5.8893ms
2022-08-30 11:54:23.797 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:54:23.799 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:23.800 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.802 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:54:23.811 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:54:23.815 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:54:23.817 +03:00 [INF] RequestBody: 
2022-08-30 11:54:23.818 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"1KpzrDXGWezfedBo87GRag","connectionToken":"omZY2oLI_jT5wS-T-xom3A","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:54:23.820 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 22.5778ms
2022-08-30 11:54:23.840 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=omZY2oLI_jT5wS-T-xom3A - -
2022-08-30 11:54:23.842 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:54:23.844 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.845 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 12:01:56.959 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 12:01:56.962 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 08:54:22 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 12:01:56.964 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=omZY2oLI_jT5wS-T-xom3A - - - 101 - - 453124.3195ms
2022-08-30 12:01:57.661 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:01:57.662 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:01:57.665 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:01:57.667 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 12:01:57.669 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.4952ms
2022-08-30 12:01:57.673 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:01:57.674 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:01:57.676 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:01:57.680 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:01:57.681 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 12:01:57.684 +03:00 [INF] Get All Products
2022-08-30 12:01:57.694 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 12:01:57.777 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 12:01:57.785 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 12:01:57.789 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 12:01:57.791 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 12:01:57.795 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 111.9546ms
2022-08-30 12:01:57.797 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:01:57.800 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 12:01:57.806 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 133.2207ms
2022-08-30 12:02:22.168 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:02:22.171 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:02:22.175 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:02:22.176 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 12:02:22.179 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 10.7390ms
2022-08-30 12:02:22.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:02:22.191 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:02:22.194 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:02:22.196 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:02:22.196 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 12:02:22.201 +03:00 [INF] Get All Products
2022-08-30 12:02:22.207 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 12:02:22.211 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 12:02:22.215 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 12:02:22.220 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 12:02:22.222 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 12:02:22.223 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.5981ms
2022-08-30 12:02:22.225 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:02:22.226 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 12:02:22.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 43.0008ms
2022-08-30 13:05:46.828 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:05:47.198 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:05:47.200 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:05:47.204 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:05:47.206 +03:00 [INF] Hosting environment: Development
2022-08-30 13:05:47.206 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:05:48.798 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:05:48.916 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:48.926 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:48.930 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:48.947 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 152.9096ms
2022-08-30 13:05:48.957 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:05:48.962 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:48.964 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:48.983 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:05:49.013 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:05:49.039 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:05:50.613 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:51.169 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:05:51.535 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:05:51.696 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:05:51.756 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:05:51.768 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:51.780 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 2759.0661ms
2022-08-30 13:05:51.783 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:05:51.786 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTM5NTEsImV4cCI6MTY2MTg1NDg1MSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.wNbhKnbs970ZqizE7U9ZQzPcJu3LXeS97TKCl9efUkE","expiration":"2022-08-30T10:20:51.3813535Z","refreshToken":"0yWsRxPyxCD+DUgCZWvrrWSnFQA7ZhW8YuNvT/wFtOM="}}
2022-08-30 13:05:51.805 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 2847.4940ms
2022-08-30 13:05:51.880 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:05:51.883 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:51.886 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:51.887 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:51.888 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.5869ms
2022-08-30 13:05:51.892 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:05:51.903 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:51.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:51.907 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:51.912 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:05:51.928 +03:00 [INF] Get All Products
2022-08-30 13:05:51.981 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:52.025 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:05:52.087 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:05:52.089 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:05:52.310 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:05:52.333 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:05:52.352 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:52.356 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 442.0744ms
2022-08-30 13:05:52.359 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:52.360 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:05:52.363 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 470.0747ms
2022-08-30 13:05:56.889 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:05:56.890 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.893 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.895 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:56.897 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.4717ms
2022-08-30 13:05:56.902 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:05:56.904 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.908 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.910 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:05:56.913 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:05:56.916 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:05:56.919 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:56.920 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.026ms
2022-08-30 13:05:56.922 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:05:56.923 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:05:56.924 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.1521ms
2022-08-30 13:05:56.930 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:05:56.931 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.935 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.936 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:56.937 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.5063ms
2022-08-30 13:05:56.940 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:05:56.940 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.942 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.942 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:56.943 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:05:56.947 +03:00 [INF] Get All Products
2022-08-30 13:05:56.957 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:56.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:05:56.970 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:05:56.975 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:05:56.976 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:56.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 33.1831ms
2022-08-30 13:05:56.979 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:56.981 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:05:56.987 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 47.9726ms
2022-08-30 13:06:14.830 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:06:14.833 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:14.835 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.836 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:14.839 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.3261ms
2022-08-30 13:06:14.856 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:06:14.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:14.859 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.860 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:06:14.870 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:06:14.872 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:06:14.873 +03:00 [INF] RequestBody: 
2022-08-30 13:06:14.874 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"iXIqUVO88DjUnS5afq_zWg","connectionToken":"QLb3wFd115_LsQ1en1VkIQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:06:14.875 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 19.7959ms
2022-08-30 13:06:14.901 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=QLb3wFd115_LsQ1en1VkIQ - -
2022-08-30 13:06:14.902 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:06:14.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.905 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:06:23.292 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:06:23.294 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:23.295 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:23.296 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:23.297 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.8730ms
2022-08-30 13:06:23.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:06:23.302 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:23.303 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:23.304 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:06:23.305 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:23.312 +03:00 [INF] Get All Products
2022-08-30 13:06:23.313 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:23.317 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:06:23.321 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:06:23.324 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:06:23.326 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:06:23.327 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.4674ms
2022-08-30 13:06:23.329 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:06:23.330 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:06:23.334 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 32.9211ms
2022-08-30 13:06:24.560 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:24.563 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:24.565 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:24.565 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:24.567 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.5634ms
2022-08-30 13:06:24.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:24.572 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:24.575 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:24.712 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:06:24.718 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:24.729 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:24.801 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:06:24.880 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:06:24.883 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:06:24.884 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 161.1876ms
2022-08-30 13:06:24.886 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:06:24.889 +03:00 [INF] ResponseBody: []
2022-08-30 13:06:24.891 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 320.6285ms
2022-08-30 13:06:35.395 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:35.397 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:35.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:35.401 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:35.401 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.7838ms
2022-08-30 13:06:35.405 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 multipart/form-data;+boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA 152986
2022-08-30 13:06:35.407 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 152986
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:35.409 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:35.411 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 13:06:35.416 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:39.277 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:39.286 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-30 13:06:39.429 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Showcase", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2022-08-30 13:06:39.433 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Guid), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p7, @p8);
2022-08-30 13:06:39.444 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-30 13:06:39.445 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 4025.2869ms
2022-08-30 13:06:39.447 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 13:06:39.448 +03:00 [INF] Response:
StatusCode: 200
2022-08-30 13:06:39.451 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 multipart/form-data;+boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA 152986 - 200 0 - 4045.6997ms
2022-08-30 13:07:28.673 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:07:28.676 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:06:14 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:07:28.677 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=QLb3wFd115_LsQ1en1VkIQ - - - 101 - - 73776.3970ms
2022-08-30 13:07:29.536 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:29.537 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:29.539 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:29.540 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:07:29.543 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.1799ms
2022-08-30 13:07:29.550 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:29.550 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:29.552 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:29.553 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:29.554 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:07:29.556 +03:00 [INF] Get All Products
2022-08-30 13:07:29.558 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:07:29.561 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:07:29.565 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:07:29.568 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:07:29.570 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:07:29.572 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.0001ms
2022-08-30 13:07:29.573 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:29.579 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:07:29.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 31.9912ms
2022-08-30 13:07:36.058 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:36.060 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:36.063 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:36.069 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:07:36.072 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 13.2687ms
2022-08-30 13:07:36.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:36.087 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:36.090 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:36.092 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:36.094 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:07:36.099 +03:00 [INF] Get All Products
2022-08-30 13:07:36.101 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:07:36.107 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:07:36.114 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:07:36.125 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:07:36.129 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:07:36.133 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 36.3557ms
2022-08-30 13:07:36.136 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:36.138 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:07:36.146 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 64.1587ms
2022-08-30 13:08:43.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:08:43.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:43.170 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:43.171 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:43.172 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 13.6422ms
2022-08-30 13:08:43.176 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:08:43.178 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:43.182 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:43.184 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:08:43.187 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:08:43.190 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:08:43.191 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:43.199 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:08:43.215 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:08:43.226 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:08:43.231 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:08:43.232 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:43.233 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 44.0626ms
2022-08-30 13:08:43.235 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:08:43.236 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQxMjMsImV4cCI6MTY2MTg1NTAyMywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.vDVK3GlqBYJM_5ggK8oohuu7Wm-vaZTBRaplH8kFiXo","expiration":"2022-08-30T10:23:43.213477Z","refreshToken":"y+jduB+LSsvtUBe2Ehy2ytk2ldk3FO9CODc2HC4/nwY="}}
2022-08-30 13:08:43.239 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 62.7974ms
2022-08-30 13:08:44.920 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:08:44.921 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:44.923 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:44.925 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:44.927 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 7.4248ms
2022-08-30 13:08:44.964 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:08:44.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:44.968 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:44.969 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:08:44.972 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:08:44.975 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:08:44.976 +03:00 [INF] RequestBody: 
2022-08-30 13:08:44.977 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"5nzAMU5u7iUaXFa5byqBkQ","connectionToken":"wWnHzwOAixv3wBMEgZSZEA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:08:44.980 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 15.9156ms
2022-08-30 13:08:45.011 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=wWnHzwOAixv3wBMEgZSZEA - -
2022-08-30 13:08:45.013 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:08:45.019 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:45.021 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:08:46.125 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:08:46.126 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:46.129 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:46.132 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:46.134 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.2012ms
2022-08-30 13:08:46.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:08:46.141 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:46.146 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:46.147 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:46.149 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:08:46.153 +03:00 [INF] Get All Products
2022-08-30 13:08:46.154 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:46.159 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:08:46.165 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:08:46.170 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:08:46.173 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:46.175 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.5538ms
2022-08-30 13:08:46.177 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:46.178 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:08:46.186 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 47.6854ms
2022-08-30 13:08:47.421 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:08:47.424 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.428 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.431 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:47.433 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.2791ms
2022-08-30 13:08:47.436 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:08:47.437 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.439 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.439 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:08:47.440 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:08:47.444 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:08:47.445 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:47.446 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.3412ms
2022-08-30 13:08:47.447 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:08:47.448 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:08:47.449 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 13.3186ms
2022-08-30 13:08:47.456 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:08:47.458 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.460 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.462 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:47.463 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.8276ms
2022-08-30 13:08:47.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:08:47.468 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.470 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.471 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:47.472 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:08:47.475 +03:00 [INF] Get All Products
2022-08-30 13:08:47.478 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:47.483 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:08:47.488 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:08:47.497 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:08:47.500 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:47.501 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.8341ms
2022-08-30 13:08:47.504 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:47.507 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:08:47.519 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 51.3429ms
2022-08-30 13:10:37.318 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:10:37.329 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:08:44 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:10:37.330 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=wWnHzwOAixv3wBMEgZSZEA - - - 101 - - 112319.3458ms
2022-08-30 13:10:38.080 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:38.081 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.083 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.084 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:38.086 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 5.7841ms
2022-08-30 13:10:38.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:38.090 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.093 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.093 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:38.094 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:10:38.097 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:10:38.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:38.100 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.1458ms
2022-08-30 13:10:38.101 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:38.103 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:10:38.105 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.3719ms
2022-08-30 13:10:38.133 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:38.135 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.137 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.138 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:38.139 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.9987ms
2022-08-30 13:10:38.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:38.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.144 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.144 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:38.145 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:38.147 +03:00 [INF] Get All Products
2022-08-30 13:10:38.148 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:38.150 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:38.153 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:38.155 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:38.156 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:38.157 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 10.9365ms
2022-08-30 13:10:38.159 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:38.160 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:38.163 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.1802ms
2022-08-30 13:10:41.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:41.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:41.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:41.147 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:41.148 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:10:41.150 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:10:41.152 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:41.153 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.5639ms
2022-08-30 13:10:41.154 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:41.155 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:10:41.157 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 18.1898ms
2022-08-30 13:10:41.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:41.186 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:41.189 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:41.190 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:41.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:41.195 +03:00 [INF] Get All Products
2022-08-30 13:10:41.197 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:41.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:41.209 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:41.215 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:41.218 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:41.219 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.5287ms
2022-08-30 13:10:41.221 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:41.222 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:41.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.7143ms
2022-08-30 13:10:46.895 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:10:46.896 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:46.898 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.899 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:46.901 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 5.5216ms
2022-08-30 13:10:46.904 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:10:46.905 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:46.907 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.909 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:10:46.910 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:10:46.911 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:10:46.912 +03:00 [INF] RequestBody: 
2022-08-30 13:10:46.913 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"7vP8VRWIDxlz9LAH8Dlqlg","connectionToken":"a9sBzmHOtHSvBaQ4GlBwYQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:10:46.915 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 10.8099ms
2022-08-30 13:10:46.927 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=a9sBzmHOtHSvBaQ4GlBwYQ - -
2022-08-30 13:10:46.927 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:10:46.929 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.930 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:10:49.531 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:10:49.532 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:49.534 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:49.534 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:49.535 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.4510ms
2022-08-30 13:10:49.539 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:10:49.540 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:49.542 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:49.543 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:49.545 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:49.548 +03:00 [INF] Get All Products
2022-08-30 13:10:49.549 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:49.556 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:49.565 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:49.570 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:49.572 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:49.573 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.8689ms
2022-08-30 13:10:49.574 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:49.575 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:49.578 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 39.5312ms
2022-08-30 13:10:50.891 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:50.894 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:50.895 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:50.895 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:50.896 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.1144ms
2022-08-30 13:10:50.900 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:50.902 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:50.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:50.907 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:10:50.909 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:50.913 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:50.919 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:50.932 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:10:50.935 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:50.937 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 24.6851ms
2022-08-30 13:10:50.939 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:10:50.940 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:10:50.941 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 41.0337ms
2022-08-30 13:10:52.928 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:52.930 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:52.932 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:52.934 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:52.935 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.7945ms
2022-08-30 13:10:52.940 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:52.943 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:52.945 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:52.947 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:10:52.954 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:52.966 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:53.001 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:10:53.021 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:10:53.029 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-08-30 13:10:53.033 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:10:53.034 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:53.035 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 76.2142ms
2022-08-30 13:10:53.037 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:10:53.037 +03:00 [INF] ResponseBody: {}
2022-08-30 13:10:53.038 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 98.2937ms
2022-08-30 13:11:03.382 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:03.384 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:03.387 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:03.389 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:03.391 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.3584ms
2022-08-30 13:11:03.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:03.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:03.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:03.401 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:11:03.402 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:03.406 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:03.411 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:03.416 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:11:03.417 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:03.418 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 13.0268ms
2022-08-30 13:11:03.419 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:11:03.420 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 13:11:03.421 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 26.3634ms
2022-08-30 13:11:05.333 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:05.335 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:05.336 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:05.337 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:05.338 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 4.8273ms
2022-08-30 13:11:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:05.344 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:05.346 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:05.347 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:11:05.348 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:05.351 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:05.356 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:11:05.362 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:11:05.365 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:11:05.366 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:05.367 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 17.5918ms
2022-08-30 13:11:05.369 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:11:05.369 +03:00 [INF] ResponseBody: {}
2022-08-30 13:11:05.370 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 28.0742ms
2022-08-30 13:11:07.670 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:07.672 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.675 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.676 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:07.677 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.5652ms
2022-08-30 13:11:07.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:07.684 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.686 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.687 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:07.688 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:11:07.692 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:11:07.693 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:07.694 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.2682ms
2022-08-30 13:11:07.695 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:07.696 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:11:07.698 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.3900ms
2022-08-30 13:11:07.707 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:07.709 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.710 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.712 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:07.714 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9485ms
2022-08-30 13:11:07.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:07.718 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.721 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.722 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:07.724 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:07.730 +03:00 [INF] Get All Products
2022-08-30 13:11:07.731 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:07.733 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:11:07.737 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:07.739 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:11:07.741 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:07.743 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.5063ms
2022-08-30 13:11:07.745 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:07.747 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:11:07.763 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 45.4332ms
2022-08-30 13:11:14.688 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:14.690 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.693 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.695 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:14.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.5624ms
2022-08-30 13:11:14.702 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:14.704 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.706 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.707 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:14.709 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:11:14.710 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:11:14.712 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:14.714 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.3298ms
2022-08-30 13:11:14.715 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:14.716 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:11:14.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 14.6806ms
2022-08-30 13:11:14.723 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:14.724 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.725 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.726 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:14.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.7218ms
2022-08-30 13:11:14.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:14.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.732 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.733 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:14.734 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:14.736 +03:00 [INF] Get All Products
2022-08-30 13:11:14.737 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:14.739 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:11:14.742 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:14.746 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:11:14.747 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:14.748 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.0531ms
2022-08-30 13:11:14.749 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:14.750 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:11:14.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 23.6655ms
2022-08-30 13:12:25.291 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:12:25.609 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:12:25.610 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:12:25.615 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:12:25.616 +03:00 [INF] Hosting environment: Development
2022-08-30 13:12:25.617 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:12:25.791 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:12:25.908 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:12:25.913 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:25.915 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:12:25.924 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 136.0496ms
2022-08-30 13:12:25.936 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:12:25.939 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:12:25.940 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:25.957 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:12:25.977 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:12:25.982 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:12:25.983 +03:00 [INF] RequestBody: 
2022-08-30 13:12:25.986 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"It9PBlu3YHzKYMGLbm0Urg","connectionToken":"yzgfeGpLUc9NnkM_1JBMlA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:12:25.988 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 51.8004ms
2022-08-30 13:12:26.022 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=yzgfeGpLUc9NnkM_1JBMlA - -
2022-08-30 13:12:26.029 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:12:26.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:26.033 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:12:49.487 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:12:49.501 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:12:25 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:12:49.529 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=yzgfeGpLUc9NnkM_1JBMlA - - - 101 - - 23507.5764ms
2022-08-30 13:14:19.130 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:14:19.132 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:19.135 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:19.136 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:19.138 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 8.1576ms
2022-08-30 13:14:19.145 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:14:19.150 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:19.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:19.154 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:14:19.209 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:14:19.237 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:14:21.635 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:22.183 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:14:23.025 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:14:23.192 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:14:23.426 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:14:23.435 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:23.444 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4224.0778ms
2022-08-30 13:14:23.446 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:14:23.447 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQ0NjIsImV4cCI6MTY2MTg1NTM2MiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.zFXFbd_6lEWLZZOfjqyQcnvfGTOcQtxE1e4nzGjddJw","expiration":"2022-08-30T10:29:22.7389467Z","refreshToken":"9GdQD9E6ldaUh6VAn+92ZIlzBmzL1auSonIzIHNKJcE="}}
2022-08-30 13:14:23.460 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4315.0302ms
2022-08-30 13:14:26.842 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:14:26.844 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:26.846 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:26.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 6.5008ms
2022-08-30 13:14:26.855 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:14:26.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:26.860 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.861 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:14:26.862 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:14:26.865 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:14:26.866 +03:00 [INF] RequestBody: 
2022-08-30 13:14:26.868 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"HsUhxHO_2f4H88hZfUikvA","connectionToken":"xh2C696surF47hACtECbMA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:14:26.870 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 14.8268ms
2022-08-30 13:14:26.882 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=xh2C696surF47hACtECbMA - -
2022-08-30 13:14:26.885 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:14:26.888 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.892 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:14:29.576 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:14:29.576 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:29.578 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:29.578 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:29.579 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 3.6506ms
2022-08-30 13:14:29.582 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:14:29.583 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:29.584 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:29.585 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:29.590 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:29.609 +03:00 [INF] Get All Products
2022-08-30 13:14:29.658 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:29.746 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:14:29.841 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:14:29.843 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:14:30.113 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:30.134 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:14:30.160 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:30.165 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 572.9357ms
2022-08-30 13:14:30.167 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:30.169 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:14:30.180 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 598.2204ms
2022-08-30 13:14:34.843 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:34.845 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:34.847 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:34.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:34.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.6899ms
2022-08-30 13:14:34.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:34.853 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:34.855 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:35.206 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:35.215 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:35.259 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:35.335 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:35.450 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:14:35.456 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:35.457 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 236.5465ms
2022-08-30 13:14:35.460 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:35.465 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:14:35.467 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 615.8731ms
2022-08-30 13:14:38.689 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:38.690 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:38.692 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:38.693 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:38.694 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.4366ms
2022-08-30 13:14:38.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:38.701 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:38.703 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:38.704 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:38.709 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:38.721 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:38.775 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:38.817 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:38.882 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:14:38.886 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:38.888 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 174.784ms
2022-08-30 13:14:38.891 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:38.895 +03:00 [INF] ResponseBody: {}
2022-08-30 13:14:38.898 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 198.9086ms
2022-08-30 13:14:42.703 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:42.705 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:42.708 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:42.710 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:42.712 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 9.1021ms
2022-08-30 13:14:42.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:42.719 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:42.722 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:42.726 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:42.729 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:42.737 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:42.747 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:42.761 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:14:42.770 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:42.773 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 37.575ms
2022-08-30 13:14:42.781 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:42.783 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 13:14:42.785 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 68.5924ms
2022-08-30 13:14:45.882 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:45.885 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:45.892 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:45.894 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:45.896 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 14.2795ms
2022-08-30 13:14:45.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:45.908 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:45.916 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:45.918 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:45.921 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:45.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:45.940 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:45.985 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:46.028 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p2='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
UPDATE "Files" SET "Showcase" = @p2
WHERE "Id" = @p3;
2022-08-30 13:14:46.032 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:14:46.034 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:46.034 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 107.4435ms
2022-08-30 13:14:46.036 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:46.036 +03:00 [INF] ResponseBody: {}
2022-08-30 13:14:46.037 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 134.6294ms
2022-08-30 13:14:48.963 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:14:48.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:48.969 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:48.973 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:48.974 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 10.9127ms
2022-08-30 13:14:48.979 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:14:48.982 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:48.984 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:48.985 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:14:48.988 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:14:48.992 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:14:48.995 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:48.997 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.9252ms
2022-08-30 13:14:48.999 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:14:49.002 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:14:49.004 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.3465ms
2022-08-30 13:14:49.012 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:14:49.013 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:49.016 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:49.017 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:49.021 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.6278ms
2022-08-30 13:14:49.026 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:14:49.028 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:49.030 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:49.031 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:49.032 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:49.036 +03:00 [INF] Get All Products
2022-08-30 13:14:49.037 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:49.039 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:14:49.042 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:49.045 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:14:49.047 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:49.049 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.4618ms
2022-08-30 13:14:49.050 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:49.051 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:14:49.056 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.6199ms
2022-08-30 13:15:33.979 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:15:33.990 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:14:26 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:15:33.992 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=xh2C696surF47hACtECbMA - - - 101 - - 67110.1183ms
2022-08-30 13:15:34.532 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:34.534 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.536 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.538 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:34.539 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.1461ms
2022-08-30 13:15:34.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:34.549 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.551 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.552 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:34.554 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:34.557 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:34.560 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:34.561 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.0618ms
2022-08-30 13:15:34.564 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:34.570 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:34.572 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.5058ms
2022-08-30 13:15:34.594 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:34.596 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.601 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.602 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:34.604 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0505ms
2022-08-30 13:15:34.608 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:34.610 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.614 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.615 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:34.616 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:34.621 +03:00 [INF] Get All Products
2022-08-30 13:15:34.622 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:34.626 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:34.630 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:34.635 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:34.636 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:34.638 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.4468ms
2022-08-30 13:15:34.640 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:34.641 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:34.646 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.7202ms
2022-08-30 13:15:53.067 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:53.069 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.071 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.073 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:53.075 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.3571ms
2022-08-30 13:15:53.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:53.084 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.088 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.089 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:53.091 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:53.095 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:53.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:53.100 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.9347ms
2022-08-30 13:15:53.102 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:53.104 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:53.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.5258ms
2022-08-30 13:15:53.136 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:53.138 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.140 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.141 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:53.142 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.8690ms
2022-08-30 13:15:53.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:53.149 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.153 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:53.155 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:53.163 +03:00 [INF] Get All Products
2022-08-30 13:15:53.166 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:53.168 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:53.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:53.175 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:53.177 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:53.178 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.7649ms
2022-08-30 13:15:53.179 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:53.180 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:53.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.3941ms
2022-08-30 13:15:58.336 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:58.337 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.339 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:58.343 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.0674ms
2022-08-30 13:15:58.364 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:58.365 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.367 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.368 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:58.368 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:58.371 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:58.377 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:58.389 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 17.9365ms
2022-08-30 13:15:58.393 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:58.394 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:58.398 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 34.3705ms
2022-08-30 13:15:58.417 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:58.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.421 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.424 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:58.429 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.0671ms
2022-08-30 13:15:58.439 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:58.442 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.445 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.446 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:58.448 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:58.451 +03:00 [INF] Get All Products
2022-08-30 13:15:58.452 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:58.457 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:58.464 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:58.468 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:58.470 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:58.472 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.0404ms
2022-08-30 13:15:58.474 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:58.478 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:58.485 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 46.1412ms
2022-08-30 13:16:02.902 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:02.904 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:02.909 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:02.912 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:02.915 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:02.928 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:02.933 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:02.935 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.3208ms
2022-08-30 13:16:02.937 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:02.940 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:02.942 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 40.1922ms
2022-08-30 13:16:02.950 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:02.951 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:02.952 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:02.953 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:02.954 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:02.957 +03:00 [INF] Get All Products
2022-08-30 13:16:02.958 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:02.961 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:02.964 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:02.967 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:02.968 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:02.969 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.8972ms
2022-08-30 13:16:02.970 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:02.971 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:02.974 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 24.5396ms
2022-08-30 13:16:05.943 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:05.945 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:05.948 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:05.950 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:05.951 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.7207ms
2022-08-30 13:16:05.955 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:05.957 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:05.963 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:05.965 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:05.966 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:05.968 +03:00 [INF] Get All Products
2022-08-30 13:16:05.970 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:05.975 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:05.978 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:16:05.980 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:16:05.989 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:05.993 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:05.994 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:05.995 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.6822ms
2022-08-30 13:16:05.996 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:05.997 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:05.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 43.4447ms
2022-08-30 13:16:09.612 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:09.614 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:09.617 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:09.618 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:09.621 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1158ms
2022-08-30 13:16:09.625 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:09.627 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:09.631 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:09.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:09.635 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:09.639 +03:00 [INF] Get All Products
2022-08-30 13:16:09.642 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:09.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:09.649 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:09.653 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:09.655 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:09.656 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.8316ms
2022-08-30 13:16:09.657 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:09.658 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:09.663 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.9883ms
2022-08-30 13:16:12.248 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:12.250 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:12.252 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:12.254 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:12.256 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.0672ms
2022-08-30 13:16:12.261 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:12.263 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:12.266 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:12.267 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:12.271 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:12.275 +03:00 [INF] Get All Products
2022-08-30 13:16:12.277 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:12.281 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:12.285 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:12.291 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:12.293 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:12.296 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.8167ms
2022-08-30 13:16:12.298 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:12.300 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:12.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.9970ms
2022-08-30 13:16:16.989 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:16.991 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:16.994 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:16.996 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:16.998 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3467ms
2022-08-30 13:16:17.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:17.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:17.008 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:17.011 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:17.013 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:17.020 +03:00 [INF] Get All Products
2022-08-30 13:16:17.023 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:17.028 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:17.039 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:17.051 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:17.057 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:17.062 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 44.5882ms
2022-08-30 13:16:17.065 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:17.066 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:17.072 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 68.8066ms
2022-08-30 13:16:21.672 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:21.674 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.677 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.678 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:21.679 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.8214ms
2022-08-30 13:16:21.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:21.718 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.722 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.725 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:21.728 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:21.732 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:21.736 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:21.739 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.1003ms
2022-08-30 13:16:21.742 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:21.744 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:21.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 30.1664ms
2022-08-30 13:16:21.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:21.776 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.777 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.778 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:21.779 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:21.781 +03:00 [INF] Get All Products
2022-08-30 13:16:21.782 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:21.787 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:21.791 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:21.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:21.795 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:21.796 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8446ms
2022-08-30 13:16:21.798 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:21.799 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:21.805 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.4521ms
2022-08-30 13:16:25.686 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:25.688 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:25.691 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:25.692 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:25.694 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.5839ms
2022-08-30 13:16:25.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:25.700 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:25.705 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:25.708 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:25.710 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:25.713 +03:00 [INF] Get All Products
2022-08-30 13:16:25.714 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:25.718 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:25.723 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:25.728 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:25.729 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:25.730 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.0017ms
2022-08-30 13:16:25.731 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:25.733 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:25.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 36.6140ms
2022-08-30 13:16:29.375 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:29.377 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:29.380 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:29.381 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:29.384 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0517ms
2022-08-30 13:16:29.389 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:29.389 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:29.391 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:29.392 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:29.393 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:29.395 +03:00 [INF] Get All Products
2022-08-30 13:16:29.397 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:29.401 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:29.406 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:29.409 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:29.411 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:29.412 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.9148ms
2022-08-30 13:16:29.413 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:29.415 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:29.420 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 31.1021ms
2022-08-30 13:16:35.837 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:35.839 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.841 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.843 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:35.845 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.6364ms
2022-08-30 13:16:35.850 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:35.852 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.855 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.856 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:35.858 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:35.860 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:35.862 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:35.863 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.378ms
2022-08-30 13:16:35.865 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:35.867 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:35.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.8604ms
2022-08-30 13:16:35.877 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:35.878 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.879 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.881 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:35.882 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.4814ms
2022-08-30 13:16:35.888 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:35.889 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.891 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.891 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:35.892 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:35.894 +03:00 [INF] Get All Products
2022-08-30 13:16:35.895 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:35.897 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:35.901 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:35.905 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:35.907 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:35.908 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.9014ms
2022-08-30 13:16:35.909 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:35.910 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:35.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 27.9303ms
2022-08-30 13:17:43.335 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:43.337 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.338 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:17:43.342 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.4296ms
2022-08-30 13:17:43.348 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:43.350 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.352 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.354 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:43.355 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:17:43.359 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:17:43.362 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:43.364 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.542ms
2022-08-30 13:17:43.367 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:43.374 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:17:43.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.9527ms
2022-08-30 13:17:43.391 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:43.392 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.394 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.395 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:17:43.396 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.0069ms
2022-08-30 13:17:43.399 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:43.400 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.401 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.402 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:43.403 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:17:43.406 +03:00 [INF] Get All Products
2022-08-30 13:17:43.407 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:17:43.480 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:17:43.486 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:17:43.490 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:17:43.492 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:43.493 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 87.6152ms
2022-08-30 13:17:43.494 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:43.495 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:17:43.498 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 99.1017ms
2022-08-30 13:17:47.001 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:47.003 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:47.005 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:47.005 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:47.006 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:17:47.010 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:17:47.012 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:47.015 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.4858ms
2022-08-30 13:17:47.016 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:47.017 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:17:47.018 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.1416ms
2022-08-30 13:17:47.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:47.096 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:47.102 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:47.103 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:47.105 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:17:47.110 +03:00 [INF] Get All Products
2022-08-30 13:17:47.111 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:17:47.115 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:17:47.121 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:17:47.127 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:17:47.128 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:47.131 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.5345ms
2022-08-30 13:17:47.133 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:47.134 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:17:47.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 53.6992ms
2022-08-30 13:19:15.169 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:19:15.575 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:19:15.577 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:19:15.582 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:19:15.583 +03:00 [INF] Hosting environment: Development
2022-08-30 13:19:15.584 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:19:25.133 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:19:25.251 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:25.262 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:25.266 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:25.282 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 159.7174ms
2022-08-30 13:19:25.294 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:19:25.299 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:25.301 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:25.327 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:19:25.366 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:19:25.400 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:19:27.333 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:27.911 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:19:28.255 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:19:28.409 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:19:28.466 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:19:28.480 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:28.494 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3116.459ms
2022-08-30 13:19:28.497 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:19:28.501 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQ3NjgsImV4cCI6MTY2MTg1NTY2OCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.lM6rdlbMyagtu8ke94iUr7LId4EuKIEzos9HZ6CZAZk","expiration":"2022-08-30T10:34:28.1078609Z","refreshToken":"2NpDsJcmmC6VWUEhnd62gLWwbzBrbHU8WbRVbZXMFHs="}}
2022-08-30 13:19:28.522 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3228.0978ms
2022-08-30 13:19:30.442 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:30.444 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.447 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.448 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:30.449 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.2210ms
2022-08-30 13:19:30.454 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:30.462 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.464 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.466 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:30.468 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:19:30.470 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:19:30.472 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:30.473 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.0896ms
2022-08-30 13:19:30.475 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:30.476 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:19:30.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.1240ms
2022-08-30 13:19:30.482 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:30.483 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.484 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.485 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:30.486 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.1637ms
2022-08-30 13:19:30.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:30.489 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.491 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.493 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:30.498 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:30.513 +03:00 [INF] Get All Products
2022-08-30 13:19:30.557 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:30.596 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:30.650 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:30.654 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:30.817 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:30.834 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:30.848 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:30.851 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 351.3641ms
2022-08-30 13:19:30.853 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:30.854 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:30.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 369.7358ms
2022-08-30 13:19:39.108 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:39.110 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.113 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.115 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:39.116 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.4383ms
2022-08-30 13:19:39.119 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:39.120 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.127 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.129 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:39.130 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:19:39.132 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:19:39.133 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:39.134 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.0114ms
2022-08-30 13:19:39.135 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:39.136 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:19:39.137 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.7802ms
2022-08-30 13:19:39.143 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:19:39.144 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.146 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:39.147 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 3.6085ms
2022-08-30 13:19:39.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:19:39.150 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.152 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:39.153 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:39.157 +03:00 [INF] Get All Products
2022-08-30 13:19:39.167 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:39.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:39.175 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:39.177 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:39.186 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:39.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:39.193 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:39.194 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 39.8392ms
2022-08-30 13:19:39.195 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:39.197 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:39.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 49.6148ms
2022-08-30 13:19:42.557 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:42.559 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:42.561 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:42.563 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:42.565 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.9650ms
2022-08-30 13:19:42.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:42.571 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:42.575 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:42.577 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:42.578 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:42.584 +03:00 [INF] Get All Products
2022-08-30 13:19:42.587 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:42.593 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:42.598 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:42.603 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:42.605 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:42.606 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.2934ms
2022-08-30 13:19:42.608 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:42.609 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:42.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.8747ms
2022-08-30 13:20:24.694 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:20:25.128 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:20:25.130 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:20:25.135 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:20:25.136 +03:00 [INF] Hosting environment: Development
2022-08-30 13:20:25.137 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:41:45.885 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:41:46.270 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:41:46.274 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:41:46.279 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:41:46.280 +03:00 [INF] Hosting environment: Development
2022-08-30 13:41:46.281 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:42:04.822 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:42:04.957 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:04.966 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:04.969 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:04.986 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 166.9808ms
2022-08-30 13:42:04.997 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:42:05.003 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:05.004 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:05.029 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:42:05.061 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:42:05.093 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:42:07.096 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:07.647 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:42:08.003 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:42:08.134 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:42:08.204 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:42:08.215 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:08.225 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3155.0291ms
2022-08-30 13:42:08.227 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:42:08.231 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTYxMjcsImV4cCI6MTY2MTg1NzAyNywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.69Xca1ogfuY2kWB5wL4ZVQxBKT1PwSp-ieBlBhxmQhM","expiration":"2022-08-30T10:57:07.8486801Z","refreshToken":"Cgd4rx64fqHDGmuqbj7NKAZQLqGsohtP4AdcGhPOZQI="}}
2022-08-30 13:42:08.248 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3250.5805ms
2022-08-30 13:42:12.139 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:42:12.141 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:12.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.147 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:12.151 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 12.1709ms
2022-08-30 13:42:12.173 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:42:12.177 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:12.181 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.183 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:42:12.217 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:42:12.220 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:42:12.221 +03:00 [INF] RequestBody: 
2022-08-30 13:42:12.225 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"DpAAkAY-O9F6SQ3p_PCqng","connectionToken":"uxPluQ3tP0FMbMdOKG2B8Q","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:42:12.229 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 55.8144ms
2022-08-30 13:42:12.258 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=uxPluQ3tP0FMbMdOKG2B8Q - -
2022-08-30 13:42:12.268 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:42:12.269 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.272 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:42:16.024 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:42:16.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:16.029 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:16.029 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:16.030 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.8426ms
2022-08-30 13:42:16.033 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:42:16.034 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:16.035 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:16.036 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:42:16.041 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:16.056 +03:00 [INF] Get All Products
2022-08-30 13:42:16.118 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:16.203 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:42:16.302 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:42:16.305 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:42:16.596 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:42:16.615 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:42:16.631 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:16.633 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 587.9ms
2022-08-30 13:42:16.635 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:42:16.636 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:42:16.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 607.5598ms
2022-08-30 13:42:18.641 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:18.643 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:18.644 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:18.645 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:18.646 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.6139ms
2022-08-30 13:42:18.650 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:18.654 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:18.658 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:18.866 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:42:18.870 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:18.894 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:18.976 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:42:19.147 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:42:19.150 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:19.152 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 277.873ms
2022-08-30 13:42:19.153 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:42:19.157 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:42:19.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 507.9265ms
2022-08-30 13:42:20.978 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:20.981 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:20.983 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:20.984 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:20.985 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 7.1258ms
2022-08-30 13:42:20.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:20.992 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:20.995 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:20.997 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:42:21.002 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:33.478 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:33.528 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:42:33.589 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:42:56.487 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:42:56.491 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:56.493 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 35485.2389ms
2022-08-30 13:42:56.501 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:42:56.503 +03:00 [INF] ResponseBody: {}
2022-08-30 13:42:56.505 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 35514.4107ms
2022-08-30 13:43:55.370 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:43:55.372 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:43:55.376 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:43:55.377 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:43:55.378 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.8288ms
2022-08-30 13:43:55.385 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:43:55.386 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:43:55.388 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:43:55.389 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:43:55.392 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:44:13.514 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:44:13.518 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:44:13.519 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 18125.2608ms
2022-08-30 13:44:13.521 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:44:13.524 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:44:13.526 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 18140.6771ms
2022-08-30 13:44:13.536 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:44:13.538 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:44:13.540 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:44:13.541 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:44:13.543 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.4474ms
2022-08-30 13:44:13.553 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:44:13.555 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:44:13.557 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:44:13.558 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:44:13.559 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:44:13.561 +03:00 [INF] Get All Products
2022-08-30 13:44:13.563 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:44:13.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:44:13.570 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:44:13.574 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:44:13.578 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:44:13.579 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.6597ms
2022-08-30 13:44:13.581 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:44:13.582 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:44:13.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.8621ms
2022-08-30 13:49:09.965 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:49:09.967 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:42:11 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:49:09.968 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=uxPluQ3tP0FMbMdOKG2B8Q - - - 101 - - 417710.3410ms
2022-08-30 13:49:10.481 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:49:10.483 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:10.485 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:10.486 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:49:10.489 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.3932ms
2022-08-30 13:49:10.497 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:49:10.499 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:10.502 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:10.503 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:49:10.505 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:49:13.744 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:49:13.762 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:49:13.769 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3260.0867ms
2022-08-30 13:49:13.771 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:49:13.773 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:49:13.774 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 3277.1300ms
2022-08-30 13:49:13.786 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:49:13.786 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:13.789 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:13.789 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:49:13.790 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.5544ms
2022-08-30 13:49:13.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:49:13.794 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:13.795 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:13.796 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:49:13.797 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:49:13.802 +03:00 [INF] Get All Products
2022-08-30 13:49:13.803 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:49:13.866 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:49:13.873 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:49:13.877 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:49:13.879 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:49:13.880 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 80.8839ms
2022-08-30 13:49:13.881 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:49:13.882 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:49:13.886 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 93.2046ms
2022-08-30 13:58:02.788 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:58:03.462 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:58:03.464 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:58:03.468 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:58:03.469 +03:00 [INF] Hosting environment: Development
2022-08-30 13:58:03.470 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:58:22.724 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:58:22.817 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:58:22.823 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:58:22.856 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:58:22.873 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:58:25.621 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:58:25.633 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:58:25.650 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2768.4317ms
2022-08-30 13:58:25.658 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:58:25.661 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:58:25.667 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2949.6870ms
2022-08-30 13:58:25.680 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:58:25.683 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:58:25.685 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:58:25.689 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:58:25.717 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:58:26.059 +03:00 [INF] Get All Products
2022-08-30 13:58:27.223 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:58:27.656 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:58:27.786 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:58:27.787 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:58:28.026 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:58:28.052 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:58:28.068 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:58:28.070 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2351.2686ms
2022-08-30 13:58:28.072 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:58:28.074 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:58:28.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 2407.7634ms
2022-08-30 14:01:57.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:01:57.694 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:01:57.697 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:01:57.699 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:01:57.701 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:01:59.789 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:01:59.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:01:59.811 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2107.5514ms
2022-08-30 14:01:59.817 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:01:59.818 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:01:59.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2127.8884ms
2022-08-30 14:01:59.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:01:59.846 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:01:59.848 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:01:59.848 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:01:59.849 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:01:59.852 +03:00 [INF] Get All Products
2022-08-30 14:01:59.892 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:01:59.897 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:01:59.903 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:01:59.907 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:01:59.908 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:01:59.909 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 58.5617ms
2022-08-30 14:01:59.911 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:01:59.913 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:01:59.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 71.5717ms
2022-08-30 14:47:26.293 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 14:47:26.714 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 14:47:26.715 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 14:47:26.720 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 14:47:26.721 +03:00 [INF] Hosting environment: Development
2022-08-30 14:47:26.721 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 14:47:40.082 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 14:47:40.183 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:40.193 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:40.202 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:40.225 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 147.5385ms
2022-08-30 14:47:40.245 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 14:47:40.252 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:40.255 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:40.280 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:40.319 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 14:47:40.355 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 14:47:42.325 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:42.882 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:43.647 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:43.831 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 14:47:43.917 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 14:47:43.930 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:43.941 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3613.8125ms
2022-08-30 14:47:43.944 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:43.947 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NjAwNjMsImV4cCI6MTY2MTg2MDk2MywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.1JFqbXD4X0Agzc7hHKVdiUyI_y7fzKlmbxrO9tFZz2E","expiration":"2022-08-30T12:02:43.4412214Z","refreshToken":"GiyBT2NCdmHGtalxny+OGRb8fZDz3j6wvFQpdowfbpg="}}
2022-08-30 14:47:43.969 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3723.6021ms
2022-08-30 14:47:49.260 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 14:47:49.264 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:49.268 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:49.270 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:49.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 11.4281ms
2022-08-30 14:47:49.278 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 14:47:49.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:49.283 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:49.285 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:49.286 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 14:47:49.289 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 14:47:49.355 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:49.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:49.384 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:49.398 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 14:47:49.413 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 14:47:49.415 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:49.418 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 129.5867ms
2022-08-30 14:47:49.419 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:49.421 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NjAwNjksImV4cCI6MTY2MTg2MDk2OSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.gs7M7NtswStvVX_eqthCd4fKHTq1lkGrFChHENhZSes","expiration":"2022-08-30T12:02:49.3804721Z","refreshToken":"jhY5YQMT/TuPB14CEMrxOSX44wrMBdobGTihidnC1YQ="}}
2022-08-30 14:47:49.422 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 144.7439ms
2022-08-30 14:47:51.257 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 14:47:51.258 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:51.259 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.260 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:51.262 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 4.8711ms
2022-08-30 14:47:51.278 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 14:47:51.282 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:51.285 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.290 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 14:47:51.316 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 14:47:51.317 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 14:47:51.318 +03:00 [INF] RequestBody: 
2022-08-30 14:47:51.320 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"8cjfChuD0S7ZvXFX9-hWbw","connectionToken":"D11k4N20gY8cR9aSa6MWZA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 14:47:51.321 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 43.6839ms
2022-08-30 14:47:51.374 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=D11k4N20gY8cR9aSa6MWZA - -
2022-08-30 14:47:51.385 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 14:47:51.387 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.388 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 14:47:55.418 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 14:47:55.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:55.420 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:55.421 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:55.421 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 3.5866ms
2022-08-30 14:47:55.425 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 14:47:55.426 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:55.427 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:55.427 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:47:55.433 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:47:55.447 +03:00 [INF] Get All Products
2022-08-30 14:47:55.458 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:55.549 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:47:55.652 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:47:55.654 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:47:55.967 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:47:55.987 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:47:56.002 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:56.003 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 568.7698ms
2022-08-30 14:47:56.004 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:47:56.005 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:47:56.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 583.0017ms
2022-08-30 14:47:57.699 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 14:47:57.701 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:57.703 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:57.703 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:57.705 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.8325ms
2022-08-30 14:47:57.710 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 14:47:57.714 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:57.716 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:57.914 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 14:47:57.920 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:47:57.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:58.014 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:47:58.192 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 14:47:58.195 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:58.196 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 273.8795ms
2022-08-30 14:47:58.198 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 14:47:58.200 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 14:47:58.201 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 491.8212ms
2022-08-30 14:48:05.977 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:05.978 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:05.980 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:05.982 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:05.985 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.4921ms
2022-08-30 14:48:05.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:05.992 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:05.995 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:05.996 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:05.998 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:48:08.686 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:48:08.695 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:08.697 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2697.1889ms
2022-08-30 14:48:08.700 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:08.703 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:48:08.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2714.2023ms
2022-08-30 14:48:08.714 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:08.716 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:08.718 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:08.719 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:08.720 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9759ms
2022-08-30 14:48:08.725 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:08.726 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:08.727 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:08.728 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:08.729 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:48:08.732 +03:00 [INF] Get All Products
2022-08-30 14:48:08.733 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:48:08.735 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:48:08.739 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:48:08.744 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:48:08.745 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:08.746 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.1357ms
2022-08-30 14:48:08.747 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:08.748 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:48:08.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.6666ms
2022-08-30 14:48:16.393 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:16.395 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:16.397 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:16.398 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:16.399 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 5.7039ms
2022-08-30 14:48:16.403 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:16.405 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:16.407 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:16.408 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:16.409 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:48:18.574 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:48:18.578 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:18.581 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2170.4554ms
2022-08-30 14:48:18.583 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:18.584 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:48:18.585 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2181.4594ms
2022-08-30 14:48:18.593 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:18.595 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:18.596 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:18.597 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:18.599 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.2043ms
2022-08-30 14:48:18.604 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:18.604 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:18.606 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:18.607 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:18.607 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:48:18.611 +03:00 [INF] Get All Products
2022-08-30 14:48:18.612 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:48:18.617 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:48:18.620 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:48:18.626 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:48:18.627 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:18.628 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.3551ms
2022-08-30 14:48:18.629 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:18.630 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:48:18.633 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 29.7757ms
2022-08-30 14:51:55.470 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 14:51:55.475 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 11:47:50 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 14:51:55.477 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=D11k4N20gY8cR9aSa6MWZA - - - 101 - - 244102.8877ms
2022-08-30 14:51:56.441 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:51:56.442 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.444 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.446 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:51:56.448 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.2900ms
2022-08-30 14:51:56.452 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:51:56.452 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.454 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.454 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:51:56.456 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:51:56.460 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:51:56.461 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:51:56.462 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.7807ms
2022-08-30 14:51:56.465 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:51:56.466 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:51:56.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 16.0660ms
2022-08-30 14:51:56.486 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:51:56.487 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.488 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.488 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:51:56.489 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.7989ms
2022-08-30 14:51:56.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:51:56.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.494 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.495 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:51:56.496 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:51:56.498 +03:00 [INF] Get All Products
2022-08-30 14:51:56.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:51:56.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:51:56.508 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:51:56.513 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:51:56.515 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:51:56.518 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.2995ms
2022-08-30 14:51:56.519 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:51:56.521 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:51:56.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 32.6920ms
2022-08-30 14:52:03.118 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:52:03.119 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.122 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.123 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:52:03.125 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.1226ms
2022-08-30 14:52:03.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:52:03.148 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.150 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.151 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:52:03.153 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:52:03.158 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:52:03.165 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:52:03.167 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 9.4453ms
2022-08-30 14:52:03.169 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:52:03.171 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:52:03.173 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.4741ms
2022-08-30 14:52:03.202 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:52:03.206 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.209 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.210 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:52:03.212 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0364ms
2022-08-30 14:52:03.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:52:03.219 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.221 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.222 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:52:03.223 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:52:03.226 +03:00 [INF] Get All Products
2022-08-30 14:52:03.227 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:52:03.229 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:52:03.234 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:52:03.237 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:52:03.239 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:52:03.240 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.2738ms
2022-08-30 14:52:03.241 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:52:03.242 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:52:03.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 29.4026ms
2022-08-30 14:53:45.372 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:53:45.380 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.383 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.385 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:53:45.387 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 15.2144ms
2022-08-30 14:53:45.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:53:45.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.400 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:53:45.402 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:53:45.406 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:53:45.407 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:53:45.409 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.5832ms
2022-08-30 14:53:45.411 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:53:45.416 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:53:45.418 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.7503ms
2022-08-30 14:53:45.437 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:53:45.437 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.438 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.439 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:53:45.440 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.4270ms
2022-08-30 14:53:45.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:53:45.444 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.445 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.446 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:53:45.446 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:53:45.448 +03:00 [INF] Get All Products
2022-08-30 14:53:45.449 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:53:45.502 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:53:45.508 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:53:45.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:53:45.513 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:53:45.514 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 66.2246ms
2022-08-30 14:53:45.515 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:53:45.517 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:53:45.520 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 76.9965ms
2022-08-30 14:55:21.139 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:55:21.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.146 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.148 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:55:21.150 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.1949ms
2022-08-30 14:55:21.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:55:21.156 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.158 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.161 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:55:21.163 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:55:21.166 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:55:21.168 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:55:21.171 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.9084ms
2022-08-30 14:55:21.173 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:55:21.176 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:55:21.178 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.2470ms
2022-08-30 14:55:21.198 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:55:21.200 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.201 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.202 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:55:21.203 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.4068ms
2022-08-30 14:55:21.210 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:55:21.211 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.215 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.217 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:55:21.218 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:55:21.222 +03:00 [INF] Get All Products
2022-08-30 14:55:21.224 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:55:21.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:55:21.230 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:55:21.233 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:55:21.234 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:55:21.235 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.652ms
2022-08-30 14:55:21.237 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:55:21.238 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:55:21.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.0120ms
2022-08-30 14:58:00.680 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:00.693 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.700 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.703 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:00.706 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 25.4921ms
2022-08-30 14:58:00.737 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:00.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.747 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.749 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:00.752 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:58:00.756 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:58:00.758 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:00.763 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.1648ms
2022-08-30 14:58:00.766 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:00.769 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:58:00.770 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 33.0576ms
2022-08-30 14:58:00.785 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:00.787 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.788 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.789 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:00.790 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.2722ms
2022-08-30 14:58:00.795 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:00.796 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.797 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.798 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:00.799 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:00.801 +03:00 [INF] Get All Products
2022-08-30 14:58:00.802 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:00.805 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:00.808 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:00.812 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:00.814 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:00.815 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.5677ms
2022-08-30 14:58:00.817 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:00.818 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:00.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.5278ms
2022-08-30 14:58:08.686 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:08.688 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.690 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.693 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:08.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.0001ms
2022-08-30 14:58:08.702 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:08.705 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.707 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.709 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:08.710 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:58:08.713 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:58:08.714 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:08.715 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.5776ms
2022-08-30 14:58:08.717 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:08.718 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:58:08.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.8344ms
2022-08-30 14:58:08.727 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 14:58:08.730 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.732 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.733 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:08.735 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.8871ms
2022-08-30 14:58:08.738 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 14:58:08.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.741 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.742 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:08.742 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:08.745 +03:00 [INF] Get All Products
2022-08-30 14:58:08.746 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:08.749 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:08.752 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:58:08.753 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:58:08.762 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:08.767 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:08.768 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:08.769 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.8513ms
2022-08-30 14:58:08.771 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:08.772 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:08.773 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 34.9357ms
2022-08-30 14:58:10.390 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:10.392 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:10.396 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:10.397 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:10.398 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.7545ms
2022-08-30 14:58:10.403 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:10.405 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:10.409 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:10.411 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:10.413 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:10.419 +03:00 [INF] Get All Products
2022-08-30 14:58:10.421 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:10.426 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:10.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:10.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:10.438 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:10.439 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.3211ms
2022-08-30 14:58:10.440 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:10.442 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:10.447 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.2923ms
2022-08-30 15:07:55.938 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 15:07:56.359 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 15:07:56.366 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 15:07:56.372 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 15:07:56.373 +03:00 [INF] Hosting environment: Development
2022-08-30 15:07:56.374 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 15:09:27.174 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 15:09:27.343 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:27.350 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:27.352 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:09:27.367 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 196.4982ms
2022-08-30 15:09:27.377 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 15:09:27.384 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:27.386 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:27.413 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 15:09:27.452 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 15:09:27.483 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 15:09:29.713 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:09:30.274 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 15:09:30.643 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 15:09:30.812 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 15:09:30.884 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 15:09:30.894 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:09:30.904 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3444.6333ms
2022-08-30 15:09:30.907 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 15:09:30.910 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NjEzNzAsImV4cCI6MTY2MTg2MjI3MCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.AS8y_8Ka6qnjaREew3y6lJ3jU4d9bCT-96uV-ASSSPc","expiration":"2022-08-30T12:24:30.4885592Z","refreshToken":"0O6U93vy9UfeiilZmpAV1SHah90Kl5BJP4A7bDx2xn0="}}
2022-08-30 15:09:30.928 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3554.7339ms
2022-08-30 15:09:32.269 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 15:09:32.272 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:32.275 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:32.277 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:09:32.280 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.0431ms
2022-08-30 15:09:32.296 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 15:09:32.300 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:32.303 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:32.305 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 15:09:32.333 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 15:09:32.338 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 15:09:32.339 +03:00 [INF] RequestBody: 
2022-08-30 15:09:32.342 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"VYxuHbofGR4c8zyg-RG0Kg","connectionToken":"oaTbp2P9pUaXggsnWQ3jXQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 15:09:32.346 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 49.9133ms
2022-08-30 15:09:32.383 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=oaTbp2P9pUaXggsnWQ3jXQ - -
2022-08-30 15:09:32.399 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 15:09:32.403 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:32.408 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 15:09:36.039 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 15:09:36.042 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:36.044 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:36.046 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:09:36.048 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 8.5933ms
2022-08-30 15:09:36.052 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 15:09:36.054 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:36.055 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:36.057 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:09:36.065 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:09:36.092 +03:00 [INF] Get all products
2022-08-30 15:09:36.174 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:09:36.267 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 15:09:36.406 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 15:09:36.413 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 15:09:36.699 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:09:36.719 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 15:09:36.745 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:09:36.748 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 681.1625ms
2022-08-30 15:09:36.751 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:09:36.753 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 15:09:36.758 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 706.1620ms
2022-08-30 15:09:39.689 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:09:39.691 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:39.693 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:39.695 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:09:39.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - - - 204 - - 7.6671ms
2022-08-30 15:09:39.700 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:09:39.703 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:39.705 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:39.911 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 15:09:39.916 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:09:39.954 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:09:40.067 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:09:40.167 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 15:09:40.169 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:09:40.170 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 251.5202ms
2022-08-30 15:09:40.174 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 15:09:40.177 +03:00 [INF] ResponseBody: []
2022-08-30 15:09:40.178 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - - - 200 - application/json;+charset=utf-8 478.0159ms
2022-08-30 15:09:48.600 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:09:48.602 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:48.606 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:48.609 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:09:48.613 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=be12bfba-814f-4141-b085-042f5dbefb4d - - - 204 - - 12.9494ms
2022-08-30 15:09:48.621 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=be12bfba-814f-4141-b085-042f5dbefb4d multipart/form-data;+boundary=----WebKitFormBoundaryHw00bW7Cgf6zxsGY 1807240
2022-08-30 15:09:48.625 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHw00bW7Cgf6zxsGY
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 1807240
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:09:48.630 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:09:48.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 15:09:48.641 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:09:56.000 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:09:56.009 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-30 15:09:56.202 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Showcase", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2022-08-30 15:09:56.209 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Guid), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p7, @p8);
2022-08-30 15:09:56.217 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-30 15:09:56.220 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 7575.7225ms
2022-08-30 15:09:56.222 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 15:09:56.224 +03:00 [INF] Response:
StatusCode: 200
2022-08-30 15:09:56.227 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=be12bfba-814f-4141-b085-042f5dbefb4d multipart/form-data;+boundary=----WebKitFormBoundaryHw00bW7Cgf6zxsGY 1807240 - 200 0 - 7607.0384ms
2022-08-30 15:10:00.338 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:10:00.340 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:00.343 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:00.344 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:10:00.346 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - - - 204 - - 8.4908ms
2022-08-30 15:10:00.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:10:00.356 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:00.360 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:00.367 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 15:10:00.372 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:10:00.384 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:10:00.397 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:10:00.428 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 15:10:00.431 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:10:00.432 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 50.5133ms
2022-08-30 15:10:00.434 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 15:10:00.440 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-8.jpg","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","fileName":"wallpaper-8.jpg"}]
2022-08-30 15:10:00.442 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/be12bfba-814f-4141-b085-042f5dbefb4d - - - 200 - application/json;+charset=utf-8 88.7450ms
2022-08-30 15:10:04.606 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=d0032748-481c-4b01-9495-6f69ab26f9ec&productId=be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:10:04.609 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:04.619 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:04.621 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:10:04.623 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=d0032748-481c-4b01-9495-6f69ab26f9ec&productId=be12bfba-814f-4141-b085-042f5dbefb4d - - - 204 - - 16.8586ms
2022-08-30 15:10:04.627 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=d0032748-481c-4b01-9495-6f69ab26f9ec&productId=be12bfba-814f-4141-b085-042f5dbefb4d - -
2022-08-30 15:10:04.629 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:04.633 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:04.635 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 15:10:04.649 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:10:04.662 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:10:04.720 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 15:10:04.758 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 15:10:04.766 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-08-30 15:10:04.777 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 15:10:04.780 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:10:04.782 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 126.2634ms
2022-08-30 15:10:04.785 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 15:10:04.789 +03:00 [INF] ResponseBody: {}
2022-08-30 15:10:04.791 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=d0032748-481c-4b01-9495-6f69ab26f9ec&productId=be12bfba-814f-4141-b085-042f5dbefb4d - - - 200 - application/json;+charset=utf-8 164.2652ms
2022-08-30 15:10:13.328 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:10:13.329 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:13.333 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:13.334 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:10:13.335 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.2577ms
2022-08-30 15:10:13.338 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:10:13.340 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:13.341 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:13.342 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:10:13.343 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 15:10:13.346 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 15:10:13.349 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:10:13.351 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.5497ms
2022-08-30 15:10:13.352 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:10:13.354 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 15:10:13.355 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.2318ms
2022-08-30 15:10:13.364 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:10:13.365 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:13.367 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:13.369 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:10:13.371 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.3693ms
2022-08-30 15:10:13.374 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:10:13.375 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:10:13.377 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:10:13.378 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:10:13.380 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:10:13.384 +03:00 [INF] Get all products
2022-08-30 15:10:13.387 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:10:13.391 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 15:10:13.396 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:10:13.401 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 15:10:13.404 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:10:13.407 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.1794ms
2022-08-30 15:10:13.408 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:10:13.410 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 15:10:13.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.5076ms
2022-08-30 15:11:24.298 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 15:11:24.300 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 12:09:32 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 15:11:24.301 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=oaTbp2P9pUaXggsnWQ3jXQ - - - 101 - - 111918.3453ms
2022-08-30 15:11:24.856 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:11:24.861 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:11:24.866 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:11:24.870 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:11:24.878 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 21.9275ms
2022-08-30 15:11:24.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:11:24.946 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:11:24.959 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:11:24.967 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:11:24.973 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 15:11:24.980 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 15:11:24.983 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:11:24.986 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.3014ms
2022-08-30 15:11:24.989 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:11:24.992 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 15:11:24.993 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 65.8512ms
2022-08-30 15:11:25.008 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:11:25.010 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:11:25.017 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:11:25.021 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:11:25.028 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 19.9398ms
2022-08-30 15:11:25.035 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:11:25.037 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:11:25.038 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:11:25.040 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:11:25.042 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:11:25.052 +03:00 [INF] Get all products
2022-08-30 15:11:25.056 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:11:25.060 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 15:11:25.069 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:11:25.075 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 15:11:25.077 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:11:25.079 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 34.8854ms
2022-08-30 15:11:25.082 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:11:25.084 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 15:11:25.092 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 56.3042ms
2022-08-30 15:12:08.794 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:12:08.796 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:12:08.798 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:12:08.799 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:12:08.800 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.4177ms
2022-08-30 15:12:08.853 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:12:08.857 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:12:08.860 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:12:08.861 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:12:08.863 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 15:12:08.866 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 15:12:08.870 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:12:08.875 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 8.8801ms
2022-08-30 15:12:08.878 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:12:08.930 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 15:12:08.938 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 85.5213ms
2022-08-30 15:12:08.976 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:12:08.982 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:12:08.989 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:12:09.001 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:12:09.010 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 34.7723ms
2022-08-30 15:12:09.040 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:12:09.042 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:12:09.046 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:12:09.048 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:12:09.049 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:12:09.055 +03:00 [INF] Get all products
2022-08-30 15:12:09.056 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:12:09.060 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 15:12:09.065 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:12:09.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 15:12:09.076 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:12:09.078 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.6363ms
2022-08-30 15:12:09.081 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:12:09.083 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 15:12:09.091 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 51.4860ms
2022-08-30 15:18:18.605 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:18:18.617 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:18:18.621 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:18:18.622 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:18:18.624 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 19.0929ms
2022-08-30 15:18:18.648 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 15:18:18.650 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:18:18.654 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:18:18.656 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:18:18.659 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 15:18:18.667 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 15:18:18.672 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:18:18.674 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.365ms
2022-08-30 15:18:18.676 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 15:18:18.678 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 15:18:18.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 33.2040ms
2022-08-30 15:18:18.705 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:18:18.707 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:18:18.710 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:18:18.711 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 15:18:18.712 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9547ms
2022-08-30 15:18:18.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 15:18:18.717 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 15:18:18.719 +03:00 [INF] CORS policy execution successful.
2022-08-30 15:18:18.720 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:18:18.721 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 15:18:18.723 +03:00 [INF] Get all products
2022-08-30 15:18:18.724 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 15:18:18.792 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 15:18:18.801 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 15:18:18.804 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 15:18:18.806 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 15:18:18.807 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 84.6901ms
2022-08-30 15:18:18.809 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 15:18:18.810 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 15:18:18.816 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 100.1588ms
2022-09-11 11:37:42.832 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-11 11:37:43.616 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-11 11:37:43.617 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-11 11:37:43.623 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-11 11:37:43.624 +03:00 [INF] Hosting environment: Development
2022-09-11 11:37:43.625 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-11 11:38:22.079 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 11:38:22.188 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:22.193 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:22.199 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:22.211 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 135.9339ms
2022-09-11 11:38:22.216 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 11:38:22.233 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:22.236 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:22.271 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 11:38:22.286 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 11:38:22.302 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 11:38:22.314 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:22.328 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 30.0266ms
2022-09-11 11:38:22.333 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 11:38:22.338 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 11:38:22.340 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 124.0418ms
2022-09-11 11:38:22.360 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:22.363 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:22.370 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:22.372 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:22.374 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.9165ms
2022-09-11 11:38:22.380 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:22.384 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:22.388 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:22.391 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:22.432 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:23.195 +03:00 [INF] Get all products
2022-09-11 11:38:24.849 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:25.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 11:38:25.006 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:25.010 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:25.014 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 11:38:25.017 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 11:38:25.021 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 11:38:25.025 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:25.027 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.2057ms
2022-09-11 11:38:25.030 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 11:38:25.033 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 11:38:25.033 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 30.3530ms
2022-09-11 11:38:25.522 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 11:38:25.525 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:25.529 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:25.531 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:25.533 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 11.0144ms
2022-09-11 11:38:25.540 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 11:38:25.543 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:25.546 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:25.548 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:25.550 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:25.562 +03:00 [INF] Get all products
2022-09-11 11:38:25.593 +03:00 [INF] Executed DbCommand (152ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:25.624 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:25.630 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:25.716 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 11:38:25.716 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 11:38:25.719 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 11:38:25.721 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 11:38:26.099 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 11:38:26.102 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:26.107 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:26.109 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:26.114 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 13.5625ms
2022-09-11 11:38:26.128 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 11:38:26.131 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:26.134 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:26.137 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.138 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:26.143 +03:00 [INF] Get all products
2022-09-11 11:38:26.152 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:26.234 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:26.257 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:26.263 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:26.272 +03:00 [INF] Executed DbCommand (260ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:26.272 +03:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:26.275 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:26.282 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 142.7082ms
2022-09-11 11:38:26.283 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.285 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-09-11 11:38:26.299 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:26.301 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 173.3357ms
2022-09-11 11:38:26.306 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:26.316 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:26.322 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 767.8675ms
2022-09-11 11:38:26.323 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:26.324 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.328 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3891.7642ms
2022-09-11 11:38:26.330 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:26.330 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:26.332 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.335 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 794.6946ms
2022-09-11 11:38:26.336 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:26.338 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:26.341 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:26.346 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3965.8255ms
2022-09-11 11:38:26.348 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.350 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:26.355 +03:00 [INF] Get all products
2022-09-11 11:38:26.358 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:26.364 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:26.371 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:26.375 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:26.377 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:26.377 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.4275ms
2022-09-11 11:38:26.379 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:26.380 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:26.386 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 56.0241ms
2022-09-11 11:38:33.007 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:33.008 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:33.012 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:33.014 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:33.017 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0233ms
2022-09-11 11:38:33.025 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:33.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:33.030 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:33.032 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:33.034 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:33.037 +03:00 [INF] Get all products
2022-09-11 11:38:33.040 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:33.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:33.050 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:33.057 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:33.060 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:33.062 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.368ms
2022-09-11 11:38:33.063 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:33.065 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:33.073 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 47.7272ms
2022-09-11 11:38:34.976 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 11:38:34.978 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:34.982 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:34.983 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:34.984 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.8143ms
2022-09-11 11:38:34.993 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 11:38:34.994 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:34.997 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:35.000 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:35.001 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:35.006 +03:00 [INF] Get all products
2022-09-11 11:38:35.008 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:35.011 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:35.015 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:35.020 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:35.023 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:35.024 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.0724ms
2022-09-11 11:38:35.026 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:35.028 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:35.030 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 37.3836ms
2022-09-11 11:38:36.393 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 11:38:36.395 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:36.401 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:36.405 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:36.409 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 16.6987ms
2022-09-11 11:38:36.416 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 11:38:36.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:36.424 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:36.426 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:36.428 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:36.436 +03:00 [INF] Get all products
2022-09-11 11:38:36.438 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:36.443 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:36.449 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:36.454 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:36.456 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:36.457 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.7237ms
2022-09-11 11:38:36.458 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:36.460 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-09-11 11:38:36.461 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 44.6965ms
2022-09-11 11:38:37.611 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 11:38:37.614 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:37.619 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:37.621 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:37.624 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:37.631 +03:00 [INF] Get all products
2022-09-11 11:38:37.635 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:37.640 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:37.648 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:37.654 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:37.656 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:37.659 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.7737ms
2022-09-11 11:38:37.661 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:37.664 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:37.668 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 57.3434ms
2022-09-11 11:38:38.694 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:38.697 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:38.700 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:38.702 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 11:38:38.705 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.5821ms
2022-09-11 11:38:38.710 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 11:38:38.712 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 11:38:38.714 +03:00 [INF] CORS policy execution successful.
2022-09-11 11:38:38.716 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:38.717 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 11:38:38.720 +03:00 [INF] Get all products
2022-09-11 11:38:38.720 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:38:38.723 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 11:38:38.728 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 11:38:38.735 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 11:38:38.737 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 11:38:38.738 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.5544ms
2022-09-11 11:38:38.741 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 11:38:38.743 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 11:38:38.750 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 39.8219ms
2022-09-11 11:54:39.229 +03:00 [WRN] The foreign key property 'Basket.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2022-09-11 11:54:39.530 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:54:39.576 +03:00 [WRN] The foreign key property 'Basket.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2022-09-11 11:55:59.863 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:56:27.836 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 11:56:28.194 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 11:56:28.249 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 11:56:28.385 +03:00 [INF] Executed DbCommand (128ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 11:56:28.404 +03:00 [INF] Applying migration '20220911085600_mig_11'.
2022-09-11 11:56:28.479 +03:00 [ERR] Failed executing DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Baskets" DROP CONSTRAINT "FK_Baskets_AspNetUsers_UserId1";
2022-09-11 11:58:51.391 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 12:13:11.163 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 12:27:24.114 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 12:27:47.326 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 12:27:47.733 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 12:27:47.799 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 12:27:47.810 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 12:27:47.831 +03:00 [INF] Applying migration '20220911092724_mig_11'.
2022-09-11 12:27:48.383 +03:00 [INF] Executed DbCommand (489ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Baskets" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Baskets" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Baskets_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 12:27:48.428 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "BasketItems" (
    "Id" uuid NOT NULL,
    "BasketId" uuid NOT NULL,
    "ProductId" uuid NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_BasketItems" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_BasketItems_Baskets_BasketId" FOREIGN KEY ("BasketId") REFERENCES "Baskets" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_BasketItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);
2022-09-11 12:27:48.477 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BasketItems_BasketId" ON "BasketItems" ("BasketId");
2022-09-11 12:27:48.635 +03:00 [INF] Executed DbCommand (159ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BasketItems_ProductId" ON "BasketItems" ("ProductId");
2022-09-11 12:27:48.784 +03:00 [INF] Executed DbCommand (149ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Baskets_UserId" ON "Baskets" ("UserId");
2022-09-11 12:27:48.792 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220911092724_mig_11', '6.0.4');
2022-09-11 13:07:43.147 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-11 13:07:43.980 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-11 13:07:43.991 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-11 13:07:43.999 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-11 13:07:44.000 +03:00 [INF] Hosting environment: Development
2022-09-11 13:07:44.001 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-11 13:07:50.170 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:07:50.248 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:50.254 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:50.257 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:07:50.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 104.0502ms
2022-09-11 13:07:50.276 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:07:50.290 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:50.293 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:50.329 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:07:50.346 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 13:07:50.359 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 13:07:50.368 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:07:50.376 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 22.4159ms
2022-09-11 13:07:50.380 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:07:50.383 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 13:07:50.384 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 108.6309ms
2022-09-11 13:07:50.394 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:07:50.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:50.398 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:50.398 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:07:50.400 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.4255ms
2022-09-11 13:07:50.404 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:07:50.405 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:50.406 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:50.408 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:07:50.430 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 13:07:51.133 +03:00 [INF] Get all products
2022-09-11 13:07:52.571 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:07:53.000 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 13:07:53.141 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 13:07:53.151 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 13:07:53.163 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:07:53.165 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:53.168 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:53.171 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:07:53.173 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 13:07:53.177 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 13:07:53.180 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:07:53.182 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.804ms
2022-09-11 13:07:53.184 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:07:53.186 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 13:07:53.188 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.2980ms
2022-09-11 13:07:53.474 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 13:07:53.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 13:07:53.529 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:07:53.531 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3098.1567ms
2022-09-11 13:07:53.532 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:07:53.533 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:07:53.535 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:07:53.538 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 13:07:53.540 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:07:53.547 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:07:53.548 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 13:07:53.552 +03:00 [INF] Get all products
2022-09-11 13:07:53.559 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3154.6598ms
2022-09-11 13:07:53.602 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:07:53.608 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 13:07:53.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 13:07:53.626 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 13:07:53.629 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:07:53.631 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 80.0282ms
2022-09-11 13:07:53.633 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:07:53.636 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 13:07:53.645 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 113.1327ms
2022-09-11 13:08:01.377 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-11 13:08:01.378 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:01.381 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:01.382 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:01.383 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 6.4944ms
2022-09-11 13:08:01.389 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-09-11 13:08:01.392 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:01.394 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:01.395 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 13:08:01.399 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-11 13:08:01.412 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-09-11 13:08:01.445 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:08:01.667 +03:00 [INF] Executed DbCommand (149ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 13:08:02.637 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 13:08:02.840 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-11 13:08:02.927 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-11 13:08:02.931 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:02.934 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1532.6443ms
2022-09-11 13:08:02.938 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 13:08:02.942 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjI4OTA4ODIsImV4cCI6MTY2Mjg5MTc4MiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.UR3yV0XqhK4QJq3WoMkL5YFFi5BSTFoXqDAevWEBl4c","expiration":"2022-09-11T10:23:02.2309017Z","refreshToken":"l3TDn8q3hx9w0+nZhP1sRiUJjOcpZhKf6zQKVMPIFkM="}}
2022-09-11 13:08:02.956 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 1567.1143ms
2022-09-11 13:08:04.443 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:08:04.445 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:04.449 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:04.450 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:04.451 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.2255ms
2022-09-11 13:08:04.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:08:04.459 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:04.463 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:04.464 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:08:04.464 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 13:08:04.466 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 13:08:04.467 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:04.468 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.3498ms
2022-09-11 13:08:04.470 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:08:04.471 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 13:08:04.472 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 16.2210ms
2022-09-11 13:08:04.479 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:08:04.480 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:04.481 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:04.482 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:04.483 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.6194ms
2022-09-11 13:08:04.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:08:04.489 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:04.492 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:04.493 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:04.494 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 13:08:04.498 +03:00 [INF] Get all products
2022-09-11 13:08:04.499 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:08:04.503 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 13:08:04.506 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 13:08:04.509 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 13:08:04.510 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:04.512 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.0026ms
2022-09-11 13:08:04.513 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:04.515 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 13:08:04.524 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 35.8075ms
2022-09-11 13:08:13.779 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:08:13.781 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:13.785 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:13.787 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:13.790 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 10.5448ms
2022-09-11 13:08:13.794 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 13:08:13.795 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:13.797 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:13.798 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:08:13.799 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 13:08:13.802 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 13:08:13.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:13.805 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.071ms
2022-09-11 13:08:13.806 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 13:08:13.807 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 13:08:13.808 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 13.9225ms
2022-09-11 13:08:13.815 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 13:08:13.816 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:13.817 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:13.818 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:13.820 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 4.8749ms
2022-09-11 13:08:13.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 13:08:13.824 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:13.826 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:13.827 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:13.827 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 13:08:13.830 +03:00 [INF] Get all products
2022-09-11 13:08:13.831 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:08:13.833 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 13:08:13.836 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 13:08:13.837 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 13:08:13.847 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 13:08:13.851 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 13:08:13.852 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:13.853 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.1391ms
2022-09-11 13:08:13.854 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:13.856 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 13:08:13.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 34.3666ms
2022-09-11 13:08:16.834 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:08:16.836 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:16.839 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:16.841 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 13:08:16.844 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.1935ms
2022-09-11 13:08:16.862 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 13:08:16.867 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 13:08:16.870 +03:00 [INF] CORS policy execution successful.
2022-09-11 13:08:16.872 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:16.875 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 13:08:16.878 +03:00 [INF] Get all products
2022-09-11 13:08:16.879 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:08:16.882 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 13:08:16.885 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 13:08:16.889 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 13:08:16.890 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 13:08:16.891 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.4878ms
2022-09-11 13:08:16.893 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 13:08:16.894 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-8.jpg","path":"photo-images/wallpaper-8.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"d0032748-481c-4b01-9495-6f69ab26f9ec","createdDate":"2022-08-30T12:09:56.180327Z"}]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 13:08:16.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.3836ms
2022-09-11 13:26:20.406 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:26:40.886 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:26:41.241 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:26:41.303 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:26:41.313 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 13:26:41.332 +03:00 [INF] Applying migration '20220911102620_mig_12'.
2022-09-11 13:26:41.493 +03:00 [INF] Executed DbCommand (111ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" ADD "BasketId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2022-09-11 13:26:41.495 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Baskets" ADD "OrderId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2022-09-11 13:26:41.542 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Baskets_OrderId" ON "Baskets" ("OrderId");
2022-09-11 13:26:41.593 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Baskets" ADD CONSTRAINT "FK_Baskets_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES "Orders" ("Id") ON DELETE CASCADE;
2022-09-11 13:26:41.595 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220911102620_mig_12', '6.0.4');
2022-09-11 13:29:59.577 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:30:11.764 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:30:12.121 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:30:12.186 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:30:12.204 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 13:30:12.222 +03:00 [INF] Applying migration '20220911102959_mig_13'.
2022-09-11 13:30:12.458 +03:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Baskets" DROP CONSTRAINT "FK_Baskets_Orders_OrderId";
2022-09-11 13:30:12.470 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX "IX_Baskets_OrderId";
2022-09-11 13:30:12.471 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Baskets" DROP COLUMN "OrderId";
2022-09-11 13:30:12.506 +03:00 [ERR] Failed executing DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Orders_BasketId" ON "Orders" ("BasketId");
2022-09-11 13:33:42.351 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:35:10.268 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:35:46.412 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:36:09.663 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:36:09.998 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:36:10.053 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:36:10.063 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 13:36:10.079 +03:00 [INF] Applying migration '20220911103546_mig_12'.
2022-09-11 13:36:10.117 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220911103546_mig_12', '6.0.4');
2022-09-11 13:39:59.682 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:40:08.516 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:40:08.884 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:40:08.945 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:40:08.956 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 13:40:08.976 +03:00 [INF] Applying migration '20220911103959_mig_13'.
2022-09-11 13:40:09.029 +03:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" DROP CONSTRAINT "FK_Orders_Baskets_BasketId";
2022-09-11 13:43:52.058 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:44:06.914 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 13:44:16.985 +03:00 [INF] Executed DbCommand (9,490ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE "eTradeAPIDb";
2022-09-11 13:44:17.345 +03:00 [INF] Executed DbCommand (90ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2022-09-11 13:44:17.419 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 13:44:17.423 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 13:44:17.437 +03:00 [INF] Applying migration '20220911104352_mig_1'.
2022-09-11 13:44:17.564 +03:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2022-09-11 13:44:17.642 +03:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "NameSurname" text NOT NULL,
    "RefreshToken" text NULL,
    "RefreshTokenEndDate" timestamp with time zone NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);
2022-09-11 13:44:17.720 +03:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Customers" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Customers" PRIMARY KEY ("Id")
);
2022-09-11 13:44:17.798 +03:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Files" (
    "Id" uuid NOT NULL,
    "FileName" text NOT NULL,
    "Path" text NOT NULL,
    "Storage" text NOT NULL,
    "Discriminator" text NOT NULL,
    "Price" numeric NULL,
    "Showcase" boolean NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Files" PRIMARY KEY ("Id")
);
2022-09-11 13:44:17.876 +03:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Products" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Stock" integer NOT NULL,
    "Price" real NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Products" PRIMARY KEY ("Id")
);
2022-09-11 13:44:17.961 +03:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.032 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.099 +03:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.196 +03:00 [INF] Executed DbCommand (96ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.268 +03:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.355 +03:00 [INF] Executed DbCommand (87ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Baskets" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Baskets" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Baskets_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.716 +03:00 [INF] Executed DbCommand (360ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ProductProductImageFile" (
    "ProductImageFilesId" uuid NOT NULL,
    "ProductsId" uuid NOT NULL,
    CONSTRAINT "PK_ProductProductImageFile" PRIMARY KEY ("ProductImageFilesId", "ProductsId"),
    CONSTRAINT "FK_ProductProductImageFile_Files_ProductImageFilesId" FOREIGN KEY ("ProductImageFilesId") REFERENCES "Files" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ProductProductImageFile_Products_ProductsId" FOREIGN KEY ("ProductsId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.774 +03:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "BasketItems" (
    "Id" uuid NOT NULL,
    "BasketId" uuid NOT NULL,
    "ProductId" uuid NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_BasketItems" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_BasketItems_Baskets_BasketId" FOREIGN KEY ("BasketId") REFERENCES "Baskets" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_BasketItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.853 +03:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Orders" (
    "Id" uuid NOT NULL,
    "CustomerId" uuid NOT NULL,
    "Description" text NOT NULL,
    "Address" text NOT NULL,
    "CreatedDate" timestamp with time zone NOT NULL,
    "UpdatedDate" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Orders" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Orders_Baskets_Id" FOREIGN KEY ("Id") REFERENCES "Baskets" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Orders_Customers_CustomerId" FOREIGN KEY ("CustomerId") REFERENCES "Customers" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.892 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "OrderProduct" (
    "OrdersId" uuid NOT NULL,
    "ProductsId" uuid NOT NULL,
    CONSTRAINT "PK_OrderProduct" PRIMARY KEY ("OrdersId", "ProductsId"),
    CONSTRAINT "FK_OrderProduct_Orders_OrdersId" FOREIGN KEY ("OrdersId") REFERENCES "Orders" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_OrderProduct_Products_ProductsId" FOREIGN KEY ("ProductsId") REFERENCES "Products" ("Id") ON DELETE CASCADE
);
2022-09-11 13:44:18.929 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2022-09-11 13:44:18.963 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2022-09-11 13:44:19.020 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2022-09-11 13:44:19.063 +03:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2022-09-11 13:44:19.092 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2022-09-11 13:44:19.119 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2022-09-11 13:44:19.158 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2022-09-11 13:44:19.193 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BasketItems_BasketId" ON "BasketItems" ("BasketId");
2022-09-11 13:44:19.220 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_BasketItems_ProductId" ON "BasketItems" ("ProductId");
2022-09-11 13:44:19.305 +03:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Baskets_UserId" ON "Baskets" ("UserId");
2022-09-11 13:44:19.355 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_OrderProduct_ProductsId" ON "OrderProduct" ("ProductsId");
2022-09-11 13:44:19.384 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Orders_CustomerId" ON "Orders" ("CustomerId");
2022-09-11 13:44:19.428 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ProductProductImageFile_ProductsId" ON "ProductProductImageFile" ("ProductsId");
2022-09-11 13:44:19.430 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220911104352_mig_1', '6.0.4');
2022-09-11 15:13:42.575 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 15:13:53.419 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 15:13:53.793 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 15:13:53.849 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-11 15:13:53.858 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-11 15:13:53.874 +03:00 [INF] Applying migration '20220911121342_mig_2'.
2022-09-11 15:13:53.923 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "BasketItems" ADD "Quantity" integer NOT NULL DEFAULT 0;
2022-09-11 15:13:53.924 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220911121342_mig_2', '6.0.4');
2022-09-11 17:25:45.998 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-11 17:25:46.703 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-11 17:25:46.705 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-11 17:25:46.709 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-11 17:25:46.710 +03:00 [INF] Hosting environment: Development
2022-09-11 17:25:46.710 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-11 17:27:45.460 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:27:45.538 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:45.545 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:45.547 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:27:45.567 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 104.6354ms
2022-09-11 17:27:45.573 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:27:45.584 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:45.590 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:45.623 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:27:45.649 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:27:45.661 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:27:45.671 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:45.683 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 23.4985ms
2022-09-11 17:27:45.689 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:27:45.694 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:27:45.697 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 123.3914ms
2022-09-11 17:27:45.719 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:27:45.722 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:45.729 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:45.730 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:27:45.732 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.3795ms
2022-09-11 17:27:45.736 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:27:45.736 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:45.738 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:45.742 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:45.792 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:46.764 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:27:46.786 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:46.791 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:46.795 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:27:46.799 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:27:46.804 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:27:46.807 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:46.813 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 9.5651ms
2022-09-11 17:27:46.815 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:27:46.817 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:27:46.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 54.9198ms
2022-09-11 17:27:46.881 +03:00 [INF] Get all products
2022-09-11 17:27:47.103 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 17:27:47.108 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:47.124 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:47.127 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:27:47.131 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 28.1399ms
2022-09-11 17:27:47.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 17:27:47.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:47.146 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:47.148 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:47.156 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:47.161 +03:00 [INF] Get all products
2022-09-11 17:27:47.489 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 17:27:47.491 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:47.495 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:47.497 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:27:47.499 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 9.9300ms
2022-09-11 17:27:47.504 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 17:27:47.505 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:47.511 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:47.513 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:47.514 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:47.520 +03:00 [INF] Get all products
2022-09-11 17:27:48.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:48.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:48.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:49.211 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.255 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.258 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.326 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 17:27:49.326 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 17:27:49.332 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 17:27:49.332 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-11 17:27:49.651 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.651 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.651 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.657 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.662 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.665 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.676 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.676 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.676 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.678 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2161.8147ms
2022-09-11 17:27:49.683 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3887.4368ms
2022-09-11 17:27:49.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 17:27:49.680 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2521.5203ms
2022-09-11 17:27:49.684 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:27:49.685 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.687 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.690 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:49.692 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.693 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:49.694 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.696 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.698 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:49.699 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.701 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:49.707 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.711 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.713 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:49.714 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:49.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3980.6863ms
2022-09-11 17:27:49.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 2576.3645ms
2022-09-11 17:27:49.716 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 2212.5250ms
2022-09-11 17:27:49.717 +03:00 [INF] Get all products
2022-09-11 17:27:49.721 +03:00 [INF] Get all products
2022-09-11 17:27:49.768 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:49.768 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:49.773 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.775 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.778 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.780 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.785 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.788 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.790 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.792 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.793 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 77.3711ms
2022-09-11 17:27:49.795 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 76.9256ms
2022-09-11 17:27:49.797 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:27:49.803 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.808 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.810 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:49.811 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.815 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.819 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:49.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 138.9795ms
2022-09-11 17:27:49.822 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 137.7795ms
2022-09-11 17:27:49.823 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.828 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:27:49.837 +03:00 [INF] Get all products
2022-09-11 17:27:49.838 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:49.841 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:27:49.844 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:27:49.851 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:27:49.853 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:27:49.854 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.7675ms
2022-09-11 17:27:49.857 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:27:49.858 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:27:49.859 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 62.5499ms
2022-09-11 17:27:53.181 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-11 17:27:53.183 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:53.186 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:53.189 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:27:53.195 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 14.9825ms
2022-09-11 17:27:53.200 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-09-11 17:27:53.207 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:27:53.210 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:27:53.211 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 17:27:53.215 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-11 17:27:53.240 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-09-11 17:27:53.259 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:27:53.394 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 17:27:53.447 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2022-09-11 17:27:53.802 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 576.9848ms
2022-09-11 17:27:53.809 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 17:27:54.005 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 39
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-11 17:27:54.361 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-11 17:27:54.379 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 500 - application/json 1179.3211ms
2022-09-11 17:28:24.215 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/users - -
2022-09-11 17:28:24.218 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/users
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:24.225 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:24.227 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:24.231 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/users - - - 204 - - 15.6269ms
2022-09-11 17:28:24.239 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/users application/json 129
2022-09-11 17:28:24.241 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/users
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 129
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:24.245 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:24.246 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API)'
2022-09-11 17:28:24.250 +03:00 [INF] Route matched with {action = "CreateUser", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(eTrade.Application.Features.Commands.AppUser.CreateUser.CreateUserCommandRequest) on controller eTradeAPI.API.controller.UsersController (eTradeAPI.API).
2022-09-11 17:28:24.259 +03:00 [INF] RequestBody: {"nameSurname":"Mustafa Batı","username":"batibey","email":"mustafa.bati9@gmail.com","password":"1907","passwordConfirm":"1907"}
2022-09-11 17:28:24.318 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:24.325 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 17:28:24.641 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = DateTime), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "LockoutEnabled", "LockoutEnd", "NameSurname", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "RefreshToken", "RefreshTokenEndDate", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2022-09-11 17:28:24.706 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.CreateUser.CreateUserCommandResponse'.
2022-09-11 17:28:24.713 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:24.716 +03:00 [INF] Executed action eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API) in 457.6753ms
2022-09-11 17:28:24.718 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API)'
2022-09-11 17:28:24.719 +03:00 [INF] ResponseBody: {"succeeded":true,"message":"Kullanıcı Başarı ile Oluşturuldu"}
2022-09-11 17:28:24.720 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/users application/json 129 - 200 - application/json;+charset=utf-8 480.6662ms
2022-09-11 17:28:31.492 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-11 17:28:31.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:31.496 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:31.497 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:31.498 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 6.4427ms
2022-09-11 17:28:31.503 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-11 17:28:31.503 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:31.506 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:31.507 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 17:28:31.509 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-11 17:28:31.511 +03:00 [INF] RequestBody: {"usernameOrEmail":"batibey","password":"1907"}
2022-09-11 17:28:31.512 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:31.526 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 17:28:32.508 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 17:28:32.540 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-11 17:28:32.548 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-11 17:28:32.556 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:32.558 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1047.3644ms
2022-09-11 17:28:32.559 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 17:28:32.562 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYmF0aWJleSIsIm5iZiI6MTY2MjkwNjUxMiwiZXhwIjoxNjYyOTA3NDEyLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.NbmcToA7RcDDbuCCPIQv4JtgkvUNuqWU78IrvdUKLeg","expiration":"2022-09-11T14:43:32.0554559Z","refreshToken":"If62wOJpzgnnComOdBAi+XCVUI+8cX0CR28foKWnRDM="}}
2022-09-11 17:28:32.568 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 200 - application/json;+charset=utf-8 1065.0109ms
2022-09-11 17:28:34.097 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:28:34.099 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:34.104 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:34.107 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:34.109 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.2370ms
2022-09-11 17:28:34.118 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:28:34.121 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:34.123 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:34.124 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:34.126 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:28:34.129 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:28:34.135 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:34.137 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.7384ms
2022-09-11 17:28:34.138 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:34.140 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:28:34.142 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.9343ms
2022-09-11 17:28:34.151 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:34.154 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:34.157 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:34.158 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:34.160 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.9869ms
2022-09-11 17:28:34.165 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:34.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:34.171 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:34.172 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:34.172 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:34.175 +03:00 [INF] Get all products
2022-09-11 17:28:34.176 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:34.181 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:34.185 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:34.190 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:34.191 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:34.198 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.9609ms
2022-09-11 17:28:34.200 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:34.202 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:34.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.5505ms
2022-09-11 17:28:35.542 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:28:35.545 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:35.552 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:35.554 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:35.559 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:28:35.563 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:28:35.569 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:35.571 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 8.7265ms
2022-09-11 17:28:35.573 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:35.575 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:28:35.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 34.6330ms
2022-09-11 17:28:35.586 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:35.587 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:35.590 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:35.591 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:35.593 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:35.603 +03:00 [INF] Get all products
2022-09-11 17:28:35.605 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:35.609 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:35.617 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:35.629 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:35.631 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:35.633 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 31.0402ms
2022-09-11 17:28:35.635 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:35.636 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:35.638 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 52.2861ms
2022-09-11 17:28:36.343 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 17:28:36.346 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:36.349 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:36.351 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:36.352 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.5312ms
2022-09-11 17:28:36.358 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-11 17:28:36.364 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:36.367 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:36.369 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:36.371 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:36.374 +03:00 [INF] Get all products
2022-09-11 17:28:36.378 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:36.381 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:36.386 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:36.395 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:36.398 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:36.399 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.4851ms
2022-09-11 17:28:36.400 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:36.402 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:36.403 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 45.6715ms
2022-09-11 17:28:37.184 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 17:28:37.187 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:37.190 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:37.192 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:37.194 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 9.5610ms
2022-09-11 17:28:37.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-09-11 17:28:37.204 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:37.207 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:37.209 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:37.210 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:37.215 +03:00 [INF] Get all products
2022-09-11 17:28:37.218 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:37.222 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:37.226 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:37.235 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:37.239 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:37.240 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.4674ms
2022-09-11 17:28:37.242 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:37.244 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:37.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 47.3296ms
2022-09-11 17:28:38.057 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-09-11 17:28:38.060 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:38.064 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:38.071 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:38.073 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 16.0279ms
2022-09-11 17:28:38.080 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-09-11 17:28:38.081 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:38.090 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:38.092 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:38.093 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:38.096 +03:00 [INF] Get all products
2022-09-11 17:28:38.098 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:38.104 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:38.108 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:38.112 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:38.117 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:38.118 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.2169ms
2022-09-11 17:28:38.119 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:38.121 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:38.122 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 42.1921ms
2022-09-11 17:28:39.851 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - -
2022-09-11 17:28:39.853 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:39.856 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:39.857 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:39.859 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - - - 204 - - 8.0886ms
2022-09-11 17:28:39.866 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - -
2022-09-11 17:28:39.868 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:39.872 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:39.874 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:39.877 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:39.888 +03:00 [INF] Get all products
2022-09-11 17:28:39.889 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:39.892 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:40.021 +03:00 [ERR] Failed executing DbCommand (118ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:40.048 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-09-11 17:28:40.321 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 434.5849ms
2022-09-11 17:28:40.324 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:40.358 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 28
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 37
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-09-11 17:28:40.399 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-09-11 17:28:40.401 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - - - 500 - application/json 534.9504ms
2022-09-11 17:28:42.197 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:42.200 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:42.204 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:42.206 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:42.217 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 19.3438ms
2022-09-11 17:28:42.223 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:42.225 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:42.231 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:42.233 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:42.236 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:42.240 +03:00 [INF] Get all products
2022-09-11 17:28:42.244 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:42.248 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:42.253 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:42.265 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:42.269 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:42.278 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 39.4235ms
2022-09-11 17:28:42.281 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:42.283 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:42.291 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 67.3165ms
2022-09-11 17:28:49.260 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:28:49.263 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:49.267 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:49.270 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:49.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.2172ms
2022-09-11 17:28:49.281 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:28:49.283 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:49.294 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:49.295 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:49.297 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:28:49.307 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:28:49.309 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:49.311 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.108ms
2022-09-11 17:28:49.312 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:28:49.314 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:28:49.318 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 37.3950ms
2022-09-11 17:28:49.326 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:49.327 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:49.328 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:49.329 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:49.330 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.4048ms
2022-09-11 17:28:49.336 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:28:49.337 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:49.339 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:49.339 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:49.341 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:49.343 +03:00 [INF] Get all products
2022-09-11 17:28:49.345 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:49.350 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:49.353 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:49.357 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:49.358 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:49.359 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.551ms
2022-09-11 17:28:49.360 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:49.365 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:49.367 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.4845ms
2022-09-11 17:28:51.736 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-09-11 17:28:51.738 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:51.741 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:51.743 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:51.744 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.4716ms
2022-09-11 17:28:51.762 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-09-11 17:28:51.764 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:51.767 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:51.770 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-09-11 17:28:51.794 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-09-11 17:28:51.797 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-09-11 17:28:51.798 +03:00 [INF] RequestBody: 
2022-09-11 17:28:51.800 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"hzuATYpO290lwMI8L0V7kQ","connectionToken":"HoK7EMB2AEebKMzzXUqlEA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-09-11 17:28:51.805 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 43.8987ms
2022-09-11 17:28:51.834 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=HoK7EMB2AEebKMzzXUqlEA - -
2022-09-11 17:28:51.835 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-09-11 17:28:51.838 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:51.839 +03:00 [INF] Executing endpoint '/products-hub'
2022-09-11 17:28:56.607 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 17:28:56.610 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:56.617 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:56.619 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:28:56.621 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 14.4809ms
2022-09-11 17:28:56.627 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 17:28:56.628 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:28:56.631 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:28:56.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:56.634 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:28:56.636 +03:00 [INF] Get all products
2022-09-11 17:28:56.637 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:28:56.642 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:28:56.646 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:28:56.650 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:28:56.652 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:28:56.653 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.7231ms
2022-09-11 17:28:56.662 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:28:56.665 +03:00 [INF] ResponseBody: {"totalProductCount":0,"products":[]}
2022-09-11 17:28:56.667 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 39.8353ms
2022-09-11 17:29:17.245 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-09-11 17:29:17.246 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:17.249 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:17.251 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:17.256 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 11.3940ms
2022-09-11 17:29:17.271 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 37
2022-09-11 17:29:17.273 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 37
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:17.278 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:17.660 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-09-11 17:29:17.665 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:17.667 +03:00 [INF] RequestBody: {"name":"test","stock":10,"price":50}
2022-09-11 17:29:17.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:17.850 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-11 17:29:17.871 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-09-11 17:29:17.872 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 205.5271ms
2022-09-11 17:29:17.875 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-09-11 17:29:17.878 +03:00 [INF] Response:
StatusCode: 201
2022-09-11 17:29:17.882 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 37 - 201 0 - 611.1154ms
2022-09-11 17:29:17.894 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 17:29:17.896 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:17.900 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:17.902 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:17.904 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.7221ms
2022-09-11 17:29:17.909 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 17:29:17.914 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:17.923 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:17.931 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:29:17.932 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:17.934 +03:00 [INF] Get all products
2022-09-11 17:29:17.935 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:17.938 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:29:17.946 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:29:17.970 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:29:17.978 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:17.980 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 46.2862ms
2022-09-11 17:29:17.981 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:29:17.983 +03:00 [INF] ResponseBody: {"totalProductCount":1,"products":[{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-09-11 17:29:17.984 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 75.5706ms
2022-09-11 17:29:20.053 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:20.056 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:20.062 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:20.064 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:20.070 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 204 - - 16.9822ms
2022-09-11 17:29:20.074 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:20.081 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:20.090 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:20.092 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 17:29:20.097 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:20.105 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:20.152 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:29:20.177 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 17:29:20.181 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:20.184 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 83.6489ms
2022-09-11 17:29:20.187 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 17:29:20.189 +03:00 [INF] ResponseBody: []
2022-09-11 17:29:20.190 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 200 - application/json;+charset=utf-8 115.5205ms
2022-09-11 17:29:25.552 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:25.555 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:25.613 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:25.616 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:25.618 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 204 - - 66.7853ms
2022-09-11 17:29:25.629 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 multipart/form-data;+boundary=----WebKitFormBoundary1BLfEghKZNz3eqVz 1807240
2022-09-11 17:29:25.633 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1BLfEghKZNz3eqVz
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 1807240
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:25.644 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:25.648 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-09-11 17:29:25.665 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:33.334 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:33.344 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-09-11 17:29:33.419 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Showcase", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2022-09-11 17:29:33.428 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p7='?' (DbType = Guid), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p7, @p8);
2022-09-11 17:29:33.433 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-09-11 17:29:33.434 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 7765.3326ms
2022-09-11 17:29:33.438 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-09-11 17:29:33.439 +03:00 [INF] Response:
StatusCode: 200
2022-09-11 17:29:33.442 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 multipart/form-data;+boundary=----WebKitFormBoundary1BLfEghKZNz3eqVz 1807240 - 200 0 - 7812.8377ms
2022-09-11 17:29:40.416 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:40.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:40.423 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:40.425 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:40.435 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 204 - - 18.9309ms
2022-09-11 17:29:40.441 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:40.448 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:40.453 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:40.463 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 17:29:40.467 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:40.480 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:40.493 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:29:40.523 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 17:29:40.527 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:40.528 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 51.4769ms
2022-09-11 17:29:40.530 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 17:29:40.531 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-9.jpg","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","fileName":"wallpaper-9.jpg"}]
2022-09-11 17:29:40.533 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 200 - application/json;+charset=utf-8 91.9238ms
2022-09-11 17:29:47.230 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa&productId=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:47.232 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:47.239 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:47.242 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:47.243 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa&productId=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 204 - - 14.0193ms
2022-09-11 17:29:47.248 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa&productId=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 17:29:47.250 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:47.253 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:47.260 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-09-11 17:29:47.266 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:47.282 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:47.331 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-09-11 17:29:47.356 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-09-11 17:29:47.368 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-09-11 17:29:47.373 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-09-11 17:29:47.375 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:47.377 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 104.032ms
2022-09-11 17:29:47.381 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-09-11 17:29:47.382 +03:00 [INF] ResponseBody: {}
2022-09-11 17:29:47.385 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa&productId=83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 200 - application/json;+charset=utf-8 137.1870ms
2022-09-11 17:29:55.095 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:29:55.097 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:55.102 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:55.105 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:55.107 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.0259ms
2022-09-11 17:29:55.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 17:29:55.118 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:55.121 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:55.122 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:29:55.123 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 17:29:55.127 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 17:29:55.129 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:55.136 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 8.8576ms
2022-09-11 17:29:55.137 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 17:29:55.140 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 17:29:55.141 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.6494ms
2022-09-11 17:29:55.149 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:29:55.149 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:55.155 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:55.156 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 17:29:55.157 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.7010ms
2022-09-11 17:29:55.160 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 17:29:55.161 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 17:29:55.166 +03:00 [INF] CORS policy execution successful.
2022-09-11 17:29:55.167 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:29:55.168 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 17:29:55.170 +03:00 [INF] Get all products
2022-09-11 17:29:55.171 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 17:29:55.174 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 17:29:55.179 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 17:29:55.193 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 17:29:55.199 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 17:29:55.201 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 31.6264ms
2022-09-11 17:29:55.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 17:29:55.204 +03:00 [INF] ResponseBody: {"totalProductCount":1,"products":[{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 17:29:55.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 49.1361ms
2022-09-11 21:12:09.543 +03:00 [INF] Executed endpoint '/products-hub'
2022-09-11 21:12:09.552 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Sun, 11 Sep 2022 14:28:51 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-09-11 21:12:09.557 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=HoK7EMB2AEebKMzzXUqlEA - - - 101 - - 13397723.7143ms
2022-09-11 21:12:10.149 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:12:10.151 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:10.155 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:10.158 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:10.161 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 13.2963ms
2022-09-11 21:12:10.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:12:10.172 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:10.177 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:10.183 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:12:10.185 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 21:12:10.191 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 21:12:10.194 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:12:10.197 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.8986ms
2022-09-11 21:12:10.198 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:12:10.200 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 21:12:10.202 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 31.5142ms
2022-09-11 21:12:10.212 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:12:10.213 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:10.216 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:10.218 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:10.219 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9079ms
2022-09-11 21:12:10.223 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:12:10.224 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:10.230 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:10.231 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:10.232 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:12:10.244 +03:00 [INF] Get all products
2022-09-11 21:12:10.245 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:12:10.311 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:12:10.320 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:12:10.323 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:12:10.325 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:12:10.326 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 91.5206ms
2022-09-11 21:12:10.327 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:10.328 +03:00 [INF] ResponseBody: {"totalProductCount":1,"products":[{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:12:10.332 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 108.4272ms
2022-09-11 21:12:16.555 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-11 21:12:16.557 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:16.561 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:16.563 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:16.572 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 17.2071ms
2022-09-11 21:12:16.577 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-11 21:12:16.580 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:16.591 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:16.594 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 21:12:16.595 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-11 21:12:16.599 +03:00 [INF] RequestBody: {"usernameOrEmail":"batibey","password":"1907"}
2022-09-11 21:12:16.621 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:12:16.629 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 21:12:16.646 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-11 21:12:16.661 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-11 21:12:16.673 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-11 21:12:16.675 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:12:16.677 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 79.309ms
2022-09-11 21:12:16.682 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-11 21:12:16.684 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYmF0aWJleSIsIm5iZiI6MTY2MjkxOTkzNiwiZXhwIjoxNjYyOTIwODM2LCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.67cYCdjYm3K7NNCkqt-pFxAGdNsch-WQW8tLXJhmCSE","expiration":"2022-09-11T18:27:16.6432462Z","refreshToken":"ASmIYyV51LUv5vgD6WeO4zF7B1LDAvrWGUKeUuLPvjg="}}
2022-09-11 21:12:16.686 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 200 - application/json;+charset=utf-8 108.2873ms
2022-09-11 21:12:25.049 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-09-11 21:12:25.053 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:25.065 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:25.067 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:25.071 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 21.8456ms
2022-09-11 21:12:25.090 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-09-11 21:12:25.096 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:25.116 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:25.118 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-09-11 21:12:25.127 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-09-11 21:12:25.130 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-09-11 21:12:25.132 +03:00 [INF] RequestBody: 
2022-09-11 21:12:25.134 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"4sJqT7CUPw1xmyN7Z3rYjQ","connectionToken":"bbtVx5uQvd30X140IhCFMQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-09-11 21:12:25.138 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 49.1799ms
2022-09-11 21:12:25.160 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=bbtVx5uQvd30X140IhCFMQ - -
2022-09-11 21:12:25.161 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-09-11 21:12:25.164 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:25.165 +03:00 [INF] Executing endpoint '/products-hub'
2022-09-11 21:12:34.167 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:12:34.169 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:34.177 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:34.179 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:34.182 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 14.8273ms
2022-09-11 21:12:34.188 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:12:34.194 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:34.200 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:34.203 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:34.206 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:12:34.213 +03:00 [INF] Get all products
2022-09-11 21:12:34.215 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:12:34.217 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:12:34.221 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:12:34.227 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:12:34.231 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:12:34.233 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.0104ms
2022-09-11 21:12:34.236 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:34.242 +03:00 [INF] ResponseBody: {"totalProductCount":1,"products":[{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:12:34.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 58.2478ms
2022-09-11 21:12:55.376 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-09-11 21:12:55.378 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:55.380 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:55.383 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:55.386 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 9.5576ms
2022-09-11 21:12:55.395 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 39
2022-09-11 21:12:55.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 39
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:55.398 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:55.404 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-09-11 21:12:55.406 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:12:55.408 +03:00 [INF] RequestBody: {"name":"test2","stock":20,"price":100}
2022-09-11 21:12:55.411 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:12:55.420 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-11 21:12:55.427 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-09-11 21:12:55.428 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 20.3049ms
2022-09-11 21:12:55.431 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-09-11 21:12:55.433 +03:00 [INF] Response:
StatusCode: 201
2022-09-11 21:12:55.434 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 39 - 201 0 - 39.3302ms
2022-09-11 21:12:55.451 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:12:55.454 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:55.458 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:55.459 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:12:55.466 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 15.2026ms
2022-09-11 21:12:55.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:12:55.477 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:12:55.483 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:12:55.484 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:55.485 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:12:55.488 +03:00 [INF] Get all products
2022-09-11 21:12:55.490 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:12:55.500 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:12:55.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:12:55.515 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:12:55.519 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:12:55.520 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 33.1406ms
2022-09-11 21:12:55.522 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:12:55.529 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:12:55.536 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 62.9578ms
2022-09-11 21:13:06.038 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 21:13:06.040 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:06.043 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:06.045 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:06.046 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 204 - - 8.3923ms
2022-09-11 21:13:06.051 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - -
2022-09-11 21:13:06.059 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:06.073 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:06.076 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:06.077 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:06.089 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:06.107 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:06.124 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 21:13:06.139 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:06.148 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 62.2576ms
2022-09-11 21:13:06.166 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:06.173 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-9.jpg","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","fileName":"wallpaper-9.jpg"}]
2022-09-11 21:13:06.185 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4 - - - 200 - application/json;+charset=utf-8 133.9022ms
2022-09-11 21:13:10.340 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:10.342 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:10.352 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:10.355 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:10.364 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 23.9185ms
2022-09-11 21:13:10.369 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:10.370 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:10.383 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:10.384 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:10.386 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:10.398 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:10.401 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:10.416 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 21:13:10.424 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:10.427 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 30.3517ms
2022-09-11 21:13:10.429 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:10.431 +03:00 [INF] ResponseBody: []
2022-09-11 21:13:10.432 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 63.5353ms
2022-09-11 21:13:13.753 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:13:13.754 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:13.760 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:13.762 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:13.765 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.4971ms
2022-09-11 21:13:13.770 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:13:13.771 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:13.781 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:13.784 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:13:13.787 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 21:13:13.796 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 21:13:13.801 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:13.802 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.3617ms
2022-09-11 21:13:13.804 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:13:13.809 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 21:13:13.813 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 43.0820ms
2022-09-11 21:13:13.823 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:13:13.825 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:13.832 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:13.834 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:13.842 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 18.7924ms
2022-09-11 21:13:13.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:13:13.855 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:13.861 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:13.863 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:13.864 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:13.873 +03:00 [INF] Get all products
2022-09-11 21:13:13.874 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:14.041 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:13:14.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:14.050 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:13:14.053 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:14.061 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 189.1206ms
2022-09-11 21:13:14.063 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:14.066 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:13:14.075 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 224.7020ms
2022-09-11 21:13:22.544 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:13:22.546 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:22.550 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:22.552 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:22.554 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 10.0366ms
2022-09-11 21:13:22.559 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-11 21:13:22.560 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:22.574 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:22.575 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:22.586 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:22.590 +03:00 [INF] Get all products
2022-09-11 21:13:22.591 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:22.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:13:22.607 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:22.621 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:13:22.632 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:22.638 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 49.0599ms
2022-09-11 21:13:22.646 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:22.652 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:13:22.665 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 105.5452ms
2022-09-11 21:13:25.275 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:25.283 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:25.295 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:25.297 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:25.300 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 25.0492ms
2022-09-11 21:13:25.309 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:25.314 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:25.319 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:25.320 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:25.324 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:25.328 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:25.334 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:25.345 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 21:13:25.349 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:25.352 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 24.785ms
2022-09-11 21:13:25.358 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:25.361 +03:00 [INF] ResponseBody: []
2022-09-11 21:13:25.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 66.4355ms
2022-09-11 21:13:30.343 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:30.346 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:30.353 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:30.356 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:30.360 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 16.9474ms
2022-09-11 21:13:30.371 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=1963160b-88dd-4feb-b47e-e0f1521b1cfc multipart/form-data;+boundary=----WebKitFormBoundarywXNCcSGOlMALbIwE 152986
2022-09-11 21:13:30.374 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywXNCcSGOlMALbIwE
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 152986
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:30.379 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:30.383 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-09-11 21:13:30.386 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:34.756 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:34.761 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-09-11 21:13:34.767 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Showcase", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2022-09-11 21:13:34.775 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p7='?' (DbType = Guid), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p7, @p8);
2022-09-11 21:13:34.782 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-09-11 21:13:34.783 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 4378.5678ms
2022-09-11 21:13:34.784 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-09-11 21:13:34.788 +03:00 [INF] Response:
StatusCode: 200
2022-09-11 21:13:34.792 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=1963160b-88dd-4feb-b47e-e0f1521b1cfc multipart/form-data;+boundary=----WebKitFormBoundarywXNCcSGOlMALbIwE 152986 - 200 0 - 4421.5519ms
2022-09-11 21:13:39.012 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:39.014 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:39.020 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:39.024 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:39.026 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 14.4398ms
2022-09-11 21:13:39.032 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:39.040 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:39.044 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:39.046 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:39.048 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:39.062 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:39.072 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:39.095 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-11 21:13:39.104 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:39.106 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 45.4367ms
2022-09-11 21:13:39.108 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-11 21:13:39.109 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-10.jpg","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","fileName":"wallpaper-10.jpg"}]
2022-09-11 21:13:39.119 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 87.3379ms
2022-09-11 21:13:41.986 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=3dfa8ba2-e47c-4329-8658-495697ab065d&productId=1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:41.989 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:41.992 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:41.995 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:41.998 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=3dfa8ba2-e47c-4329-8658-495697ab065d&productId=1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 12.4721ms
2022-09-11 21:13:42.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=3dfa8ba2-e47c-4329-8658-495697ab065d&productId=1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-11 21:13:42.008 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:42.010 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:42.011 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-09-11 21:13:42.012 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:42.018 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:42.031 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-09-11 21:13:42.064 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-09-11 21:13:42.076 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-09-11 21:13:42.092 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-09-11 21:13:42.093 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:42.105 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 89.7374ms
2022-09-11 21:13:42.112 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-09-11 21:13:42.122 +03:00 [INF] ResponseBody: {}
2022-09-11 21:13:42.129 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=3dfa8ba2-e47c-4329-8658-495697ab065d&productId=1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 124.7168ms
2022-09-11 21:13:47.152 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:13:47.154 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:47.159 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:47.162 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:47.164 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.2075ms
2022-09-11 21:13:47.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-11 21:13:47.171 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:47.173 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:47.174 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:13:47.175 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-11 21:13:47.186 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-11 21:13:47.189 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:47.190 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.7324ms
2022-09-11 21:13:47.198 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-11 21:13:47.201 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-11 21:13:47.202 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 33.5081ms
2022-09-11 21:13:47.214 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:13:47.216 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:47.219 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:47.221 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-11 21:13:47.222 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.0827ms
2022-09-11 21:13:47.229 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-11 21:13:47.232 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-11 21:13:47.234 +03:00 [INF] CORS policy execution successful.
2022-09-11 21:13:47.235 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:47.237 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-11 21:13:47.241 +03:00 [INF] Get all products
2022-09-11 21:13:47.243 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-11 21:13:47.246 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-11 21:13:47.251 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-11 21:13:47.265 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-11 21:13:47.267 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-11 21:13:47.269 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.1606ms
2022-09-11 21:13:47.276 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-11 21:13:47.278 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-11 21:13:47.280 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 51.0376ms
2022-09-11 21:14:06.515 +03:00 [INF] Executed endpoint '/products-hub'
2022-09-11 21:14:06.517 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Sun, 11 Sep 2022 18:12:24 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-09-11 21:14:06.520 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=bbtVx5uQvd30X140IhCFMQ - - - 101 - - 101360.4749ms
2022-09-13 23:37:39.168 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-13 23:37:39.946 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-13 23:37:39.947 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-13 23:37:39.952 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-13 23:37:39.953 +03:00 [INF] Hosting environment: Development
2022-09-13 23:37:39.954 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-13 23:38:21.319 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:38:21.485 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:38:21.492 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:38:21.498 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:38:21.517 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 208.2229ms
2022-09-13 23:38:21.523 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-13 23:38:21.535 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:38:21.537 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:38:21.577 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:38:21.614 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:38:21.693 +03:00 [INF] RequestBody: {"usernameOrEmail":"batibey","password":"1111"}
2022-09-13 23:38:24.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:38:25.283 +03:00 [INF] Executed DbCommand (162ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:38:25.470 +03:00 [WRN] Invalid password for user.
2022-09-13 23:38:25.472 +03:00 [WRN] User failed to provide the correct password.
2022-09-13 23:38:25.731 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4109.0617ms
2022-09-13 23:38:25.735 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:38:25.876 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.AuthencationErrorException: Kullanıcı ya da Kimlik Doğrulama Hatası
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 48
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-13 23:38:26.100 +03:00 [ERR] Kullanıcı ya da Kimlik Doğrulama Hatası
2022-09-13 23:38:26.127 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 500 - application/json 4604.2941ms
2022-09-13 23:39:11.115 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:39:11.118 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:39:11.122 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:39:11.124 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:39:11.125 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 10.4469ms
2022-09-13 23:39:11.135 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-13 23:39:11.137 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:39:11.140 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:39:11.144 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:39:11.147 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:39:11.155 +03:00 [INF] RequestBody: {"usernameOrEmail":"batibey","password":"1111"}
2022-09-13 23:39:11.238 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:39:11.248 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:39:11.262 +03:00 [WRN] Invalid password for user.
2022-09-13 23:39:11.264 +03:00 [WRN] User failed to provide the correct password.
2022-09-13 23:39:11.507 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 354.0904ms
2022-09-13 23:39:11.509 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:39:11.703 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.AuthencationErrorException: Kullanıcı ya da Kimlik Doğrulama Hatası
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 48
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-13 23:39:11.721 +03:00 [ERR] Kullanıcı ya da Kimlik Doğrulama Hatası
2022-09-13 23:39:11.723 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 500 - application/json 588.6263ms
2022-09-13 23:40:18.761 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/users - -
2022-09-13 23:40:18.767 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/users
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:18.769 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:18.770 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:40:18.771 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/users - - - 204 - - 9.9825ms
2022-09-13 23:40:18.775 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/users application/json 118
2022-09-13 23:40:18.776 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/users
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 118
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:18.778 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:18.780 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API)'
2022-09-13 23:40:18.783 +03:00 [INF] Route matched with {action = "CreateUser", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(eTrade.Application.Features.Commands.AppUser.CreateUser.CreateUserCommandRequest) on controller eTradeAPI.API.controller.UsersController (eTradeAPI.API).
2022-09-13 23:40:18.786 +03:00 [INF] RequestBody: {"nameSurname":"Anıl Albayrak","username":"anil","email":"anil@gmail.com","password":"1903","passwordConfirm":"1903"}
2022-09-13 23:40:18.821 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:40:18.831 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:40:19.029 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?', @p1='?' (DbType = Int32), @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?', @p11='?', @p12='?' (DbType = Boolean), @p13='?', @p14='?' (DbType = DateTime), @p15='?', @p16='?' (DbType = Boolean), @p17='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "LockoutEnabled", "LockoutEnd", "NameSurname", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "RefreshToken", "RefreshTokenEndDate", "SecurityStamp", "TwoFactorEnabled", "UserName")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17);
2022-09-13 23:40:19.089 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.CreateUser.CreateUserCommandResponse'.
2022-09-13 23:40:19.097 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:40:19.100 +03:00 [INF] Executed action eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API) in 314.2771ms
2022-09-13 23:40:19.103 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.UsersController.CreateUser (eTradeAPI.API)'
2022-09-13 23:40:19.104 +03:00 [INF] ResponseBody: {"succeeded":true,"message":"Kullanıcı Başarı ile Oluşturuldu"}
2022-09-13 23:40:19.106 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/users application/json 118 - 200 - application/json;+charset=utf-8 330.5903ms
2022-09-13 23:40:41.487 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:40:41.497 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:41.500 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:41.502 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:40:41.504 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 16.8629ms
2022-09-13 23:40:41.511 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-13 23:40:41.513 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:41.515 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:41.517 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:40:41.519 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:40:41.523 +03:00 [INF] RequestBody: {"usernameOrEmail":"anil","password":"1903"}
2022-09-13 23:40:41.549 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:40:41.560 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:40:42.515 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:40:42.592 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-13 23:40:42.600 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-13 23:40:42.609 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:40:42.611 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1087.6881ms
2022-09-13 23:40:42.613 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:40:42.616 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzEwMTY0MSwiZXhwIjoxNjYzMTAyNTQxLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.szsY8HeAu-Et6QEO92-lvGrw-YwJdegRaE6_ZGIKkr0","expiration":"2022-09-13T20:55:41.9877249Z","refreshToken":"tJm92WBuwYamFVcHcmaAPH3O911gpGsN2UPZXbiiGzA="}}
2022-09-13 23:40:42.619 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 1107.7314ms
2022-09-13 23:40:51.231 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:40:51.233 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:51.239 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:51.241 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:40:51.244 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 12.9084ms
2022-09-13 23:40:51.252 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-09-13 23:40:51.254 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:40:51.262 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:40:51.263 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:40:51.266 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:40:51.271 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-09-13 23:40:51.276 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:40:51.284 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:40:51.312 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2022-09-13 23:40:51.509 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 238.5247ms
2022-09-13 23:40:51.513 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:40:51.644 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 39
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-13 23:40:51.674 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-13 23:40:51.676 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 500 - application/json 424.3209ms
2022-09-13 23:41:01.480 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:41:01.482 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:01.485 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:01.486 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:01.487 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 6.9169ms
2022-09-13 23:41:01.493 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-13 23:41:01.495 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:01.498 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:01.500 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:41:01.502 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:41:01.506 +03:00 [INF] RequestBody: {"usernameOrEmail":"anil","password":"1907"}
2022-09-13 23:41:01.509 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:41:01.516 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:41:01.538 +03:00 [WRN] Invalid password for user.
2022-09-13 23:41:01.540 +03:00 [WRN] User failed to provide the correct password.
2022-09-13 23:41:01.785 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 279.6554ms
2022-09-13 23:41:01.787 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:41:01.925 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.AuthencationErrorException: Kullanıcı ya da Kimlik Doğrulama Hatası
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 48
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-13 23:41:01.954 +03:00 [ERR] Kullanıcı ya da Kimlik Doğrulama Hatası
2022-09-13 23:41:01.956 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 500 - application/json 463.6666ms
2022-09-13 23:41:20.572 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-13 23:41:20.573 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:20.577 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:20.581 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:20.585 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 13.6007ms
2022-09-13 23:41:20.598 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-13 23:41:20.601 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:20.604 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:20.606 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:41:20.608 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-13 23:41:20.612 +03:00 [INF] RequestBody: {"usernameOrEmail":"anil","password":"1903"}
2022-09-13 23:41:20.615 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:41:20.622 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:41:20.639 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-13 23:41:20.645 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-13 23:41:20.650 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-13 23:41:20.653 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:41:20.654 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 41.9497ms
2022-09-13 23:41:20.655 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-13 23:41:20.658 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzEwMTY4MCwiZXhwIjoxNjYzMTAyNTgwLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.lDhRmnKtHDvZmcrPEEuAC7TvkwzK93_pgiqbkJwx3AE","expiration":"2022-09-13T20:56:20.6376644Z","refreshToken":"eaJC7KxuRNt2+0EGYhwP8kK8BWaBMXPHQAKb+HgfBlw="}}
2022-09-13 23:41:20.661 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 62.4339ms
2022-09-13 23:41:22.906 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-09-13 23:41:22.907 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:22.911 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:22.912 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:22.915 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.0428ms
2022-09-13 23:41:22.926 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-09-13 23:41:22.929 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:22.931 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:22.933 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-09-13 23:41:22.958 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-09-13 23:41:22.960 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-09-13 23:41:22.961 +03:00 [INF] RequestBody: 
2022-09-13 23:41:22.962 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"Z4QGcIHWfWXl30Vb3xmV6g","connectionToken":"TzacVom1mv1YXaY3RNcTFQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-09-13 23:41:22.963 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 37.2033ms
2022-09-13 23:41:23.020 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=TzacVom1mv1YXaY3RNcTFQ - -
2022-09-13 23:41:23.029 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-09-13 23:41:23.033 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:23.036 +03:00 [INF] Executing endpoint '/products-hub'
2022-09-13 23:41:27.405 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-13 23:41:27.407 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:27.409 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:27.410 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:27.411 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.7641ms
2022-09-13 23:41:27.415 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-13 23:41:27.415 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:27.417 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:27.417 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-13 23:41:27.424 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-13 23:41:27.437 +03:00 [INF] Get all products
2022-09-13 23:41:27.439 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:41:27.515 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-13 23:41:27.681 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-13 23:41:27.689 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-13 23:41:28.077 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-13 23:41:28.103 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-13 23:41:28.143 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:41:28.145 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 718.4502ms
2022-09-13 23:41:28.147 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-13 23:41:28.149 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-13 23:41:28.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 737.6933ms
2022-09-13 23:41:32.372 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-13 23:41:32.374 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:32.379 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:32.380 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:32.384 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 11.9602ms
2022-09-13 23:41:32.390 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-13 23:41:32.395 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:32.399 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:32.776 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-13 23:41:32.786 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-13 23:41:32.799 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:41:32.872 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-13 23:41:33.018 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-13 23:41:33.021 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:41:33.023 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 232.0334ms
2022-09-13 23:41:33.025 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-13 23:41:33.029 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-10.jpg","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","fileName":"wallpaper-10.jpg"}]
2022-09-13 23:41:33.031 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 641.2426ms
2022-09-13 23:41:43.129 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-13 23:41:43.132 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:43.135 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:43.137 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:43.138 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.3432ms
2022-09-13 23:41:43.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-13 23:41:43.143 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:43.144 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:43.145 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-13 23:41:43.147 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-13 23:41:43.152 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-13 23:41:43.153 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:41:43.154 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.9954ms
2022-09-13 23:41:43.155 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-13 23:41:43.157 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-13 23:41:43.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.5075ms
2022-09-13 23:41:43.166 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-13 23:41:43.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:43.168 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:43.169 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-13 23:41:43.171 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.0327ms
2022-09-13 23:41:43.175 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-13 23:41:43.176 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-13 23:41:43.179 +03:00 [INF] CORS policy execution successful.
2022-09-13 23:41:43.180 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-13 23:41:43.182 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-13 23:41:43.185 +03:00 [INF] Get all products
2022-09-13 23:41:43.186 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-13 23:41:43.189 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-13 23:41:43.193 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-13 23:41:43.197 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-13 23:41:43.198 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-13 23:41:43.199 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.0231ms
2022-09-13 23:41:43.200 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-13 23:41:43.201 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-13 23:41:43.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 29.3037ms
2022-09-13 23:42:01.803 +03:00 [INF] Executed endpoint '/products-hub'
2022-09-13 23:42:01.804 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 13 Sep 2022 20:41:22 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-09-13 23:42:01.807 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=TzacVom1mv1YXaY3RNcTFQ - - - 101 - - 38787.2992ms
2022-09-14 20:18:12.425 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-14 20:18:13.262 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-14 20:18:13.264 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-14 20:18:13.269 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-14 20:18:13.270 +03:00 [INF] Hosting environment: Development
2022-09-14 20:18:13.271 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-14 21:42:13.544 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 21:42:13.635 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:13.641 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:13.643 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:13.659 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 116.2396ms
2022-09-14 21:42:13.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 21:42:13.682 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:13.687 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:13.733 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:13.754 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 21:42:13.780 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 21:42:13.795 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:13.810 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 40.5549ms
2022-09-14 21:42:13.816 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:13.822 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 21:42:13.824 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 155.5378ms
2022-09-14 21:42:13.844 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:13.845 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:13.849 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:13.851 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:13.854 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.2566ms
2022-09-14 21:42:13.858 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:13.859 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:13.862 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:13.865 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:13.906 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 21:42:14.756 +03:00 [INF] Get all products
2022-09-14 21:42:14.921 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 21:42:14.926 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:14.929 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:14.935 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:14.938 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 21:42:14.941 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 21:42:14.942 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:14.944 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.6918ms
2022-09-14 21:42:14.946 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:14.947 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 21:42:14.948 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.4237ms
2022-09-14 21:42:15.241 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-09-14 21:42:15.244 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:15.248 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:15.250 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:15.252 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 11.1682ms
2022-09-14 21:42:15.260 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-09-14 21:42:15.268 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:15.271 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:15.273 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:15.274 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 21:42:15.277 +03:00 [INF] Get all products
2022-09-14 21:42:16.541 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:16.541 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:17.217 +03:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 21:42:17.217 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 21:42:17.342 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-14 21:42:17.342 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-14 21:42:17.346 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-14 21:42:17.347 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-14 21:42:17.716 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 21:42:17.716 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 21:42:17.721 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 21:42:17.735 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:17.736 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2460.1877ms
2022-09-14 21:42:17.737 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.739 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[]}
2022-09-14 21:42:17.748 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 21:42:17.752 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 2492.0882ms
2022-09-14 21:42:17.763 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:17.764 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3855.754ms
2022-09-14 21:42:17.765 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:17.767 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.768 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:17.770 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 21:42:17.772 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:17.773 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3915.3524ms
2022-09-14 21:42:17.774 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.776 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 21:42:17.782 +03:00 [INF] Get all products
2022-09-14 21:42:17.853 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:17.858 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 21:42:17.865 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 21:42:17.871 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 21:42:17.872 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:17.873 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 94.6175ms
2022-09-14 21:42:17.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:17.875 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.876 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:17.877 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 21:42:17.879 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:17.881 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 115.7380ms
2022-09-14 21:42:17.882 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.884 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 21:42:17.886 +03:00 [INF] Get all products
2022-09-14 21:42:17.886 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:17.889 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 21:42:17.894 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 21:42:17.898 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 21:42:17.900 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:17.901 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.4363ms
2022-09-14 21:42:17.902 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:17.903 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 21:42:17.905 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.3256ms
2022-09-14 21:42:18.856 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-14 21:42:18.857 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:18.859 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:18.860 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:18.861 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 5.3012ms
2022-09-14 21:42:18.865 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-14 21:42:18.871 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:18.874 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:18.877 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:18.883 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-14 21:42:18.904 +03:00 [INF] RequestBody: {"userNameOrEmail":"batibey","password":"1111"}
2022-09-14 21:42:18.927 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:19.044 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-14 21:42:19.268 +03:00 [WRN] Invalid password for user.
2022-09-14 21:42:19.269 +03:00 [WRN] User failed to provide the correct password.
2022-09-14 21:42:19.611 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 724.121ms
2022-09-14 21:42:19.614 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:19.798 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.AuthencationErrorException: Kullanıcı ya da Kimlik Doğrulama Hatası
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 48
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-14 21:42:20.175 +03:00 [ERR] Kullanıcı ya da Kimlik Doğrulama Hatası
2022-09-14 21:42:20.209 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 500 - application/json 1343.5458ms
2022-09-14 21:42:24.251 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-14 21:42:24.253 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:24.256 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:24.257 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:24.261 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 9.9260ms
2022-09-14 21:42:24.268 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-09-14 21:42:24.271 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:24.275 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:24.276 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:24.278 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-14 21:42:24.280 +03:00 [INF] RequestBody: {"userNameOrEmail":"test1","password":"1234"}
2022-09-14 21:42:24.282 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:24.291 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-14 21:42:24.312 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2022-09-14 21:42:24.542 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 261.6972ms
2022-09-14 21:42:24.546 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:24.726 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 39
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-14 21:42:24.747 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-14 21:42:24.747 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 500 - application/json 479.8177ms
2022-09-14 21:42:40.558 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-14 21:42:40.561 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:40.563 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:40.565 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:40.568 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 9.6124ms
2022-09-14 21:42:40.576 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-14 21:42:40.577 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:40.579 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:40.580 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:40.581 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-14 21:42:40.583 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-14 21:42:40.596 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:40.602 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-14 21:42:41.344 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-14 21:42:41.660 +03:00 [INF] Executed DbCommand (135ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-14 21:42:41.722 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-14 21:42:41.726 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:41.728 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1145.3471ms
2022-09-14 21:42:41.730 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-14 21:42:41.731 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzE4MDk2MCwiZXhwIjoxNjYzMTgxODYwLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.NJLqPJVP-WMsG0ofB8juQekdQyKSusj1tYINXNz5kmE","expiration":"2022-09-14T18:57:40.9587132Z","refreshToken":"geKAOXtCo7Ku4DeOloUYMYY80crOpRc05DKX7XKp3JI="}}
2022-09-14 21:42:41.733 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 1156.8230ms
2022-09-14 21:42:44.735 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 21:42:44.737 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:44.739 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:44.740 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:44.742 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.5320ms
2022-09-14 21:42:44.747 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 21:42:44.748 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:44.749 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:44.751 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:44.752 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 21:42:44.756 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 21:42:44.758 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:44.759 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.3004ms
2022-09-14 21:42:44.760 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 21:42:44.761 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 21:42:44.762 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.2256ms
2022-09-14 21:42:44.770 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:44.771 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:44.773 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:44.774 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:44.775 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.4058ms
2022-09-14 21:42:44.778 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 21:42:44.779 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:44.780 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:44.781 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:44.782 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 21:42:44.784 +03:00 [INF] Get all products
2022-09-14 21:42:44.786 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:44.788 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 21:42:44.792 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 21:42:44.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 21:42:44.795 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:44.797 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.4672ms
2022-09-14 21:42:44.798 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 21:42:44.799 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 21:42:44.801 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 22.6155ms
2022-09-14 21:42:47.025 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 21:42:47.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:47.030 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:47.030 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 21:42:47.032 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 6.5708ms
2022-09-14 21:42:47.036 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-14 21:42:47.037 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 21:42:47.039 +03:00 [INF] CORS policy execution successful.
2022-09-14 21:42:47.288 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 21:42:47.294 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 21:42:47.298 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-14 21:42:47.308 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 21:42:47.488 +03:00 [INF] Executed DbCommand (148ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 21:42:47.637 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Baskets" ("Id", "CreatedDate", "UpdatedDate", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2022-09-14 21:42:47.760 +03:00 [INF] Executed DbCommand (108ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-14 21:42:47.827 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BasketItems" ("Id", "BasketId", "CreatedDate", "ProductId", "Quantity", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-14 21:42:47.832 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-14 21:42:47.835 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 21:42:47.837 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 539.6437ms
2022-09-14 21:42:47.838 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 21:42:47.841 +03:00 [INF] ResponseBody: {}
2022-09-14 21:42:47.842 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 806.2974ms
2022-09-14 22:06:49.721 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:06:49.728 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.731 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.735 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:06:49.737 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 16.4905ms
2022-09-14 22:06:49.743 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:06:49.746 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.751 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.760 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-09-14 22:06:49.770 +03:00 [INF] Admin was not authenticated. Failure message: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
2022-09-14 22:06:49.777 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-09-14 22:06:49.778 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:06:49.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.789 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.790 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:06:49.795 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 16.6527ms
2022-09-14 22:06:49.832 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:06:49.832 +03:00 [INF] AuthenticationScheme: Admin was challenged.
2022-09-14 22:06:49.861 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.864 +03:00 [INF] Response:
StatusCode: 401
WWW-Authenticate: [Redacted]
2022-09-14 22:06:49.868 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.885 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:06:49.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 401 0 - 139.4672ms
2022-09-14 22:06:49.887 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:06:49.893 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:06:49.900 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:06:49.902 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 8.4909ms
2022-09-14 22:06:49.906 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:06:49.908 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:06:49.915 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 83.7786ms
2022-09-14 22:06:49.979 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - -
2022-09-14 22:06:49.985 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:06:49.987 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.988 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:49.990 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.992 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:49.993 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:06:49.993 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:06:49.996 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - - - 204 - - 17.4298ms
2022-09-14 22:06:49.997 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 11.8553ms
2022-09-14 22:06:50.000 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63
2022-09-14 22:06:50.001 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 63
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:50.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:06:50.005 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:50.006 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:06:50.007 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-14 22:06:50.011 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:06:50.013 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:06:50.014 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:06:50.016 +03:00 [INF] Route matched with {action = "RefreshTokenLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshTokenLogin(eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-14 22:06:50.019 +03:00 [INF] Get all products
2022-09-14 22:06:50.021 +03:00 [INF] RequestBody: {"refreshToken":"geKAOXtCo7Ku4DeOloUYMYY80crOpRc05DKX7XKp3JI="}
2022-09-14 22:06:50.024 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:06:50.039 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:06:50.143 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:06:50.155 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:06:50.160 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:06:50.163 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:06:50.164 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 145.9895ms
2022-09-14 22:06:50.165 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:06:50.167 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:06:50.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 166.7675ms
2022-09-14 22:06:50.207 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__refreshToken_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."RefreshToken" = @__refreshToken_0
LIMIT 1
2022-09-14 22:06:50.216 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-14 22:06:50.221 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-14 22:06:50.251 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandResponse'.
2022-09-14 22:06:50.254 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:06:50.255 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API) in 234.1052ms
2022-09-14 22:06:50.256 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-14 22:06:50.257 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzE4MjQxMCwiZXhwIjoxNjYzMTgzMzEwLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.1mzKulafZ-sUFSRjHSDytNwg71sd2IkGVZhtbGWvfSk","expiration":"2022-09-14T19:21:50.2114773Z","refreshToken":"ff7CSMVZt3QYSf3LE8BAx3IVfYqXYQjy7Wz1uRTuexM="}}
2022-09-14 22:06:50.259 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63 - 200 - application/json;+charset=utf-8 259.3073ms
2022-09-14 22:07:47.968 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:07:47.974 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:07:47.977 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:07:47.979 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:07:47.980 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 12.3622ms
2022-09-14 22:07:47.984 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-14 22:07:47.984 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:07:47.986 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:07:47.988 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 22:07:47.989 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:07:47.991 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-14 22:07:47.993 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:07:47.998 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:07:48.048 +03:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:07:48.057 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:07:48.068 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-14 22:07:48.077 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BasketItems" ("Id", "BasketId", "CreatedDate", "ProductId", "Quantity", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-14 22:07:48.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-14 22:07:48.083 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:07:48.084 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 92.7263ms
2022-09-14 22:07:48.085 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 22:07:48.087 +03:00 [INF] ResponseBody: {}
2022-09-14 22:07:48.087 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 103.9510ms
2022-09-14 22:07:48.876 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-14 22:07:48.878 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:07:48.880 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:07:48.881 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 22:07:48.883 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:07:48.885 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-14 22:07:48.891 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:07:48.899 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:07:48.902 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:07:48.905 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:07:48.911 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-14 22:07:48.916 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:07:48.919 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-14 22:07:48.921 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:07:48.922 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 37.1661ms
2022-09-14 22:07:48.923 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-14 22:07:48.924 +03:00 [INF] ResponseBody: {}
2022-09-14 22:07:48.925 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 49.2998ms
2022-09-14 22:08:09.674 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:08:09.676 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.680 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.680 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:08:09.682 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 8.9736ms
2022-09-14 22:08:09.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:08:09.691 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.694 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.697 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:08:09.705 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:08:09.707 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.707 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:09.711 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.718 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:08:09.720 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 14.5130ms
2022-09-14 22:08:09.727 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:09.732 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:08:09.734 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:08:09.735 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.749 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:08:09.754 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.761 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:08:09.763 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:08:09.777 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:08:09.784 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:08:09.787 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:09.789 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.8208ms
2022-09-14 22:08:09.791 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:08:09.793 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:08:09.795 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 62.5827ms
2022-09-14 22:08:09.803 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:08:09.809 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:08:09.812 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.815 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.816 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:08:09.817 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.8285ms
2022-09-14 22:08:09.821 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:08:09.822 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:09.823 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:09.824 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:08:09.826 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:08:09.829 +03:00 [INF] Get all products
2022-09-14 22:08:09.831 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:09.834 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:08:09.835 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:08:09.839 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:09.842 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 125.2469ms
2022-09-14 22:08:09.842 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:08:09.844 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:08:09.850 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:08:09.851 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":2},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":1}]
2022-09-14 22:08:09.852 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:09.853 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 163.0107ms
2022-09-14 22:08:09.854 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.7151ms
2022-09-14 22:08:09.858 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:08:09.859 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:08:09.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 40.5167ms
2022-09-14 22:08:14.641 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:08:14.643 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:14.646 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:14.647 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:08:14.649 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.1417ms
2022-09-14 22:08:14.654 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:14.655 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:14.658 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:14.659 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:14.663 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:14.666 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"3"}
2022-09-14 22:08:14.681 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:14.693 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:14.707 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:14.713 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:14.715 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:14.717 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 51.4647ms
2022-09-14 22:08:14.719 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:14.721 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:14.722 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 68.0672ms
2022-09-14 22:08:16.763 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:16.764 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:16.766 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:16.767 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:16.768 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:16.772 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"2"}
2022-09-14 22:08:16.775 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:16.781 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:16.786 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:16.790 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:16.791 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:16.792 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 20.1248ms
2022-09-14 22:08:16.794 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:16.795 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:16.796 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 32.8504ms
2022-09-14 22:08:17.141 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:17.143 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:17.145 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:17.147 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:17.149 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:17.153 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"3"}
2022-09-14 22:08:17.156 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:17.161 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:17.166 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:17.170 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:17.172 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:17.175 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 22.1135ms
2022-09-14 22:08:17.177 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:17.179 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:17.180 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 39.8605ms
2022-09-14 22:08:17.930 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:17.932 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:17.936 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:17.937 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:17.939 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:17.946 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"4"}
2022-09-14 22:08:17.949 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:17.955 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:17.960 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:18.041 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:18.044 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:18.046 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 100.4479ms
2022-09-14 22:08:18.049 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:18.051 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:18.052 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 122.1268ms
2022-09-14 22:08:18.548 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:18.550 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:18.556 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:18.558 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:18.564 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:18.568 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"5"}
2022-09-14 22:08:18.574 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:18.583 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:18.594 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:18.602 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:18.606 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:18.610 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 42.2164ms
2022-09-14 22:08:18.613 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:18.616 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:18.617 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 68.9597ms
2022-09-14 22:08:19.149 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:19.151 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:19.153 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:19.155 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:19.156 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:19.159 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"6"}
2022-09-14 22:08:19.161 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:19.168 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:19.178 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:19.184 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:19.186 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:19.187 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 28.2443ms
2022-09-14 22:08:19.188 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:19.190 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:19.192 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 42.7341ms
2022-09-14 22:08:19.776 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:08:19.777 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:19.780 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:19.781 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:08:19.783 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 6.8225ms
2022-09-14 22:08:19.787 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-14 22:08:19.789 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:08:19.791 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:08:19.792 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:19.794 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:08:19.797 +03:00 [INF] RequestBody: {"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","quantity":"7"}
2022-09-14 22:08:19.799 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:08:19.805 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:08:19.814 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-14 22:08:19.819 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-14 22:08:19.822 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:08:19.823 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 26.1112ms
2022-09-14 22:08:19.825 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-14 22:08:19.826 +03:00 [INF] ResponseBody: {}
2022-09-14 22:08:19.828 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 40.9289ms
2022-09-14 22:09:41.484 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:09:41.489 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.491 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.492 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:41.494 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 10.1889ms
2022-09-14 22:09:41.504 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:09:41.506 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.509 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.512 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:09:41.515 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:09:41.522 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:09:41.524 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.524 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:09:41.526 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.533 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:41.534 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:09:41.548 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 25.8804ms
2022-09-14 22:09:41.571 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:09:41.584 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:09:41.598 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:09:41.600 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:09:41.601 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.607 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:09:41.609 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.615 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:41.617 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:09:41.620 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 97.216ms
2022-09-14 22:09:41.624 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:09:41.621 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:09:41.628 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":7}]
2022-09-14 22:09:41.632 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:09:41.635 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 131.0961ms
2022-09-14 22:09:41.637 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:41.643 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 10.311ms
2022-09-14 22:09:41.645 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:09:41.652 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:09:41.655 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 57.0523ms
2022-09-14 22:09:41.691 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:09:41.692 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.694 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.695 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:41.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.5762ms
2022-09-14 22:09:41.701 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:09:41.703 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:41.705 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:41.706 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:09:41.707 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:09:41.713 +03:00 [INF] Get all products
2022-09-14 22:09:41.714 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:09:41.718 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:09:41.728 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:09:41.736 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:09:41.738 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:41.740 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.7799ms
2022-09-14 22:09:41.741 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:09:41.743 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:09:41.748 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 47.0519ms
2022-09-14 22:09:56.094 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:09:56.095 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.096 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.097 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:56.099 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 5.1963ms
2022-09-14 22:09:56.102 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:09:56.103 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.106 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.107 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:09:56.108 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:09:56.117 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:09:56.127 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:09:56.139 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:09:56.141 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:09:56.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.147 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:09:56.149 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.157 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:09:56.158 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:56.164 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:09:56.165 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 25.5388ms
2022-09-14 22:09:56.168 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:56.170 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:09:56.171 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 60.0305ms
2022-09-14 22:09:56.172 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.175 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:09:56.178 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.183 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":7}]
2022-09-14 22:09:56.185 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:09:56.187 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 84.7539ms
2022-09-14 22:09:56.192 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:09:56.198 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:09:56.200 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:56.203 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.628ms
2022-09-14 22:09:56.205 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:09:56.207 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:09:56.209 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 39.5145ms
2022-09-14 22:09:56.225 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:09:56.227 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.228 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.229 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:09:56.230 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.7674ms
2022-09-14 22:09:56.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:09:56.234 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:09:56.235 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:09:56.237 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:09:56.238 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:09:56.240 +03:00 [INF] Get all products
2022-09-14 22:09:56.241 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:09:56.246 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:09:56.251 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:09:56.255 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:09:56.257 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:09:56.260 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.3414ms
2022-09-14 22:09:56.262 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:09:56.264 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:09:56.268 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 34.4977ms
2022-09-14 22:11:04.636 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:11:04.642 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.648 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.650 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:11:04.652 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 16.6459ms
2022-09-14 22:11:04.656 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:11:04.659 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.661 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.663 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:11:04.665 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:11:04.670 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:11:04.682 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:11:04.682 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:11:04.685 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.690 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:11:04.692 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.696 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:11:04.696 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:11:04.703 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 21.4532ms
2022-09-14 22:11:04.707 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:11:04.709 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:11:04.714 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:11:04.715 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.718 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:11:04.721 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.724 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 55.313ms
2022-09-14 22:11:04.726 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:11:04.728 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:11:04.730 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:11:04.733 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":7}]
2022-09-14 22:11:04.737 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:11:04.739 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 82.1098ms
2022-09-14 22:11:04.742 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:11:04.745 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.3512ms
2022-09-14 22:11:04.748 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:11:04.751 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:11:04.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 45.2389ms
2022-09-14 22:11:04.767 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:11:04.768 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.772 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.773 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:11:04.774 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.0124ms
2022-09-14 22:11:04.777 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:11:04.778 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:11:04.780 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:11:04.781 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:11:04.782 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:11:04.785 +03:00 [INF] Get all products
2022-09-14 22:11:04.786 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:11:04.788 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:11:04.791 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:11:04.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:11:04.796 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:11:04.797 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.164ms
2022-09-14 22:11:04.798 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:11:04.800 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:11:04.801 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 24.7431ms
2022-09-14 22:14:48.611 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:14:48.620 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.626 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.627 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:14:48.628 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 16.9392ms
2022-09-14 22:14:48.640 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:14:48.641 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.644 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.646 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:14:48.647 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:14:48.655 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:14:48.655 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:14:48.656 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.665 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.666 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:14:48.669 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 14.8249ms
2022-09-14 22:14:48.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:14:48.683 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.686 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.687 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:14:48.690 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:14:48.695 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:14:48.698 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:14:48.699 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.4845ms
2022-09-14 22:14:48.701 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:14:48.702 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:14:48.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.8921ms
2022-09-14 22:14:48.730 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:14:48.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.745 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.745 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:14:48.747 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 17.6342ms
2022-09-14 22:14:48.750 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:14:48.751 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:14:48.753 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:14:48.755 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:14:48.757 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:14:48.762 +03:00 [INF] Get all products
2022-09-14 22:14:48.764 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:14:48.792 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:14:48.798 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:14:48.800 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:14:48.808 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:14:48.812 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:14:48.813 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:14:48.814 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 161.4608ms
2022-09-14 22:14:48.816 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:14:48.817 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":7}]
2022-09-14 22:14:48.820 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 179.9926ms
2022-09-14 22:14:48.838 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:14:48.843 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:14:48.846 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:14:48.847 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:14:48.849 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 89.1484ms
2022-09-14 22:14:48.850 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:14:48.851 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:14:48.854 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 103.7370ms
2022-09-14 22:17:58.003 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-14 22:17:58.013 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.034 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.037 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:17:58.039 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 36.0769ms
2022-09-14 22:17:58.052 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-14 22:17:58.054 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.056 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.057 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:17:58.059 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:17:58.063 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:17:58.064 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:17:58.064 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.071 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.075 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:17:58.076 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 13.6437ms
2022-09-14 22:17:58.078 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-14 22:17:58.085 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-14 22:17:58.092 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:17:58.092 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.101 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-14 22:17:58.102 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.110 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:17:58.122 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-14 22:17:58.125 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-14 22:17:58.121 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-14 22:17:58.127 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:17:58.135 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 10.3427ms
2022-09-14 22:17:58.138 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-14 22:17:58.134 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-14 22:17:58.140 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-14 22:17:58.144 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:17:58.145 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 60.1560ms
2022-09-14 22:17:58.148 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 85.666ms
2022-09-14 22:17:58.153 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-14 22:17:58.155 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"ad19b06b-aade-488f-8eb7-3f24f9ad0360","name":"test2","price":100,"quantity":7}]
2022-09-14 22:17:58.160 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 108.5712ms
2022-09-14 22:17:58.168 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:17:58.169 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.172 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.173 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:17:58.175 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.8076ms
2022-09-14 22:17:58.181 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-14 22:17:58.182 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:17:58.186 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:17:58.188 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:17:58.190 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-14 22:17:58.194 +03:00 [INF] Get all products
2022-09-14 22:17:58.195 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:17:58.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-14 22:17:58.203 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-14 22:17:58.208 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-14 22:17:58.211 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:17:58.212 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.4016ms
2022-09-14 22:17:58.213 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-14 22:17:58.215 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-14 22:17:58.217 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.6902ms
2022-09-14 22:18:18.768 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360 - -
2022-09-14 22:18:18.775 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:18:18.781 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:18:18.784 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-14 22:18:18.786 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360 - - - 204 - - 18.4550ms
2022-09-14 22:18:18.795 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7122/api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360 - -
2022-09-14 22:18:18.797 +03:00 [INF] Request:
Protocol: HTTP/2
Method: DELETE
Scheme: https
PathBase: 
Path: /api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-14 22:18:18.803 +03:00 [INF] CORS policy execution successful.
2022-09-14 22:18:18.805 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API)'
2022-09-14 22:18:18.815 +03:00 [INF] Route matched with {action = "RemoveBasketItem", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RemoveBasketItem(eTrade.Application.Features.Commands.Basket.RemoveBasketItem.RemoveBasketItemCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-14 22:18:18.828 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-14 22:18:18.836 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-14 22:18:18.861 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "BasketItems"
WHERE "Id" = @p0;
2022-09-14 22:18:18.874 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.RemoveBasketItem.RemoveBasketItemCommandResponse'.
2022-09-14 22:18:18.876 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-14 22:18:18.877 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API) in 56.3368ms
2022-09-14 22:18:18.879 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API)'
2022-09-14 22:18:18.881 +03:00 [INF] ResponseBody: {}
2022-09-14 22:18:18.882 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7122/api/baskets/ad19b06b-aade-488f-8eb7-3f24f9ad0360 - - - 200 - application/json;+charset=utf-8 86.9675ms
2022-09-15 20:22:03.346 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-15 20:22:04.079 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-15 20:22:04.080 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-15 20:22:04.084 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-15 20:22:04.085 +03:00 [INF] Hosting environment: Development
2022-09-15 20:22:04.085 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-15 20:24:05.590 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:24:05.698 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:05.733 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:05.740 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:05.761 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 181.7426ms
2022-09-15 20:24:05.766 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 20:24:05.782 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:05.787 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:06.857 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-09-15 20:24:07.213 +03:00 [INF] Admin was not authenticated. Failure message: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
2022-09-15 20:24:07.259 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-09-15 20:24:07.286 +03:00 [INF] AuthenticationScheme: Admin was challenged.
2022-09-15 20:24:07.287 +03:00 [INF] Response:
StatusCode: 401
WWW-Authenticate: [Redacted]
2022-09-15 20:24:07.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 401 0 - 1526.0583ms
2022-09-15 20:24:07.324 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - -
2022-09-15 20:24:07.329 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:07.333 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:07.335 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:07.338 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - - - 204 - - 13.9105ms
2022-09-15 20:24:07.345 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63
2022-09-15 20:24:07.355 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 63
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:07.357 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:07.370 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:24:07.430 +03:00 [INF] Route matched with {action = "RefreshTokenLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshTokenLogin(eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:24:07.517 +03:00 [INF] RequestBody: {"refreshToken":"ff7CSMVZt3QYSf3LE8BAx3IVfYqXYQjy7Wz1uRTuexM="}
2022-09-15 20:24:09.466 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:24:09.470 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:09.473 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:09.474 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:09.478 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.1099ms
2022-09-15 20:24:09.484 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:24:09.486 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:09.489 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:09.492 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:24:09.496 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:24:09.508 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:24:09.520 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:09.528 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 21.6063ms
2022-09-15 20:24:09.532 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:24:09.533 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:24:09.534 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 50.3832ms
2022-09-15 20:24:09.543 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:24:09.544 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:09.546 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:09.547 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:09.548 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.9088ms
2022-09-15 20:24:09.560 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:24:09.562 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:09.564 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:09.566 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:24:09.572 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:24:09.628 +03:00 [INF] Get all products
2022-09-15 20:24:10.012 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:10.012 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:10.633 +03:00 [INF] Executed DbCommand (163ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:24:10.713 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-15 20:24:10.717 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-15 20:24:10.773 +03:00 [INF] Executed DbCommand (119ms) [Parameters=[@__refreshToken_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."RefreshToken" = @__refreshToken_0
LIMIT 1
2022-09-15 20:24:11.062 +03:00 [INF] Executed DbCommand (139ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:24:11.177 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:24:11.179 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API) in 3746.1511ms
2022-09-15 20:24:11.185 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:24:11.337 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.RefreshTokenLoginAsync(String refreshToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 61
   at eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandHandler.Handle(RefreshTokenLoginCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\RefreshTokenLogin\RefreshTokenLoginCommandHandler.cs:line 23
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.RefreshTokenLogin(RefreshTokenLoginCommandRequest refreshTokenLoginCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 30
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-15 20:24:11.345 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:11.408 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 1834.2271ms
2022-09-15 20:24:11.410 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:24:11.412 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-15 20:24:11.413 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:24:11.438 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 1877.5504ms
2022-09-15 20:24:11.438 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63 - 500 - application/json 4092.3667ms
2022-09-15 20:24:18.992 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:24:18.994 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:18.996 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:18.996 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:18.998 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 5.4025ms
2022-09-15 20:24:19.002 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 20:24:19.004 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:19.006 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:19.009 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-09-15 20:24:19.011 +03:00 [INF] Admin was not authenticated. Failure message: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
2022-09-15 20:24:19.013 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-09-15 20:24:19.014 +03:00 [INF] AuthenticationScheme: Admin was challenged.
2022-09-15 20:24:19.016 +03:00 [INF] RequestBody: 
2022-09-15 20:24:19.017 +03:00 [INF] Response:
StatusCode: 401
WWW-Authenticate: [Redacted]
2022-09-15 20:24:19.018 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 401 0 - 16.5081ms
2022-09-15 20:24:19.030 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - -
2022-09-15 20:24:19.033 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:19.035 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:19.037 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:19.038 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - - - 204 - - 8.3710ms
2022-09-15 20:24:19.043 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63
2022-09-15 20:24:19.045 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 63
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:19.049 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:19.050 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:24:19.052 +03:00 [INF] Route matched with {action = "RefreshTokenLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshTokenLogin(eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:24:19.058 +03:00 [INF] RequestBody: {"refreshToken":"ff7CSMVZt3QYSf3LE8BAx3IVfYqXYQjy7Wz1uRTuexM="}
2022-09-15 20:24:19.155 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:19.166 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__refreshToken_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."RefreshToken" = @__refreshToken_0
LIMIT 1
2022-09-15 20:24:19.325 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API) in 268.6708ms
2022-09-15 20:24:19.327 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:24:19.426 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.RefreshTokenLoginAsync(String refreshToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 61
   at eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandHandler.Handle(RefreshTokenLoginCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\RefreshTokenLogin\RefreshTokenLoginCommandHandler.cs:line 23
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.RefreshTokenLogin(RefreshTokenLoginCommandRequest refreshTokenLoginCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 30
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-15 20:24:19.439 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-15 20:24:19.440 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63 - 500 - application/json 396.9859ms
2022-09-15 20:24:30.298 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 20:24:30.300 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:30.302 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:30.303 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:30.305 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 7.7443ms
2022-09-15 20:24:30.308 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 47
2022-09-15 20:24:30.309 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 47
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:30.311 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:30.313 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:24:30.316 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:24:30.319 +03:00 [INF] RequestBody: {"userNameOrEmail":"batibey","password":"1111"}
2022-09-15 20:24:30.332 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:30.343 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:24:30.411 +03:00 [WRN] Invalid password for user.
2022-09-15 20:24:30.414 +03:00 [WRN] User failed to provide the correct password.
2022-09-15 20:24:30.586 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 267.1971ms
2022-09-15 20:24:30.590 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:24:30.704 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.AuthencationErrorException: Kullanıcı ya da Kimlik Doğrulama Hatası
   at eTrade.Persistence.Services.AuthService.LoginAsync(String usernameOrEmail, String password, Int32 accessTokenLifeTime) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 48
   at eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandHandler.Handle(LoginUserCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\LoginUser\LoginUserCommandHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.Login(LoginUserCommandRequest loginUserCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 23
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-15 20:24:30.722 +03:00 [ERR] Kullanıcı ya da Kimlik Doğrulama Hatası
2022-09-15 20:24:30.724 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 47 - 500 - application/json 415.8752ms
2022-09-15 20:24:46.957 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 20:24:46.959 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:46.962 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:46.964 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:46.968 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 11.7078ms
2022-09-15 20:24:46.973 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-15 20:24:46.975 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:46.979 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:46.981 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:24:46.982 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:24:46.984 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-15 20:24:46.987 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:46.996 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:24:47.084 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:24:47.422 +03:00 [INF] Executed DbCommand (135ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-15 20:24:47.503 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-15 20:24:47.508 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:47.509 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 526.0494ms
2022-09-15 20:24:47.511 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:24:47.514 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzI2MjY4NywiZXhwIjoxNjYzMjYzNTg3LCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.UyGApxVauV66k4LvzpeJP51GXIQczXhJ2Xm_em497eY","expiration":"2022-09-15T17:39:47.0179833Z","refreshToken":"HEa+ypOULUzezhVrcsNbldMcWj9xKQIUr5FDykiTzR0="}}
2022-09-15 20:24:47.517 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 543.7307ms
2022-09-15 20:24:54.395 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:24:54.398 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:54.400 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:54.402 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:54.405 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.2354ms
2022-09-15 20:24:54.414 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:24:54.417 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:54.420 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:54.420 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:24:54.421 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:24:54.425 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:24:54.427 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:54.428 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.7064ms
2022-09-15 20:24:54.430 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:24:54.433 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:24:54.435 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 21.4777ms
2022-09-15 20:24:54.444 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:24:54.445 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:54.447 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:54.448 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:54.451 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.8467ms
2022-09-15 20:24:54.455 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:24:54.456 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:54.457 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:54.458 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:24:54.459 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:24:54.462 +03:00 [INF] Get all products
2022-09-15 20:24:54.464 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:54.470 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:24:54.476 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:24:54.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:24:54.486 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:54.489 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.9761ms
2022-09-15 20:24:54.491 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:24:54.493 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:24:54.496 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.3514ms
2022-09-15 20:24:55.881 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:24:55.883 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:55.884 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:55.885 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:24:55.886 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 4.5833ms
2022-09-15 20:24:55.889 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 20:24:55.890 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:24:55.892 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:24:55.916 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:24:55.921 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:24:55.926 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 20:24:55.938 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:24:56.096 +03:00 [INF] Executed DbCommand (120ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 20:24:56.243 +03:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:24:56.253 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:24:56.406 +03:00 [INF] Executed DbCommand (126ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 20:24:56.523 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BasketItems" ("Id", "BasketId", "CreatedDate", "ProductId", "Quantity", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-15 20:24:56.532 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 20:24:56.534 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:24:56.536 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 610.9325ms
2022-09-15 20:24:56.537 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:24:56.539 +03:00 [INF] ResponseBody: {}
2022-09-15 20:24:56.540 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 651.1465ms
2022-09-15 20:25:04.962 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:25:04.964 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:04.969 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:04.971 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:04.973 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 10.1589ms
2022-09-15 20:25:04.977 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 20:25:04.979 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:04.981 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:04.983 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:25:04.984 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:25:04.987 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-15 20:25:04.989 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:25:04.993 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 20:25:05.000 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:25:05.003 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:25:05.007 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 20:25:05.014 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:25:05.019 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 20:25:05.020 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:05.021 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 34.0969ms
2022-09-15 20:25:05.022 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:25:05.023 +03:00 [INF] ResponseBody: {}
2022-09-15 20:25:05.024 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 47.0419ms
2022-09-15 20:25:08.800 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-09-15 20:25:08.801 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:08.802 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:08.804 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:08.805 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 5.3037ms
2022-09-15 20:25:08.817 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-09-15 20:25:08.819 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:08.821 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:08.822 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-09-15 20:25:08.835 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-09-15 20:25:08.836 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-09-15 20:25:08.838 +03:00 [INF] RequestBody: 
2022-09-15 20:25:08.839 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"TIGbB1tu2zMWTuQwAnsyxA","connectionToken":"niLXG9AHIHkDLUlZAOq8hA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-09-15 20:25:08.841 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 24.3910ms
2022-09-15 20:25:08.861 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=niLXG9AHIHkDLUlZAOq8hA - -
2022-09-15 20:25:08.862 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-09-15 20:25:08.864 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:08.865 +03:00 [INF] Executing endpoint '/products-hub'
2022-09-15 20:25:13.811 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-15 20:25:13.813 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:13.816 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:13.818 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:13.819 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.8687ms
2022-09-15 20:25:13.822 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-15 20:25:13.823 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:13.825 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:13.827 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:25:13.828 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:25:13.833 +03:00 [INF] Get all products
2022-09-15 20:25:13.834 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:25:13.836 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:25:13.843 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:25:13.848 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:25:13.850 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:13.851 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.1491ms
2022-09-15 20:25:13.852 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:25:13.854 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:25:13.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 33.3616ms
2022-09-15 20:25:16.833 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:25:16.834 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:16.838 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:16.840 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:16.842 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.8050ms
2022-09-15 20:25:16.848 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:25:16.849 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:16.850 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:16.851 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:25:16.852 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:25:16.855 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:25:16.856 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:16.858 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.8374ms
2022-09-15 20:25:16.859 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:25:16.860 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:25:16.861 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 12.7174ms
2022-09-15 20:25:16.869 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:25:16.870 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:16.871 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:16.872 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:16.873 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.0973ms
2022-09-15 20:25:16.877 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:25:16.878 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:16.879 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:16.880 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:25:16.881 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:25:16.884 +03:00 [INF] Get all products
2022-09-15 20:25:16.884 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:25:16.886 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:25:16.889 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:25:16.892 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:25:16.893 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:16.895 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.1285ms
2022-09-15 20:25:16.896 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:25:16.897 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:25:16.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 22.3137ms
2022-09-15 20:25:39.147 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 20:25:39.148 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:39.150 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:39.151 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:39.152 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 5.3861ms
2022-09-15 20:25:39.156 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-15 20:25:39.158 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:39.161 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:39.162 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:25:39.163 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:25:39.165 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-15 20:25:39.178 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:25:39.184 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:25:39.203 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:25:39.209 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-15 20:25:39.213 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-15 20:25:39.215 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:39.216 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 51.0658ms
2022-09-15 20:25:39.217 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:25:39.218 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzI2MjczOSwiZXhwIjoxNjYzMjYzNjM5LCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.azj_43InB7tPrqTQ5KHQxS-mXuOPv9wsmzRR6lh6fA4","expiration":"2022-09-15T17:40:39.1968752Z","refreshToken":"Rw/BnN4qn5dKQRyayNgBKJEH0KGqVOYoo5XBiv4OcQI="}}
2022-09-15 20:25:39.219 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 62.9194ms
2022-09-15 20:25:52.345 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 20:25:52.347 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:52.350 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:52.351 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:25:52.353 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 7.6437ms
2022-09-15 20:25:52.357 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-15 20:25:52.357 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:25:52.359 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:25:52.360 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:25:52.361 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:25:52.362 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-15 20:25:52.364 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:25:52.367 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:25:52.380 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 20:25:52.384 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-15 20:25:52.388 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-15 20:25:52.389 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:25:52.390 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 27.7307ms
2022-09-15 20:25:52.391 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 20:25:52.392 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzI2Mjc1MiwiZXhwIjoxNjYzMjYzNjUyLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.CN6FpSY0oGyIQmU2RsRZCGW2pXf9XZPnKBXjKbNd0pI","expiration":"2022-09-15T17:40:52.3788457Z","refreshToken":"JiqEiuEOj1sBKjTzB4ZVm9LsUSV7DC1KsMhlWCrMmhc="}}
2022-09-15 20:25:52.394 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 36.9977ms
2022-09-15 20:26:01.087 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:26:01.091 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:01.096 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:01.098 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:01.100 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 13.4355ms
2022-09-15 20:26:01.108 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:26:01.109 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:01.113 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:01.115 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:26:01.117 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:26:01.121 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:26:01.124 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:01.127 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.1702ms
2022-09-15 20:26:01.129 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:26:01.133 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:26:01.135 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.9795ms
2022-09-15 20:26:01.144 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:26:01.146 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:01.149 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:01.150 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:01.153 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.6646ms
2022-09-15 20:26:01.157 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:26:01.158 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:01.159 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:01.160 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:26:01.161 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:26:01.164 +03:00 [INF] Get all products
2022-09-15 20:26:01.165 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:01.167 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:26:01.169 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:26:01.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:26:01.174 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:01.175 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.2368ms
2022-09-15 20:26:01.177 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:26:01.178 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:26:01.181 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 23.9698ms
2022-09-15 20:26:02.722 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:26:02.724 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:02.725 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:02.726 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:02.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 4.9808ms
2022-09-15 20:26:02.731 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 20:26:02.732 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:02.733 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:02.735 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:26:02.736 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:02.738 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 20:26:02.744 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:02.749 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 20:26:02.755 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:02.758 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:02.761 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 20:26:02.765 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:26:02.768 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 20:26:02.770 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:02.771 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 32.8902ms
2022-09-15 20:26:02.772 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:26:02.773 +03:00 [INF] ResponseBody: {}
2022-09-15 20:26:02.774 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 43.0620ms
2022-09-15 20:26:06.737 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 20:26:06.746 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:06.748 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:06.751 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:26:06.752 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:06.754 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-15 20:26:06.756 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:06.759 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 20:26:06.764 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:06.766 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:06.770 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 20:26:06.773 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:26:06.777 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 20:26:06.778 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:06.779 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 25.0877ms
2022-09-15 20:26:06.780 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 20:26:06.781 +03:00 [INF] ResponseBody: {}
2022-09-15 20:26:06.782 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 45.0729ms
2022-09-15 20:26:28.194 +03:00 [INF] Executed endpoint '/products-hub'
2022-09-15 20:26:28.199 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Thu, 15 Sep 2022 17:25:08 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-09-15 20:26:28.202 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=niLXG9AHIHkDLUlZAOq8hA - - - 101 - - 79340.5140ms
2022-09-15 20:26:28.647 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:26:28.649 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.651 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.652 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:28.654 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.2130ms
2022-09-15 20:26:28.657 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 20:26:28.658 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.660 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.661 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 20:26:28.666 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:28.677 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:28.678 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:26:28.684 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.683 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 20:26:28.687 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.694 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:28.695 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:28.699 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 20:26:28.701 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 22.7061ms
2022-09-15 20:26:28.708 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:26:28.710 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.714 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.715 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:26:28.717 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:26:28.722 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:26:28.724 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:28.727 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.1488ms
2022-09-15 20:26:28.732 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:26:28.737 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:26:28.739 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 30.1585ms
2022-09-15 20:26:28.748 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 20:26:28.766 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:26:28.767 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.771 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.772 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:28.773 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.2762ms
2022-09-15 20:26:28.777 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:26:28.778 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:28.780 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:28.780 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:26:28.781 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:26:28.781 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 20:26:28.785 +03:00 [INF] Get all products
2022-09-15 20:26:28.786 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:28.787 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:28.788 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:26:28.789 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 119.242ms
2022-09-15 20:26:28.793 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 20:26:28.793 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:26:28.793 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":5},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":2}]
2022-09-15 20:26:28.796 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:26:28.798 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 141.0132ms
2022-09-15 20:26:28.799 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:28.801 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.188ms
2022-09-15 20:26:28.802 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:26:28.803 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:26:28.805 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 27.8589ms
2022-09-15 20:26:36.107 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:26:36.109 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:36.111 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:36.113 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:36.114 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.3676ms
2022-09-15 20:26:36.119 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-15 20:26:36.119 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:36.121 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:36.122 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:36.126 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:36.131 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"6"}
2022-09-15 20:26:36.143 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:36.160 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-15 20:26:36.168 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:26:36.173 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-15 20:26:36.175 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:36.177 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 47.2255ms
2022-09-15 20:26:36.178 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:36.180 +03:00 [INF] ResponseBody: {}
2022-09-15 20:26:36.182 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 63.5702ms
2022-09-15 20:26:37.742 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-15 20:26:37.744 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:37.746 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:37.747 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:37.749 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:37.751 +03:00 [INF] RequestBody: {"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","quantity":"3"}
2022-09-15 20:26:37.753 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:37.758 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-15 20:26:37.763 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:26:37.767 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-15 20:26:37.768 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:37.769 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 18.5055ms
2022-09-15 20:26:37.771 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:37.772 +03:00 [INF] ResponseBody: {}
2022-09-15 20:26:37.773 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 31.4187ms
2022-09-15 20:26:45.439 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:26:45.440 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:45.443 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:45.444 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:26:45.445 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 6.4940ms
2022-09-15 20:26:45.449 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-15 20:26:45.451 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:26:45.453 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:26:45.454 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:45.455 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 20:26:45.458 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"7"}
2022-09-15 20:26:45.460 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:26:45.464 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-15 20:26:45.470 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 20:26:45.475 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-15 20:26:45.476 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:26:45.477 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 19.0658ms
2022-09-15 20:26:45.479 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-15 20:26:45.480 +03:00 [INF] ResponseBody: {}
2022-09-15 20:26:45.481 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 31.7198ms
2022-09-15 20:56:43.571 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 20:56:43.572 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.576 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.577 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:56:43.578 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.2133ms
2022-09-15 20:56:43.583 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 20:56:43.584 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.585 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.587 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2022-09-15 20:56:43.592 +03:00 [INF] Admin was not authenticated. Failure message: IDX10230: Lifetime validation failed. Delegate returned false, securitytoken: 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken'.
2022-09-15 20:56:43.593 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2022-09-15 20:56:43.595 +03:00 [INF] AuthenticationScheme: Admin was challenged.
2022-09-15 20:56:43.598 +03:00 [INF] Response:
StatusCode: 401
WWW-Authenticate: [Redacted]
2022-09-15 20:56:43.600 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 401 0 - 17.6473ms
2022-09-15 20:56:43.622 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:56:43.623 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.626 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.627 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:56:43.629 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.0472ms
2022-09-15 20:56:43.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:56:43.635 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - -
2022-09-15 20:56:43.635 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.636 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.641 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.643 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.644 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:56:43.645 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:56:43.646 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:56:43.648 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/refreshtokenlogin - - - 204 - - 12.8922ms
2022-09-15 20:56:43.652 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:56:43.654 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63
2022-09-15 20:56:43.655 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:56:43.656 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/refreshtokenlogin
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 63
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.658 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.0133ms
2022-09-15 20:56:43.661 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.681 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:56:43.684 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:56:43.686 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:56:43.687 +03:00 [INF] Route matched with {action = "RefreshTokenLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshTokenLogin(eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 20:56:43.688 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 55.1637ms
2022-09-15 20:56:43.691 +03:00 [INF] RequestBody: {"refreshToken":"JiqEiuEOj1sBKjTzB4ZVm9LsUSV7DC1KsMhlWCrMmhc="}
2022-09-15 20:56:43.697 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:56:43.709 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:56:43.710 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.715 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.717 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:56:43.721 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 11.9940ms
2022-09-15 20:56:43.725 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:56:43.727 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:56:43.731 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:56:43.738 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:56:43.739 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:56:43.742 +03:00 [INF] Get all products
2022-09-15 20:56:43.744 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:56:43.812 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__refreshToken_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."RefreshToken" = @__refreshToken_0
LIMIT 1
2022-09-15 20:56:43.990 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API) in 298.821ms
2022-09-15 20:56:43.993 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.RefreshTokenLogin (eTradeAPI.API)'
2022-09-15 20:56:44.042 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:56:44.106 +03:00 [ERR] An unhandled exception has occurred while executing the request.
eTrade.Application.Exceptions.NotFoundUserException: Kullanıcı Adı veya Şifre Hatalı
   at eTrade.Persistence.Services.AuthService.RefreshTokenLoginAsync(String refreshToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Services\AuthService.cs:line 61
   at eTrade.Application.Features.Commands.AppUser.RefreshTokenLogin.RefreshTokenLoginCommandHandler.Handle(RefreshTokenLoginCommandRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Commands\AppUser\RefreshTokenLogin\RefreshTokenLoginCommandHandler.cs:line 23
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.AuthController.RefreshTokenLogin(RefreshTokenLoginCommandRequest refreshTokenLoginCommandRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\AuthController.cs:line 30
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 120
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-09-15 20:56:44.115 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:56:44.130 +03:00 [ERR] Kullanıcı Adı veya Şifre Hatalı
2022-09-15 20:56:44.132 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:56:44.133 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/refreshtokenlogin application/json 63 - 500 - application/json 479.7510ms
2022-09-15 20:56:44.135 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:56:44.140 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 398.1206ms
2022-09-15 20:56:44.142 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:56:44.145 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:56:44.152 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 426.5581ms
2022-09-15 20:57:47.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:57:47.836 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:47.839 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:47.840 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:57:47.841 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.4408ms
2022-09-15 20:57:47.854 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:57:47.856 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:47.859 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:47.861 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:57:47.863 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:57:47.868 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:57:47.870 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:57:47.871 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.0759ms
2022-09-15 20:57:47.874 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:57:47.875 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:57:47.877 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.9516ms
2022-09-15 20:57:47.905 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:57:47.906 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:47.909 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:47.909 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:57:47.910 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.8614ms
2022-09-15 20:57:47.913 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:57:47.915 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:47.916 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:47.917 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:57:47.917 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:57:47.919 +03:00 [INF] Get all products
2022-09-15 20:57:47.920 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:57:47.923 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:57:47.930 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:57:47.933 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:57:47.934 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:57:47.936 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.0968ms
2022-09-15 20:57:47.937 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:57:47.938 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:57:47.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.0463ms
2022-09-15 20:57:56.435 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:57:56.436 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:56.439 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:56.440 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:57:56.442 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.7033ms
2022-09-15 20:57:56.450 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 20:57:56.451 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:56.456 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:56.458 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:57:56.460 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 20:57:56.466 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 20:57:56.469 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:57:56.471 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.5564ms
2022-09-15 20:57:56.473 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 20:57:56.475 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 20:57:56.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.9951ms
2022-09-15 20:57:56.485 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:57:56.486 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:56.488 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:56.488 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 20:57:56.489 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.8612ms
2022-09-15 20:57:56.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 20:57:56.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 20:57:56.495 +03:00 [INF] CORS policy execution successful.
2022-09-15 20:57:56.496 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:57:56.497 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 20:57:56.499 +03:00 [INF] Get all products
2022-09-15 20:57:56.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 20:57:56.502 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 20:57:56.505 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 20:57:56.508 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 20:57:56.509 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 20:57:56.510 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.407ms
2022-09-15 20:57:56.511 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 20:57:56.512 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 20:57:56.514 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.4655ms
2022-09-15 21:11:12.771 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:11:12.773 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:11:12.775 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:11:12.776 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:11:12.778 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.8348ms
2022-09-15 21:11:12.788 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:11:12.791 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:11:12.794 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:11:12.797 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:11:12.798 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:11:12.805 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:11:12.808 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:11:12.809 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.9715ms
2022-09-15 21:11:12.812 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:11:12.813 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:11:12.815 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.1138ms
2022-09-15 21:11:12.828 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:11:12.829 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:11:12.830 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:11:12.831 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:11:12.832 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.6300ms
2022-09-15 21:11:12.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:11:12.835 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:11:12.837 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:11:12.837 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:11:12.838 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:11:12.840 +03:00 [INF] Get all products
2022-09-15 21:11:12.841 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:11:12.900 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:11:12.907 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:11:12.910 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:11:12.911 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:11:12.912 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 72.1291ms
2022-09-15 21:11:12.913 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:11:12.914 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:11:12.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 81.1922ms
2022-09-15 21:13:24.884 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:13:24.885 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:13:24.889 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:13:24.892 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:13:24.893 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.3862ms
2022-09-15 21:13:24.899 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:13:24.901 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:13:24.905 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:13:24.907 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:13:24.909 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:13:24.919 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:13:24.922 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:13:24.923 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.4323ms
2022-09-15 21:13:24.927 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:13:24.932 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:13:24.933 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 34.5356ms
2022-09-15 21:13:24.943 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:13:24.944 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:13:24.947 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:13:24.949 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:13:24.950 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.3194ms
2022-09-15 21:13:24.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:13:24.954 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:13:24.956 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:13:24.956 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:13:24.957 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:13:24.959 +03:00 [INF] Get all products
2022-09-15 21:13:24.960 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:13:24.962 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:13:24.965 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:13:24.968 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:13:24.969 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:13:24.970 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.4606ms
2022-09-15 21:13:24.971 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:13:24.972 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:13:24.974 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 20.7770ms
2022-09-15 21:14:04.068 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:14:04.070 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:14:04.073 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:14:04.074 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:14:04.076 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.4372ms
2022-09-15 21:14:04.087 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:14:04.088 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:14:04.091 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:14:04.092 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:14:04.094 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:14:04.097 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:14:04.099 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:14:04.101 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.2557ms
2022-09-15 21:14:04.103 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:14:04.105 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:14:04.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 21.1640ms
2022-09-15 21:14:04.121 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:14:04.122 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:14:04.123 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:14:04.124 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:14:04.125 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.7390ms
2022-09-15 21:14:04.129 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:14:04.130 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:14:04.132 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:14:04.132 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:14:04.133 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:14:04.136 +03:00 [INF] Get all products
2022-09-15 21:14:04.137 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:14:04.138 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:14:04.141 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:14:04.144 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:14:04.145 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:14:04.146 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 10.4778ms
2022-09-15 21:14:04.147 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:14:04.147 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:14:04.149 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 20.4799ms
2022-09-15 21:15:07.120 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:15:07.122 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:15:07.125 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:15:07.126 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:15:07.132 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.5644ms
2022-09-15 21:15:07.140 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:15:07.153 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:15:07.156 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:15:07.158 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:15:07.159 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:15:07.161 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:15:07.162 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:15:07.163 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.6441ms
2022-09-15 21:15:07.164 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:15:07.168 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:15:07.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 29.9614ms
2022-09-15 21:15:07.177 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:15:07.178 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:15:07.179 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:15:07.180 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:15:07.181 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.9024ms
2022-09-15 21:15:07.184 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:15:07.184 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:15:07.186 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:15:07.186 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:15:07.187 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:15:07.189 +03:00 [INF] Get all products
2022-09-15 21:15:07.190 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:15:07.192 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:15:07.196 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:15:07.199 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:15:07.201 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:15:07.201 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.004ms
2022-09-15 21:15:07.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:15:07.203 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:15:07.205 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.7983ms
2022-09-15 21:19:51.363 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:19:51.365 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:19:51.369 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:19:51.371 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:19:51.374 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 10.3162ms
2022-09-15 21:19:51.382 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:19:51.383 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:19:51.386 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:19:51.389 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:19:51.393 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:19:51.401 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:19:51.406 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:19:51.407 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.6425ms
2022-09-15 21:19:51.409 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:19:51.413 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:19:51.414 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 32.4271ms
2022-09-15 21:19:51.434 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:19:51.435 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:19:51.437 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:19:51.437 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:19:51.439 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.1206ms
2022-09-15 21:19:51.442 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:19:51.442 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:19:51.444 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:19:51.445 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:19:51.446 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:19:51.455 +03:00 [INF] Get all products
2022-09-15 21:19:51.456 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:19:51.518 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:19:51.529 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:19:51.535 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:19:51.537 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:19:51.538 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 89.7161ms
2022-09-15 21:19:51.539 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:19:51.540 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:19:51.542 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 100.3699ms
2022-09-15 21:25:10.104 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:25:10.106 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:10.110 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:10.111 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:25:10.113 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.7797ms
2022-09-15 21:25:10.119 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:25:10.120 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:10.124 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:10.126 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:25:10.127 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:25:10.131 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:25:10.133 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:25:10.134 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.3591ms
2022-09-15 21:25:10.136 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:25:10.138 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:25:10.140 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 20.7733ms
2022-09-15 21:25:10.152 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:25:10.153 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:10.156 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:10.157 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:25:10.158 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.7609ms
2022-09-15 21:25:10.166 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:25:10.166 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:10.168 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:10.169 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:25:10.169 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:25:10.171 +03:00 [INF] Get all products
2022-09-15 21:25:10.173 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:25:10.230 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:25:10.237 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:25:10.242 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:25:10.243 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:25:10.245 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 74.6394ms
2022-09-15 21:25:10.247 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:25:10.248 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:25:10.252 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 86.6399ms
2022-09-15 21:25:46.524 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:25:46.525 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:46.528 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:46.530 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:25:46.541 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 16.7508ms
2022-09-15 21:25:46.582 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:25:46.596 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:46.598 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:46.600 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:25:46.601 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:25:46.605 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:25:46.607 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:25:46.609 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.0902ms
2022-09-15 21:25:46.613 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:25:46.625 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:25:46.634 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 52.0937ms
2022-09-15 21:25:46.651 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:25:46.658 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:46.662 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:46.663 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:25:46.665 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 14.5055ms
2022-09-15 21:25:46.670 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:25:46.672 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:25:46.674 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:25:46.675 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:25:46.676 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:25:46.679 +03:00 [INF] Get all products
2022-09-15 21:25:46.681 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:25:46.684 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:25:46.694 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:25:46.702 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:25:46.706 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:25:46.710 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.8567ms
2022-09-15 21:25:46.715 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:25:46.721 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:25:46.730 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 59.8734ms
2022-09-15 21:31:30.792 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:31:30.799 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:31:30.803 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:31:30.804 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:31:30.805 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.8771ms
2022-09-15 21:31:30.813 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:31:30.814 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:31:30.817 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:31:30.819 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:31:30.820 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:31:30.824 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:31:30.826 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:31:30.830 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.2709ms
2022-09-15 21:31:30.832 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:31:30.841 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:31:30.843 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 30.4808ms
2022-09-15 21:31:30.851 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:31:30.852 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:31:30.853 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:31:30.854 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:31:30.854 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.6847ms
2022-09-15 21:31:30.858 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:31:30.859 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:31:30.860 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:31:30.862 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:31:30.864 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:31:30.866 +03:00 [INF] Get all products
2022-09-15 21:31:30.866 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:31:30.940 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:31:30.947 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:31:30.951 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:31:30.953 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:31:30.954 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 89.1684ms
2022-09-15 21:31:30.956 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:31:30.957 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:31:30.959 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 101.8106ms
2022-09-15 21:36:23.492 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:36:23.496 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:23.499 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:23.502 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:36:23.504 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 12.4609ms
2022-09-15 21:36:23.514 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:36:23.516 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:23.518 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:23.520 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:36:23.522 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:36:23.545 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:36:23.546 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:36:23.549 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.1994ms
2022-09-15 21:36:23.552 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:36:23.559 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:36:23.560 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 46.4769ms
2022-09-15 21:36:23.570 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:36:23.571 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:23.573 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:23.573 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:36:23.574 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.2651ms
2022-09-15 21:36:23.578 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:36:23.579 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:23.581 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:23.582 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:36:23.582 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:36:23.586 +03:00 [INF] Get all products
2022-09-15 21:36:23.587 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:36:23.589 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:36:23.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:36:23.598 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:36:23.600 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:36:23.601 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.6527ms
2022-09-15 21:36:23.602 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:36:23.603 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:36:23.605 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 27.6604ms
2022-09-15 21:36:55.553 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:36:55.554 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:55.557 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:55.558 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:36:55.560 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.4250ms
2022-09-15 21:36:55.571 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:36:55.572 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:55.575 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:55.576 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:36:55.579 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:36:55.581 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:36:55.583 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:36:55.584 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.574ms
2022-09-15 21:36:55.586 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:36:55.587 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:36:55.588 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.5718ms
2022-09-15 21:36:55.606 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:36:55.607 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:55.609 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:55.609 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:36:55.611 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.7820ms
2022-09-15 21:36:55.614 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:36:55.615 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:36:55.617 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:36:55.618 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:36:55.619 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:36:55.622 +03:00 [INF] Get all products
2022-09-15 21:36:55.623 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:36:55.790 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:36:55.798 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:36:55.802 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:36:55.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:36:55.806 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 185.1666ms
2022-09-15 21:36:55.808 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:36:55.809 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:36:55.814 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 199.5691ms
2022-09-15 21:40:36.456 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:40:36.457 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:40:36.462 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:40:36.464 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:40:36.466 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 10.6205ms
2022-09-15 21:40:36.473 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:40:36.475 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:40:36.479 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:40:36.482 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:40:36.484 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:40:36.487 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:40:36.491 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:40:36.493 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.6694ms
2022-09-15 21:40:36.496 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:40:36.502 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:40:36.505 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 31.6143ms
2022-09-15 21:40:36.516 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:40:36.517 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:40:36.518 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:40:36.520 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:40:36.521 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.0987ms
2022-09-15 21:40:36.524 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:40:36.524 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:40:36.526 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:40:36.526 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:40:36.527 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:40:36.529 +03:00 [INF] Get all products
2022-09-15 21:40:36.530 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:40:36.532 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:40:36.535 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:40:36.537 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:40:36.539 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:40:36.539 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.0472ms
2022-09-15 21:40:36.540 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:40:36.541 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:40:36.543 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 19.4324ms
2022-09-15 21:41:16.157 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:41:16.159 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:16.161 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:16.163 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:16.165 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.9833ms
2022-09-15 21:41:16.176 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:41:16.178 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:16.182 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:16.184 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:41:16.187 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:41:16.190 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:41:16.192 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:16.195 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.4283ms
2022-09-15 21:41:16.197 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:41:16.199 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:41:16.201 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.4834ms
2022-09-15 21:41:16.230 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:41:16.231 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:16.234 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:16.236 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:16.238 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.2074ms
2022-09-15 21:41:16.242 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:41:16.243 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:16.245 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:16.246 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:41:16.247 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:41:16.250 +03:00 [INF] Get all products
2022-09-15 21:41:16.251 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:41:16.254 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:41:16.259 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:41:16.264 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:41:16.266 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:16.268 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.3986ms
2022-09-15 21:41:16.269 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:41:16.271 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:41:16.274 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 32.5756ms
2022-09-15 21:41:40.541 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 21:41:40.546 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:40.551 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:40.552 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:40.554 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 13.5727ms
2022-09-15 21:41:40.564 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-15 21:41:40.565 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:40.567 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:40.569 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 21:41:40.570 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 21:41:40.572 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-15 21:41:40.573 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:41:40.581 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 21:41:40.594 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 21:41:40.605 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-15 21:41:40.609 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-15 21:41:40.610 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:40.611 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 39.2864ms
2022-09-15 21:41:40.612 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 21:41:40.613 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzI2NzMwMCwiZXhwIjoxNjYzMjY4MjAwLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.mJ9Gde6aNmlC5kyAUPx7R_J0U2veCxjoFkGV7OIUYA4","expiration":"2022-09-15T18:56:40.5923117Z","refreshToken":"b/JmOBfmw5tuAO6SA5NTfz+LKbLrQevY6xA+/nHvbnk="}}
2022-09-15 21:41:40.615 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 51.1802ms
2022-09-15 21:41:42.619 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:41:42.621 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:42.624 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:42.625 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:42.627 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.8948ms
2022-09-15 21:41:42.633 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:41:42.635 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:42.636 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:42.638 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:41:42.639 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:41:42.642 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:41:42.643 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:42.644 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.1556ms
2022-09-15 21:41:42.646 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:41:42.647 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:41:42.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.4100ms
2022-09-15 21:41:42.654 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:41:42.655 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:42.657 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:42.658 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:42.658 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.3771ms
2022-09-15 21:41:42.661 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:41:42.662 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:42.663 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:42.664 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:41:42.665 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:41:42.667 +03:00 [INF] Get all products
2022-09-15 21:41:42.668 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:41:42.670 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:41:42.673 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:41:42.676 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:41:42.677 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:42.678 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.4304ms
2022-09-15 21:41:42.679 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:41:42.680 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:41:42.682 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.0608ms
2022-09-15 21:41:44.878 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:41:44.880 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:44.884 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:44.885 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:44.886 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.8364ms
2022-09-15 21:41:44.890 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:41:44.891 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:44.893 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:44.894 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:41:44.895 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:41:44.898 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:41:44.904 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:41:44.910 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:41:44.912 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:41:44.918 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:41:44.922 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:41:44.924 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:44.925 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 27.8315ms
2022-09-15 21:41:44.927 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:41:44.929 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:41:44.930 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 40.8646ms
2022-09-15 21:41:58.765 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:41:58.767 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:58.769 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:58.770 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:41:58.771 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 5.5935ms
2022-09-15 21:41:58.776 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:41:58.777 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:41:58.780 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:41:58.782 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:41:58.784 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:41:58.787 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:41:58.859 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:41:58.865 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:41:58.869 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:41:58.876 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:41:58.881 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:41:58.882 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:41:58.883 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 97.6702ms
2022-09-15 21:41:58.885 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:41:58.887 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:41:58.888 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 112.4578ms
2022-09-15 21:42:10.101 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:42:10.103 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:10.106 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:10.107 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:42:10.110 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 8.7879ms
2022-09-15 21:42:10.114 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:42:10.116 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:10.119 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:10.120 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:42:10.123 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:42:10.127 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:42:10.133 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:42:10.140 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:42:10.142 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:42:10.146 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:42:10.149 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:42:10.151 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:42:10.152 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 25.6667ms
2022-09-15 21:42:10.154 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:42:10.155 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:42:10.156 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 41.8438ms
2022-09-15 21:42:27.668 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:42:27.669 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:27.671 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:27.672 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:42:27.673 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 5.9191ms
2022-09-15 21:42:27.678 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:42:27.679 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:27.682 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:27.683 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:42:27.685 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:42:27.689 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:42:27.691 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:42:27.692 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.3475ms
2022-09-15 21:42:27.697 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:42:27.702 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:42:27.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.2387ms
2022-09-15 21:42:27.718 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:42:27.720 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:27.722 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:27.723 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:42:27.724 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.3642ms
2022-09-15 21:42:27.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:42:27.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:27.735 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:27.736 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:42:27.737 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:42:27.739 +03:00 [INF] Get all products
2022-09-15 21:42:27.740 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:42:27.746 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:42:27.785 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:42:27.795 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:42:27.799 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:42:27.801 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 63.1629ms
2022-09-15 21:42:27.804 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:42:27.806 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:42:27.809 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 78.6765ms
2022-09-15 21:42:30.475 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:42:30.478 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:30.481 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:30.482 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:42:30.484 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.0054ms
2022-09-15 21:42:30.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:42:30.490 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:42:30.492 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:42:30.494 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:42:30.496 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:42:30.501 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:42:30.508 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:42:30.519 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:42:30.522 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:42:30.526 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:42:30.530 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:42:30.531 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:42:30.532 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 32.3049ms
2022-09-15 21:42:30.534 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:42:30.536 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:42:30.537 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 48.1919ms
2022-09-15 21:43:13.300 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:43:13.302 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:13.306 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:13.307 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:43:13.310 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.6273ms
2022-09-15 21:43:13.328 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:43:13.330 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:13.334 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:13.336 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:43:13.338 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:43:13.342 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:43:13.345 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:43:13.347 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.5553ms
2022-09-15 21:43:13.349 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:43:13.353 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:43:13.355 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.0301ms
2022-09-15 21:43:13.371 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:43:13.373 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:13.375 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:13.376 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:43:13.378 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.4020ms
2022-09-15 21:43:13.381 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:43:13.382 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:13.385 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:13.386 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:43:13.387 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:43:13.390 +03:00 [INF] Get all products
2022-09-15 21:43:13.391 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:43:13.394 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:43:13.397 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:43:13.401 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:43:13.403 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:43:13.404 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.4585ms
2022-09-15 21:43:13.405 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:43:13.406 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:43:13.408 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 27.5688ms
2022-09-15 21:43:14.173 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:43:14.175 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:14.179 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:14.181 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:43:14.182 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.2621ms
2022-09-15 21:43:14.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:43:14.189 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:43:14.191 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:43:14.194 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:43:14.196 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:43:14.200 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:43:14.204 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:43:14.208 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:43:14.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:43:14.221 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:43:14.225 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:43:14.227 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:43:14.228 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 29.8131ms
2022-09-15 21:43:14.230 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:43:14.231 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:43:14.232 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 45.5187ms
2022-09-15 21:44:23.850 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:44:23.852 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:44:23.856 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:44:23.857 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:44:23.859 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.4705ms
2022-09-15 21:44:23.864 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:44:23.867 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:44:23.871 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:44:23.872 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:44:23.874 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:44:23.877 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:44:23.882 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:44:23.887 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:44:23.889 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:44:23.895 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:44:23.899 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:44:23.900 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:44:23.901 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 25.2898ms
2022-09-15 21:44:23.903 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:44:23.907 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:44:23.918 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 54.3861ms
2022-09-15 21:45:23.309 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:23.310 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:23.313 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:23.315 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:23.317 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.3243ms
2022-09-15 21:45:23.328 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:23.329 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:23.332 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:23.333 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:23.334 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:45:23.338 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:45:23.339 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:23.340 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.6727ms
2022-09-15 21:45:23.342 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:23.343 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:45:23.345 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 16.9224ms
2022-09-15 21:45:23.365 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:23.366 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:23.367 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:23.368 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:23.369 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.9288ms
2022-09-15 21:45:23.372 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:23.374 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:23.376 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:23.377 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:23.378 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:45:23.380 +03:00 [INF] Get all products
2022-09-15 21:45:23.381 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:23.383 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:45:23.387 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:45:23.389 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:45:23.390 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:23.391 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.5809ms
2022-09-15 21:45:23.392 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:23.393 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:45:23.395 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 22.2594ms
2022-09-15 21:45:34.264 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:34.267 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:34.269 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:34.270 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:34.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.9824ms
2022-09-15 21:45:34.279 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:34.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:34.283 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:34.284 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:34.286 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:45:34.291 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:45:34.293 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:34.295 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.7874ms
2022-09-15 21:45:34.298 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:34.300 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:45:34.302 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.0230ms
2022-09-15 21:45:34.317 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:34.318 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:34.320 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:34.321 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:34.322 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.2372ms
2022-09-15 21:45:34.326 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:34.327 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:34.328 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:34.329 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:34.330 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:45:34.332 +03:00 [INF] Get all products
2022-09-15 21:45:34.333 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:34.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:45:34.338 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:45:34.341 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:45:34.342 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:34.343 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.3262ms
2022-09-15 21:45:34.344 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:34.345 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:45:34.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.0476ms
2022-09-15 21:45:35.958 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:45:35.960 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:35.964 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:35.966 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:35.968 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.9321ms
2022-09-15 21:45:35.971 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:45:35.972 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:35.973 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:35.974 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:45:35.976 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:45:35.979 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:35.982 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:45:35.988 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:45:35.991 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:45:35.994 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:45:35.997 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:45:35.998 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:35.999 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 21.0459ms
2022-09-15 21:45:36.000 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:45:36.001 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:45:36.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 31.4820ms
2022-09-15 21:45:46.712 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-15 21:45:46.714 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:46.717 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:46.718 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:46.721 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 8.4983ms
2022-09-15 21:45:46.728 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-15 21:45:46.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:46.733 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:46.735 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 21:45:46.737 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-15 21:45:46.740 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-15 21:45:46.743 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:46.748 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 21:45:46.763 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-15 21:45:46.768 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-15 21:45:46.773 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-15 21:45:46.774 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:46.776 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 35.454ms
2022-09-15 21:45:46.777 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-15 21:45:46.778 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzI2NzU0NiwiZXhwIjoxNjYzMjY4NDQ2LCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.VL7YHY3g5Ti4AheYRN1T_-gZ9xzg-X-Lk0wXio63JD4","expiration":"2022-09-15T19:00:46.761559Z","refreshToken":"XMIMs0EPu1n3gDv9feU2k7xKp4M5aWn5S6AKEbeXfAk="}}
2022-09-15 21:45:46.779 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 50.9096ms
2022-09-15 21:45:48.474 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:48.475 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:48.478 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:48.480 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:48.482 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.0477ms
2022-09-15 21:45:48.485 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:45:48.487 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:48.489 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:48.490 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:48.492 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:45:48.494 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:45:48.496 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:48.497 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.427ms
2022-09-15 21:45:48.498 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:45:48.499 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:45:48.501 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.5122ms
2022-09-15 21:45:48.509 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:48.511 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:48.514 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:48.515 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:48.516 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.6634ms
2022-09-15 21:45:48.519 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:45:48.520 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:48.522 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:48.522 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:48.524 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:45:48.526 +03:00 [INF] Get all products
2022-09-15 21:45:48.527 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:48.530 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:45:48.533 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:45:48.536 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:45:48.538 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:48.539 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.3633ms
2022-09-15 21:45:48.540 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:45:48.541 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:45:48.543 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 23.8525ms
2022-09-15 21:45:50.127 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:45:50.129 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:50.132 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:50.134 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:45:50.135 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 8.3665ms
2022-09-15 21:45:50.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:45:50.140 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:45:50.142 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:45:50.143 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:45:50.144 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:45:50.147 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:45:50.150 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:45:50.154 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:45:50.156 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:45:50.160 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:45:50.162 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:45:50.164 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:45:50.166 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 19.6451ms
2022-09-15 21:45:50.167 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:45:50.168 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:45:50.170 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 31.5978ms
2022-09-15 21:46:57.272 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:46:57.273 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:46:57.277 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:46:57.279 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:46:57.281 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 9.9476ms
2022-09-15 21:46:57.286 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:46:57.288 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:46:57.290 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:46:57.291 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:46:57.293 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:46:57.296 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:46:57.297 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:46:57.300 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.4099ms
2022-09-15 21:46:57.301 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:46:57.304 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:46:57.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 19.7654ms
2022-09-15 21:46:57.320 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:46:57.321 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:46:57.322 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:46:57.323 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:46:57.324 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.9401ms
2022-09-15 21:46:57.327 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:46:57.327 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:46:57.329 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:46:57.330 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:46:57.331 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:46:57.333 +03:00 [INF] Get all products
2022-09-15 21:46:57.333 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:46:57.336 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:46:57.338 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:46:57.341 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:46:57.342 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:46:57.343 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.1633ms
2022-09-15 21:46:57.344 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:46:57.345 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:46:57.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 20.1145ms
2022-09-15 21:47:03.075 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:47:03.077 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:03.080 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:03.082 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:03.083 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.7408ms
2022-09-15 21:47:03.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:47:03.087 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:03.089 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:03.091 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:47:03.092 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:47:03.096 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:47:03.107 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:47:03.115 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:47:03.119 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:47:03.126 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:47:03.131 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:47:03.132 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:03.133 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 38.128ms
2022-09-15 21:47:03.135 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:47:03.136 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:47:03.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 51.9786ms
2022-09-15 21:47:17.431 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:47:17.433 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:17.435 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:17.436 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:17.438 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.2482ms
2022-09-15 21:47:17.444 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:47:17.445 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:17.450 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:17.451 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:47:17.453 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:47:17.456 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:47:17.459 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:17.461 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.8319ms
2022-09-15 21:47:17.463 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:47:17.465 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:47:17.466 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.6023ms
2022-09-15 21:47:17.493 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:47:17.494 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:17.496 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:17.497 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:17.498 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.9955ms
2022-09-15 21:47:17.501 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:47:17.502 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:17.505 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:17.506 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:47:17.508 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:47:17.510 +03:00 [INF] Get all products
2022-09-15 21:47:17.511 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:47:17.514 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:47:17.518 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:47:17.522 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:47:17.523 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:17.524 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.6015ms
2022-09-15 21:47:17.525 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:47:17.526 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:47:17.528 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.6281ms
2022-09-15 21:47:39.135 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:47:39.137 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:39.139 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:39.140 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:39.143 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.8837ms
2022-09-15 21:47:39.153 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-15 21:47:39.155 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:39.158 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:39.160 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:47:39.162 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-15 21:47:39.166 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-15 21:47:39.168 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:39.170 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.9852ms
2022-09-15 21:47:39.171 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-15 21:47:39.173 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-15 21:47:39.175 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 21.9960ms
2022-09-15 21:47:39.189 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:47:39.190 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:39.191 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:39.192 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:39.193 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.5791ms
2022-09-15 21:47:39.195 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-15 21:47:39.196 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:39.197 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:39.198 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:47:39.199 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-15 21:47:39.201 +03:00 [INF] Get all products
2022-09-15 21:47:39.201 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:47:39.203 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-15 21:47:39.206 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-15 21:47:39.208 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-15 21:47:39.209 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:39.210 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 10.1896ms
2022-09-15 21:47:39.211 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-15 21:47:39.212 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-15 21:47:39.214 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 18.6432ms
2022-09-15 21:47:49.684 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:47:49.686 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:49.688 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:49.689 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:47:49.690 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 6.2388ms
2022-09-15 21:47:49.694 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:47:49.695 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:47:49.698 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:47:49.699 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:47:49.701 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:47:49.705 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:47:49.709 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:47:49.713 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:47:49.715 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:47:49.720 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:47:49.723 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:47:49.724 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:47:49.725 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 21.6413ms
2022-09-15 21:47:49.727 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:47:49.728 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":3}]
2022-09-15 21:47:49.729 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 35.3443ms
2022-09-15 21:48:00.173 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:48:00.175 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:00.177 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:00.177 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:00.178 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 5.1429ms
2022-09-15 21:48:00.181 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:00.182 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:00.184 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:00.185 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:00.186 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:00.188 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:00.189 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:00.193 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:00.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:00.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:00.203 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:00.206 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:00.209 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:00.211 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:00.212 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 24.2868ms
2022-09-15 21:48:00.213 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:00.214 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:00.215 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 33.4816ms
2022-09-15 21:48:01.050 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:01.051 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:01.053 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:01.054 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:01.055 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:01.058 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:01.059 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:01.063 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:01.078 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:01.082 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:01.087 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:01.095 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:01.099 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:01.101 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:01.102 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 44.4614ms
2022-09-15 21:48:01.103 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:01.104 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:01.105 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 55.3420ms
2022-09-15 21:48:01.497 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:01.499 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:01.501 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:01.502 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:01.503 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:01.506 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:01.508 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:01.516 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:01.521 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:01.525 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:01.529 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:01.538 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:01.544 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:01.546 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:01.548 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 41.9564ms
2022-09-15 21:48:01.550 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:01.552 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:01.554 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 56.5052ms
2022-09-15 21:48:01.990 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:01.991 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:01.993 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:01.994 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:01.995 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:01.997 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:01.998 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:02.002 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:02.006 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:02.009 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:02.012 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:02.015 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:02.018 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:02.020 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:02.020 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 23.5647ms
2022-09-15 21:48:02.022 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:02.023 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:02.024 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 34.0141ms
2022-09-15 21:48:03.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:48:03.389 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:03.392 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:03.394 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:03.396 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:03.400 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:03.403 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:03.407 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:03.409 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:03.414 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:48:03.417 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:48:03.418 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:03.420 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 20.8916ms
2022-09-15 21:48:03.421 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:03.422 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":7},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":7}]
2022-09-15 21:48:03.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 36.4526ms
2022-09-15 21:48:07.547 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:48:07.548 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:07.551 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:07.552 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:07.554 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 7.2359ms
2022-09-15 21:48:07.558 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:07.559 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:07.561 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:07.562 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:07.563 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:07.565 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-15 21:48:07.567 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:07.572 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:07.577 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:07.580 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:07.584 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:07.588 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:07.591 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:07.592 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:07.593 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 28.5197ms
2022-09-15 21:48:07.595 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:07.596 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:07.597 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 39.2976ms
2022-09-15 21:48:08.140 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:08.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:08.144 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:08.145 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:08.146 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:08.149 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-15 21:48:08.152 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:08.156 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:08.161 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:08.163 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:08.166 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:08.171 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:08.174 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:08.175 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:08.176 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 27.3482ms
2022-09-15 21:48:08.178 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:08.180 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:08.181 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 40.5773ms
2022-09-15 21:48:08.652 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:08.653 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:08.655 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:08.657 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:08.658 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:08.662 +03:00 [INF] RequestBody: {"productId":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","quantity":1}
2022-09-15 21:48:08.665 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:08.668 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:08.672 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:08.675 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:08.678 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:08.681 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:08.685 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:08.686 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:08.687 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 24.7833ms
2022-09-15 21:48:08.688 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:08.689 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:08.690 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 38.4078ms
2022-09-15 21:48:09.489 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:48:09.491 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:09.493 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:09.494 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:09.495 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:09.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:09.505 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:09.514 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:09.519 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:09.523 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:48:09.526 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:48:09.527 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:09.528 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 29.1288ms
2022-09-15 21:48:09.530 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:09.531 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":10},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":7}]
2022-09-15 21:48:09.532 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 42.9222ms
2022-09-15 21:48:16.268 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:48:16.270 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:16.274 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:16.276 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:16.279 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 10.6814ms
2022-09-15 21:48:16.285 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:48:16.287 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:16.291 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:16.293 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:16.295 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:16.300 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:16.305 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:16.310 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:16.312 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:16.315 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:48:16.319 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:48:16.320 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:16.322 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 23.3167ms
2022-09-15 21:48:16.323 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:16.325 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":10},{"basketItemId":"715b6202-b088-4577-95ce-d7cb95d3e537","name":"test2","price":100,"quantity":7}]
2022-09-15 21:48:16.326 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 41.5691ms
2022-09-15 21:48:17.794 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537 - -
2022-09-15 21:48:17.797 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:17.799 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:17.800 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:17.801 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537 - - - 204 - - 6.5820ms
2022-09-15 21:48:17.804 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7122/api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537 - -
2022-09-15 21:48:17.806 +03:00 [INF] Request:
Protocol: HTTP/2
Method: DELETE
Scheme: https
PathBase: 
Path: /api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:17.807 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:17.808 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API)'
2022-09-15 21:48:17.814 +03:00 [INF] Route matched with {action = "RemoveBasketItem", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RemoveBasketItem(eTrade.Application.Features.Commands.Basket.RemoveBasketItem.RemoveBasketItemCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:17.827 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:17.833 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-15 21:48:17.858 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "BasketItems"
WHERE "Id" = @p0;
2022-09-15 21:48:17.870 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.RemoveBasketItem.RemoveBasketItemCommandResponse'.
2022-09-15 21:48:17.873 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:17.873 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API) in 56.4651ms
2022-09-15 21:48:17.875 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.RemoveBasketItem (eTradeAPI.API)'
2022-09-15 21:48:17.875 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:17.876 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7122/api/baskets/715b6202-b088-4577-95ce-d7cb95d3e537 - - - 200 - application/json;+charset=utf-8 72.3859ms
2022-09-15 21:48:20.479 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:48:20.481 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:20.483 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:20.485 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:20.485 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 5.8836ms
2022-09-15 21:48:20.489 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:20.490 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:20.491 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:20.492 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:20.493 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:20.494 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:20.497 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:20.501 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:20.504 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:20.506 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:20.509 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:20.514 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BasketItems" ("Id", "BasketId", "CreatedDate", "ProductId", "Quantity", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-09-15 21:48:20.517 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:20.519 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:20.519 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 25.0261ms
2022-09-15 21:48:20.520 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:20.521 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:20.522 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 33.1578ms
2022-09-15 21:48:21.569 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:48:21.571 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:21.573 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:21.575 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:21.577 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:21.581 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:21.584 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:21.588 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:21.590 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:21.594 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:48:21.596 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:48:21.597 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:21.598 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 17.8163ms
2022-09-15 21:48:21.599 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:21.601 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":10},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":1}]
2022-09-15 21:48:21.602 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 33.3382ms
2022-09-15 21:48:24.713 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:24.714 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:24.715 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:24.715 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:24.716 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:24.718 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:24.720 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:24.724 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:24.729 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:24.730 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:24.734 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:24.736 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:24.739 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:24.740 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:24.741 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 23.5161ms
2022-09-15 21:48:24.742 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:24.743 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:24.743 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 30.8661ms
2022-09-15 21:48:25.217 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:25.219 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:25.219 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:25.220 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:25.221 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:25.222 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:25.224 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:25.228 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:25.235 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:25.237 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:25.242 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:25.245 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:25.249 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:25.250 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:25.250 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 28.3911ms
2022-09-15 21:48:25.252 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:25.253 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:25.254 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 37.4915ms
2022-09-15 21:48:25.665 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-15 21:48:25.667 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:25.668 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:25.670 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-15 21:48:25.670 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 4.9888ms
2022-09-15 21:48:25.673 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:25.674 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:25.675 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:25.677 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:25.678 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:25.679 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:25.681 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:25.684 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:25.688 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:25.690 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:25.693 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:25.697 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:25.700 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:25.701 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:25.702 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 22.7982ms
2022-09-15 21:48:25.703 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:25.704 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:25.705 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 32.1198ms
2022-09-15 21:48:26.234 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:26.235 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:26.236 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:26.236 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:26.237 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:26.239 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:26.240 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:26.243 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:26.247 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:26.249 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:26.252 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:26.256 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:26.259 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:26.260 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:26.260 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 21.8161ms
2022-09-15 21:48:26.261 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:26.262 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:26.263 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 29.5459ms
2022-09-15 21:48:26.936 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-15 21:48:26.938 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:26.938 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:26.939 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:26.940 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:26.941 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-15 21:48:26.943 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:26.946 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:26.950 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:26.952 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:26.957 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-15 21:48:26.960 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-15 21:48:26.964 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-15 21:48:26.965 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:26.966 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 24.2889ms
2022-09-15 21:48:26.967 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-15 21:48:26.968 +03:00 [INF] ResponseBody: {}
2022-09-15 21:48:26.969 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 33.4830ms
2022-09-15 21:48:27.957 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-15 21:48:27.959 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-15 21:48:27.960 +03:00 [INF] CORS policy execution successful.
2022-09-15 21:48:27.962 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:27.964 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-15 21:48:27.967 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-15 21:48:27.970 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-15 21:48:27.974 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:27.976 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-15 21:48:27.979 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-15 21:48:27.981 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-15 21:48:27.982 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-15 21:48:27.983 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 17.3481ms
2022-09-15 21:48:27.984 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-15 21:48:27.985 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":10},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":6}]
2022-09-15 21:48:27.986 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 29.4793ms
2022-09-17 08:10:18.715 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-17 08:10:20.582 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-17 08:10:20.602 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-17 08:10:20.609 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-17 08:10:20.610 +03:00 [INF] Hosting environment: Development
2022-09-17 08:10:20.612 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-17 08:12:39.994 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-17 08:12:40.196 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:12:40.212 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:12:40.216 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:12:40.243 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 258.6938ms
2022-09-17 08:12:40.246 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-17 08:12:40.262 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:12:40.265 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:12:40.342 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-17 08:12:40.473 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-17 08:12:40.613 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-17 08:12:44.884 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:12:46.129 +03:00 [INF] Executed DbCommand (78ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-17 08:12:47.713 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-17 08:12:48.059 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-17 08:12:48.182 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-17 08:12:48.213 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:12:48.231 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 7744.7347ms
2022-09-17 08:12:48.233 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-17 08:12:48.251 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzM5MTU2NywiZXhwIjoxNjYzMzkyNDY3LCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.kZTKYQ4Q8TXL_Q_NWBN6Pos65ENvQH1JlP7656GI0EA","expiration":"2022-09-17T05:27:47.0779404Z","refreshToken":"uwfrMLwyDiliK+SpMhQFTUyjmf8BKLG55bNmkOGmNlM="}}
2022-09-17 08:12:48.289 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 8043.4834ms
2022-09-17 08:13:15.462 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-09-17 08:13:15.496 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:15.538 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:15.541 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:15.556 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 93.7211ms
2022-09-17 08:13:15.592 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-09-17 08:13:15.593 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:15.601 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:15.603 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-09-17 08:13:15.636 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-09-17 08:13:15.639 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-09-17 08:13:15.641 +03:00 [INF] RequestBody: 
2022-09-17 08:13:15.642 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"tcIwuNy3rMswBAYIGwredA","connectionToken":"v_HRl6_aI2Ge1JblojvUVw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-09-17 08:13:15.662 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 70.5518ms
2022-09-17 08:13:15.726 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=v_HRl6_aI2Ge1JblojvUVw - -
2022-09-17 08:13:15.746 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-09-17 08:13:15.756 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:15.760 +03:00 [INF] Executing endpoint '/products-hub'
2022-09-17 08:13:31.651 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-09-17 08:13:31.657 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:31.672 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:31.681 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:31.691 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 39.4421ms
2022-09-17 08:13:31.718 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-09-17 08:13:31.720 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:31.724 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:31.726 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:13:31.749 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-17 08:13:31.783 +03:00 [INF] Get all products
2022-09-17 08:13:31.933 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:32.036 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-17 08:13:32.170 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-17 08:13:32.181 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-17 08:13:32.619 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-17 08:13:32.667 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-17 08:13:32.692 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:32.696 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 942.4172ms
2022-09-17 08:13:32.698 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:13:32.701 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-17 08:13:32.705 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 987.0783ms
2022-09-17 08:13:35.303 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-17 08:13:35.307 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:35.314 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:35.316 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:35.320 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 204 - - 16.2969ms
2022-09-17 08:13:35.362 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - -
2022-09-17 08:13:35.375 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:35.382 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:35.918 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-17 08:13:35.926 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-17 08:13:35.965 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:36.314 +03:00 [INF] Executed DbCommand (136ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-17 08:13:36.732 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-17 08:13:36.765 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:36.767 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 833.1997ms
2022-09-17 08:13:36.772 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-09-17 08:13:36.787 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-10.jpg","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","fileName":"wallpaper-10.jpg"}]
2022-09-17 08:13:36.795 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/1963160b-88dd-4feb-b47e-e0f1521b1cfc - - - 200 - application/json;+charset=utf-8 1432.7214ms
2022-09-17 08:13:40.735 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 08:13:40.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:40.749 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:40.751 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:40.764 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 28.8178ms
2022-09-17 08:13:40.772 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 08:13:40.773 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:40.778 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:40.780 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 08:13:40.782 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-17 08:13:40.794 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-17 08:13:40.797 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:40.799 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.4804ms
2022-09-17 08:13:40.800 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 08:13:40.803 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-17 08:13:40.815 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 43.1135ms
2022-09-17 08:13:40.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 08:13:40.836 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:40.854 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:40.858 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:40.860 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 25.5957ms
2022-09-17 08:13:40.867 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 08:13:40.868 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:40.898 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:40.900 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:13:40.903 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-17 08:13:40.918 +03:00 [INF] Get all products
2022-09-17 08:13:40.920 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:40.934 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-17 08:13:40.962 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-17 08:13:40.987 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-17 08:13:40.990 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:40.993 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 76.4235ms
2022-09-17 08:13:40.996 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:13:40.998 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-17 08:13:41.003 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 135.9875ms
2022-09-17 08:13:43.524 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 08:13:43.527 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:43.536 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:43.538 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:43.549 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 25.2555ms
2022-09-17 08:13:43.558 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-17 08:13:43.563 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:43.575 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:43.578 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:13:43.587 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:43.618 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:43.676 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:13:43.773 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:43.788 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:43.871 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-17 08:13:43.912 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-17 08:13:43.916 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:43.918 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 317.1414ms
2022-09-17 08:13:43.930 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:13:43.933 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":10},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":6}]
2022-09-17 08:13:43.943 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 384.7965ms
2022-09-17 08:13:46.046 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 08:13:46.048 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:46.051 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:46.052 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:46.068 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 22.2811ms
2022-09-17 08:13:46.083 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:46.084 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:46.096 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:46.099 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:46.108 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:46.121 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"9"}
2022-09-17 08:13:46.154 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:46.173 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:46.208 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:46.237 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:46.251 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:46.256 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 137.3472ms
2022-09-17 08:13:46.258 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:46.266 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:46.271 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 187.9751ms
2022-09-17 08:13:46.968 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:46.970 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:46.978 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:46.981 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:46.982 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:47.002 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"8"}
2022-09-17 08:13:47.014 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:47.028 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:47.061 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:47.070 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:47.072 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:47.079 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 77.7029ms
2022-09-17 08:13:47.083 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:47.084 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:47.103 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 135.2959ms
2022-09-17 08:13:47.814 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:47.817 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:47.841 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:47.843 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:47.846 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:47.855 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"7"}
2022-09-17 08:13:47.892 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:47.902 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:47.918 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:47.929 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:47.930 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:47.932 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 79.2666ms
2022-09-17 08:13:47.934 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:47.935 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:47.953 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 138.7617ms
2022-09-17 08:13:48.430 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:48.434 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:48.443 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:48.445 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:48.446 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:48.458 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"6"}
2022-09-17 08:13:48.463 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:48.472 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:48.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:48.525 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:48.531 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:48.541 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 83.7073ms
2022-09-17 08:13:48.546 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:48.553 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:48.555 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 124.5392ms
2022-09-17 08:13:49.002 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:49.003 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:49.012 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:49.014 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:49.015 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:49.032 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"5"}
2022-09-17 08:13:49.036 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:49.046 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:49.066 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:49.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:49.083 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:49.094 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 62.7319ms
2022-09-17 08:13:49.100 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:49.108 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:49.109 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 107.8374ms
2022-09-17 08:13:49.561 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:49.564 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:49.573 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:49.575 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:49.586 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:49.612 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"4"}
2022-09-17 08:13:49.617 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:49.632 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:49.649 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:49.666 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:49.675 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:49.682 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 70.5945ms
2022-09-17 08:13:49.684 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:49.691 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:49.693 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 132.5257ms
2022-09-17 08:13:50.030 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:50.033 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:50.053 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:50.059 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:50.060 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:50.066 +03:00 [INF] RequestBody: {"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","quantity":"3"}
2022-09-17 08:13:50.089 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:50.104 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:50.118 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:50.133 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:50.139 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:50.147 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 81.4032ms
2022-09-17 08:13:50.149 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:50.152 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:50.162 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 131.9124ms
2022-09-17 08:13:50.780 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:50.783 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:50.797 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:50.800 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:50.802 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:50.811 +03:00 [INF] RequestBody: {"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","quantity":"5"}
2022-09-17 08:13:50.815 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:50.837 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:50.847 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:50.851 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:50.859 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:50.871 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 60.3512ms
2022-09-17 08:13:50.879 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:50.881 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:50.886 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 106.8120ms
2022-09-17 08:13:51.703 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 08:13:51.706 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:51.714 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:51.716 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:51.723 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 19.7614ms
2022-09-17 08:13:51.731 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:51.734 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:51.748 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:51.752 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:51.760 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:51.766 +03:00 [INF] RequestBody: {"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","quantity":"4"}
2022-09-17 08:13:51.781 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:51.797 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:51.807 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:51.814 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:51.837 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:51.846 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 79.3916ms
2022-09-17 08:13:51.850 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:51.851 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:51.853 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 122.2425ms
2022-09-17 08:13:52.643 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 08:13:52.656 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:52.663 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:52.664 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:52.680 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:52.686 +03:00 [INF] RequestBody: {"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","quantity":"3"}
2022-09-17 08:13:52.692 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:52.700 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 08:13:52.713 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:52.733 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 08:13:52.738 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:52.741 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 55.2168ms
2022-09-17 08:13:52.748 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 08:13:52.750 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:52.759 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 116.7342ms
2022-09-17 08:13:54.982 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-17 08:13:54.985 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:55.009 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:55.013 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:13:55.016 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:55.039 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:55.049 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:13:55.065 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:55.079 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:55.098 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-17 08:13:55.113 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-17 08:13:55.117 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:55.128 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 93.7614ms
2022-09-17 08:13:55.131 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:13:55.133 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":3}]
2022-09-17 08:13:55.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 164.2568ms
2022-09-17 08:13:58.812 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 08:13:58.814 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:58.818 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:58.820 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:13:58.825 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 12.9578ms
2022-09-17 08:13:58.830 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-17 08:13:58.832 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:58.841 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:58.846 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:13:58.857 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:58.861 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-17 08:13:58.883 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:58.903 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:13:58.930 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:58.945 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:58.974 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-17 08:13:59.009 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:59.022 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-17 08:13:59.027 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:59.039 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 178.7067ms
2022-09-17 08:13:59.043 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:13:59.047 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:59.052 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 221.5743ms
2022-09-17 08:13:59.738 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-17 08:13:59.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:13:59.750 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:13:59.752 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:13:59.763 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:13:59.778 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-17 08:13:59.787 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:13:59.807 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:13:59.837 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:59.844 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:13:59.851 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-17 08:13:59.868 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:13:59.880 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-17 08:13:59.889 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:13:59.896 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 118.5179ms
2022-09-17 08:13:59.901 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:13:59.907 +03:00 [INF] ResponseBody: {}
2022-09-17 08:13:59.909 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 171.2330ms
2022-09-17 08:14:00.599 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/baskets application/json 65
2022-09-17 08:14:00.602 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 65
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:14:00.613 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:14:00.615 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:14:00.622 +03:00 [INF] Route matched with {action = "AddItemToBasket", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddItemToBasket(eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:14:00.645 +03:00 [INF] RequestBody: {"productId":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","quantity":1}
2022-09-17 08:14:00.654 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:14:00.665 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:14:00.680 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:14:00.693 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:14:00.701 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid), @__Parse_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE (b."BasketId" = @__basket_Id_0) AND (b."ProductId" = @__Parse_1)
LIMIT 1
2022-09-17 08:14:00.711 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 08:14:00.716 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandResponse'.
2022-09-17 08:14:00.726 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:14:00.732 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API) in 87.0618ms
2022-09-17 08:14:00.740 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.AddItemToBasket (eTradeAPI.API)'
2022-09-17 08:14:00.742 +03:00 [INF] ResponseBody: {}
2022-09-17 08:14:00.743 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/baskets application/json 65 - 200 - application/json;+charset=utf-8 144.0524ms
2022-09-17 08:14:02.564 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-17 08:14:02.571 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:14:02.577 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:14:02.580 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:14:02.601 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 08:14:02.622 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:14:02.626 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 08:14:02.661 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:14:02.672 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."CustomerId", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 08:14:02.692 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-17 08:14:02.698 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-17 08:14:02.710 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:14:02.713 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 95.2092ms
2022-09-17 08:14:02.716 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 08:14:02.731 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":6}]
2022-09-17 08:14:02.736 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 171.9578ms
2022-09-17 08:21:23.956 +03:00 [INF] Executed endpoint '/products-hub'
2022-09-17 08:21:23.959 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Sat, 17 Sep 2022 05:13:15 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-09-17 08:21:23.961 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=v_HRl6_aI2Ge1JblojvUVw - - - 101 - - 488235.2019ms
2022-09-17 08:21:24.498 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 08:21:24.499 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:21:24.502 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:21:24.504 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:21:24.506 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.4773ms
2022-09-17 08:21:24.510 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 08:21:24.511 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:21:24.517 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:21:24.518 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 08:21:24.521 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-17 08:21:24.526 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-17 08:21:24.530 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:21:24.532 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 6.0271ms
2022-09-17 08:21:24.534 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 08:21:24.536 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-17 08:21:24.538 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 27.8928ms
2022-09-17 08:21:24.553 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 08:21:24.556 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:21:24.558 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:21:24.559 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 08:21:24.560 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.0143ms
2022-09-17 08:21:24.566 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 08:21:24.568 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 08:21:24.570 +03:00 [INF] CORS policy execution successful.
2022-09-17 08:21:24.571 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:21:24.572 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-17 08:21:24.576 +03:00 [INF] Get all products
2022-09-17 08:21:24.577 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:21:24.646 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-17 08:21:24.654 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-17 08:21:24.658 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-17 08:21:24.661 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 08:21:24.662 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 88.6282ms
2022-09-17 08:21:24.664 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 08:21:24.666 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-17 08:21:24.669 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 102.4077ms
2022-09-17 08:53:40.732 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:54:04.103 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:54:04.429 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:54:04.496 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:54:04.510 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-17 08:54:04.530 +03:00 [INF] Applying migration '20220917055340_mig_3'.
2022-09-17 08:54:04.702 +03:00 [INF] Executed DbCommand (120ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" DROP CONSTRAINT "FK_Orders_Customers_CustomerId";
2022-09-17 08:54:04.722 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" ALTER COLUMN "CustomerId" DROP NOT NULL;
2022-09-17 08:54:04.803 +03:00 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" ADD CONSTRAINT "FK_Orders_Customers_CustomerId" FOREIGN KEY ("CustomerId") REFERENCES "Customers" ("Id");
2022-09-17 08:54:04.816 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220917055340_mig_3', '6.0.4');
2022-09-17 08:56:16.220 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:56:23.067 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:56:23.430 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:56:23.503 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:56:23.515 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-17 08:56:23.541 +03:00 [INF] Applying migration '20220917055616_mig_4'.
2022-09-17 08:56:23.606 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "OrderProduct";
2022-09-17 08:56:23.607 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220917055616_mig_4', '6.0.4');
2022-09-17 08:59:32.347 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:59:38.452 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 08:59:38.881 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:59:38.950 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 08:59:38.960 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-17 08:59:38.980 +03:00 [INF] Applying migration '20220917055932_mig_5'.
2022-09-17 08:59:39.109 +03:00 [INF] Executed DbCommand (80ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" ADD "BasketId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
2022-09-17 08:59:39.111 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220917055932_mig_5', '6.0.4');
2022-09-17 09:00:06.326 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 09:00:16.719 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 09:00:17.077 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 09:00:17.142 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 09:00:17.153 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-17 09:00:17.174 +03:00 [INF] Applying migration '20220917060006_mig_6'.
2022-09-17 09:00:17.227 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" DROP CONSTRAINT "FK_Orders_Customers_CustomerId";
2022-09-17 09:00:17.227 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX "IX_Orders_CustomerId";
2022-09-17 09:00:17.229 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" DROP COLUMN "CustomerId";
2022-09-17 09:00:17.230 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220917060006_mig_6', '6.0.4');
2022-09-17 11:34:16.648 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-17 11:34:17.513 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-17 11:34:17.514 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-17 11:34:17.518 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-17 11:34:17.519 +03:00 [INF] Hosting environment: Development
2022-09-17 11:34:17.520 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-17 11:55:57.794 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 11:56:57.085 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 11:56:57.454 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 11:56:57.519 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-09-17 11:56:57.531 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-09-17 11:56:57.553 +03:00 [INF] Applying migration '20220917085558_mig_7'.
2022-09-17 11:56:57.624 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Orders" DROP COLUMN "BasketId";
2022-09-17 11:56:57.625 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220917085558_mig_7', '6.0.4');
2022-09-17 11:57:17.308 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-17 11:57:18.104 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-17 11:57:18.106 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-17 11:57:18.110 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-17 11:57:18.111 +03:00 [INF] Hosting environment: Development
2022-09-17 11:57:18.112 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-09-17 11:59:48.287 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-09-17 11:59:48.368 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 11:59:48.374 +03:00 [INF] CORS policy execution successful.
2022-09-17 11:59:48.377 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 11:59:48.389 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 104.5732ms
2022-09-17 11:59:48.393 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 44
2022-09-17 11:59:48.400 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 44
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 11:59:48.404 +03:00 [INF] CORS policy execution successful.
2022-09-17 11:59:48.433 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-17 11:59:48.473 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-09-17 11:59:48.546 +03:00 [INF] RequestBody: {"userNameOrEmail":"anil","password":"1903"}
2022-09-17 11:59:50.584 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 11:59:51.186 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-17 11:59:51.936 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-09-17 11:59:52.126 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-09-17 11:59:52.189 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-09-17 11:59:52.202 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 11:59:52.217 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3732.9984ms
2022-09-17 11:59:52.223 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-09-17 11:59:52.228 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiYW5pbCIsIm5iZiI6MTY2MzQwNTE5MSwiZXhwIjoxNjYzNDA2MDkxLCJpc3MiOiJ3d3cubXlhcGkuY29tIiwiYXVkIjoid3d3LmJhdGkuY29tIn0.Sx7MePxRbK_Z7gnwgJ3xZD8Nm6UI4G8kmP79DT4tA04","expiration":"2022-09-17T09:14:51.6301566Z","refreshToken":"0PfkSj2XU0IbHkk3QGylVlDkGWDw5B3aAP8dUf/8XmE="}}
2022-09-17 11:59:52.258 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 44 - 200 - application/json;+charset=utf-8 3864.4518ms
2022-09-17 12:00:01.656 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 12:00:01.659 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:01.664 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:01.672 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 12:00:01.678 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 22.4965ms
2022-09-17 12:00:01.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-09-17 12:00:01.705 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:01.722 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:01.724 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 12:00:01.727 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-09-17 12:00:01.736 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-09-17 12:00:01.740 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:01.742 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.3852ms
2022-09-17 12:00:01.751 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-09-17 12:00:01.753 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-09-17 12:00:01.756 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 63.2336ms
2022-09-17 12:00:01.771 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 12:00:01.773 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:01.782 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:01.787 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 12:00:01.796 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 25.2548ms
2022-09-17 12:00:01.801 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-09-17 12:00:01.802 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:01.805 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:01.809 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 12:00:01.819 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-09-17 12:00:01.846 +03:00 [INF] Get all products
2022-09-17 12:00:01.894 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 12:00:01.942 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-09-17 12:00:01.993 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-17 12:00:01.997 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-09-17 12:00:02.222 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-09-17 12:00:02.240 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-09-17 12:00:02.254 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:02.256 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 432.29ms
2022-09-17 12:00:02.259 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-09-17 12:00:02.264 +03:00 [INF] ResponseBody: {"totalProductCount":2,"products":[{"id":"1963160b-88dd-4feb-b47e-e0f1521b1cfc","name":"test2","stock":20,"price":100,"createdDate":"2022-09-11T18:12:55.417031Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-10.jpg","path":"photo-images/wallpaper-10.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"3dfa8ba2-e47c-4329-8658-495697ab065d","createdDate":"2022-09-11T18:13:34.76572Z"}]},{"id":"83ca8ecc-41b3-4d41-b860-0c5f2b01b8e4","name":"test","stock":10,"price":50,"createdDate":"2022-09-11T14:29:17.823382Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-9.jpg","path":"photo-images/wallpaper-9.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cdcb7d5a-ea3e-4bc4-b30d-0e275703b8fa","createdDate":"2022-09-11T14:29:33.414319Z"}]}]}
2022-09-17 12:00:02.269 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 468.1140ms
2022-09-17 12:00:04.868 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 12:00:04.871 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:04.875 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:04.877 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 12:00:04.879 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 11.1949ms
2022-09-17 12:00:04.884 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/baskets - -
2022-09-17 12:00:04.890 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:04.895 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:05.125 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 12:00:05.130 +03:00 [INF] Route matched with {action = "GetBasketItems", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBasketItems(eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 12:00:05.163 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 12:00:05.203 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 12:00:05.280 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 12:00:05.289 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 12:00:05.337 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__basket_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."UpdatedDate", t."UserId", t0."Id", t0."BasketId", t0."CreatedDate", t0."ProductId", t0."Quantity", t0."UpdatedDate", t0."Id0", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate0"
FROM (
    SELECT b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
    FROM "Baskets" AS b
    WHERE b."Id" = @__basket_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT b0."Id", b0."BasketId", b0."CreatedDate", b0."ProductId", b0."Quantity", b0."UpdatedDate", p."Id" AS "Id0", p."CreatedDate" AS "CreatedDate0", p."Name", p."Price", p."Stock", p."UpdatedDate" AS "UpdatedDate0"
    FROM "BasketItems" AS b0
    INNER JOIN "Products" AS p ON b0."ProductId" = p."Id"
) AS t0 ON t."Id" = t0."BasketId"
ORDER BY t."Id", t0."Id"
2022-09-17 12:00:05.401 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-09-17 12:00:05.405 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:05.407 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API) in 274.1107ms
2022-09-17 12:00:05.409 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.GetBasketItems (eTradeAPI.API)'
2022-09-17 12:00:05.412 +03:00 [INF] ResponseBody: [{"basketItemId":"4fa1f22c-bd36-4898-980c-8b29dd6b12a0","name":"test","price":50,"quantity":3},{"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","name":"test2","price":100,"quantity":6}]
2022-09-17 12:00:05.414 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/baskets - - - 200 - application/json;+charset=utf-8 529.7869ms
2022-09-17 12:00:08.460 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/baskets - -
2022-09-17 12:00:08.462 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/baskets
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:08.466 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:08.467 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 12:00:08.470 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/baskets - - - 204 - - 9.4498ms
2022-09-17 12:00:08.475 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 12:00:08.477 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:08.480 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:08.487 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 12:00:08.493 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 12:00:08.499 +03:00 [INF] RequestBody: {"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","quantity":"5"}
2022-09-17 12:00:08.513 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 12:00:08.521 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 12:00:08.537 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 12:00:08.548 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 12:00:08.554 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:08.556 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 57.0331ms
2022-09-17 12:00:08.561 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 12:00:08.567 +03:00 [INF] ResponseBody: {}
2022-09-17 12:00:08.569 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 94.3234ms
2022-09-17 12:00:09.136 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/baskets application/json 70
2022-09-17 12:00:09.137 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/baskets
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 70
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:09.140 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:09.143 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 12:00:09.147 +03:00 [INF] Route matched with {action = "UpdateQuantity", controller = "Baskets"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateQuantity(eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest) on controller eTradeAPI.API.controller.BasketsController (eTradeAPI.API).
2022-09-17 12:00:09.154 +03:00 [INF] RequestBody: {"basketItemId":"bcc61103-2c01-424f-8227-5f448aeb08e5","quantity":"4"}
2022-09-17 12:00:09.156 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 12:00:09.160 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."BasketId", b."CreatedDate", b."ProductId", b."Quantity", b."UpdatedDate"
FROM "BasketItems" AS b
WHERE b."Id" = @__Parse_0
LIMIT 1
2022-09-17 12:00:09.170 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "BasketItems" SET "Quantity" = @p0, "UpdatedDate" = @p1
WHERE "Id" = @p2;
2022-09-17 12:00:09.174 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandResponse'.
2022-09-17 12:00:09.175 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:09.177 +03:00 [INF] Executed action eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API) in 23.2575ms
2022-09-17 12:00:09.181 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.BasketsController.UpdateQuantity (eTradeAPI.API)'
2022-09-17 12:00:09.184 +03:00 [INF] ResponseBody: {}
2022-09-17 12:00:09.186 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/baskets application/json 70 - 200 - application/json;+charset=utf-8 49.5319ms
2022-09-17 12:00:10.274 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/orders - -
2022-09-17 12:00:10.276 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/orders
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:10.292 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:10.296 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-09-17 12:00:10.302 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/orders - - - 204 - - 27.6685ms
2022-09-17 12:00:10.306 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/orders application/json 61
2022-09-17 12:00:10.308 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/orders
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 61
sec-ch-ua: "Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-09-17 12:00:10.312 +03:00 [INF] CORS policy execution successful.
2022-09-17 12:00:10.313 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.OrdersController.CreateOrder (eTradeAPI.API)'
2022-09-17 12:00:10.318 +03:00 [INF] Route matched with {action = "CreateOrder", controller = "Orders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] CreateOrder(eTrade.Application.Features.Commands.Order.CreateOrder.CreateOrderCommandRequest) on controller eTradeAPI.API.controller.OrdersController (eTradeAPI.API).
2022-09-17 12:00:10.327 +03:00 [INF] RequestBody: {"address":"Muratpaşa/Antalya","description":"deneme urunu"}
2022-09-17 12:00:10.337 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-09-17 12:00:10.344 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__username_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."ConcurrencyStamp", t."Email", t."EmailConfirmed", t."LockoutEnabled", t."LockoutEnd", t."NameSurname", t."NormalizedEmail", t."NormalizedUserName", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."RefreshToken", t."RefreshTokenEndDate", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", b."Id", b."CreatedDate", b."UpdatedDate", b."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
    FROM "AspNetUsers" AS a
    WHERE a."UserName" = @__username_0
    LIMIT 1
) AS t
LEFT JOIN "Baskets" AS b ON t."Id" = b."UserId"
ORDER BY t."Id"
2022-09-17 12:00:10.356 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 12:00:10.361 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT o."Id", o."Address", o."CreatedDate", o."Description", o."UpdatedDate"
FROM "Orders" AS o
2022-09-17 12:00:10.432 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Orders" ("Id", "Address", "CreatedDate", "Description", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4);
2022-09-17 12:00:10.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.Order.CreateOrder.CreateOrderCommandResponse'.
2022-09-17 12:00:10.444 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-09-17 12:00:10.446 +03:00 [INF] Executed action eTradeAPI.API.controller.OrdersController.CreateOrder (eTradeAPI.API) in 120.4278ms
2022-09-17 12:00:10.448 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.OrdersController.CreateOrder (eTradeAPI.API)'
2022-09-17 12:00:10.450 +03:00 [INF] ResponseBody: {}
2022-09-17 12:00:10.451 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/orders application/json 61 - 200 - application/json;+charset=utf-8 144.7350ms
2022-09-17 12:07:39.622 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-09-17 12:07:39.975 +03:00 [INF] Now listening on: https://localhost:7122
2022-09-17 12:07:39.976 +03:00 [INF] Now listening on: http://localhost:5122
2022-09-17 12:07:39.982 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-09-17 12:07:39.983 +03:00 [INF] Hosting environment: Development
2022-09-17 12:07:39.983 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
