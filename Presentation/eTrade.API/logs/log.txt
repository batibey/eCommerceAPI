2022-08-10 21:28:26.282 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-10 21:28:26.771 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-10 21:28:26.775 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-10 21:28:26.780 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-10 21:28:26.781 +03:00 [INF] Hosting environment: Development
2022-08-10 21:28:26.783 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-10 22:49:59.037 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-10 22:49:59.444 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-10 22:49:59.446 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-10 22:49:59.450 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-10 22:49:59.453 +03:00 [INF] Hosting environment: Development
2022-08-10 22:49:59.467 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-10 22:50:29.739 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-10 22:50:29.826 +03:00 [INF] CORS policy execution successful.
2022-08-10 22:50:29.844 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 114.2720ms
2022-08-10 22:50:29.852 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-10 22:50:29.856 +03:00 [INF] CORS policy execution successful.
2022-08-10 22:50:29.882 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-10 22:50:29.916 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-10 22:50:32.195 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-10 22:50:32.894 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-10 22:50:33.716 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-10 22:50:33.924 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-10 22:50:34.019 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-10 22:50:34.041 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4116.6223ms
2022-08-10 22:50:34.043 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-10 22:50:34.067 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4214.8413ms
2022-08-11 20:44:01.719 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 20:44:02.563 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 20:44:02.565 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 20:44:02.569 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 20:44:02.570 +03:00 [INF] Hosting environment: Development
2022-08-11 20:44:02.571 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:27:59.088 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:27:59.405 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:27:59.407 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:27:59.411 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:27:59.414 +03:00 [INF] Hosting environment: Development
2022-08-11 21:27:59.420 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:03.356 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:47:03.738 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:47:03.740 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:47:03.745 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:47:03.746 +03:00 [INF] Hosting environment: Development
2022-08-11 21:47:03.746 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:25.243 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-11 21:47:25.587 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-11 21:47:25.589 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-11 21:47:25.595 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-11 21:47:25.596 +03:00 [INF] Hosting environment: Development
2022-08-11 21:47:25.598 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-11 21:47:29.123 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-11 21:47:29.204 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:47:29.212 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:47:29.217 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:47:29.228 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 109.7288ms
2022-08-11 21:47:29.234 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-11 21:47:29.242 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:47:29.248 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:47:29.282 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-11 21:47:29.320 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-11 21:47:29.374 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-11 21:47:31.359 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:47:31.935 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-11 21:47:32.694 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-11 21:47:32.986 +03:00 [INF] Executed DbCommand (100ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-11 21:47:33.052 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-11 21:47:33.065 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:47:33.077 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3748.5442ms
2022-08-11 21:47:33.080 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-11 21:47:33.084 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjAyNDM2NTIsImV4cCI6MTY2MDI0NDU1MiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.znb81mtuXtnQbUB-L8SRRqkK3lVBUwgvigQf4_h_Z74","expiration":"2022-08-11T19:02:32.3972794Z","refreshToken":"fus+MGvXaBDWMJsK6/hJaOFDAkH9yA0OkgXQ7e+e5ds="}}
2022-08-11 21:47:33.101 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3867.2313ms
2022-08-11 21:48:05.058 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-11 21:48:05.061 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:05.067 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:05.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:48:05.071 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 13.1146ms
2022-08-11 21:48:05.081 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-11 21:48:05.096 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:05.100 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:05.361 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-11 21:48:05.370 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-11 21:48:05.393 +03:00 [INF] Get All Products
2022-08-11 21:48:05.439 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:48:05.601 +03:00 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-11 21:48:05.619 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-11 21:48:05.623 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-11 21:48:05.663 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-11 21:48:05.680 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-11 21:48:05.697 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:48:05.699 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 325.7677ms
2022-08-11 21:48:05.702 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-11 21:48:05.705 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-11 21:48:05.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 627.1376ms
2022-08-11 21:48:10.357 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-11 21:48:10.360 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:10.364 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:10.366 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-11 21:48:10.369 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 12.9446ms
2022-08-11 21:48:10.374 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-11 21:48:10.380 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-11 21:48:10.385 +03:00 [INF] CORS policy execution successful.
2022-08-11 21:48:10.389 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-11 21:48:10.400 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-11 21:48:10.420 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-11 21:48:10.842 +03:00 [INF] Executed DbCommand (176ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-11 21:48:10.939 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-11 21:48:10.943 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-11 21:48:10.945 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 541.8602ms
2022-08-11 21:48:10.947 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-11 21:48:10.950 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-11 21:48:10.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 580.1819ms
2022-08-13 10:36:31.356 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-13 10:36:32.191 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-13 10:36:32.192 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-13 10:36:32.199 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-13 10:36:32.200 +03:00 [INF] Hosting environment: Development
2022-08-13 10:36:32.201 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-13 10:37:43.525 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/users/login text/plain 62
2022-08-13 10:37:43.624 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /users/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 62
Postman-Token: [Redacted]
2022-08-13 10:37:43.683 +03:00 [INF] RequestBody: 
2022-08-13 10:37:43.686 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:37:43.740 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/users/login text/plain 62 - 404 0 - 221.3921ms
2022-08-13 10:37:59.551 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/users/login text/plain 59
2022-08-13 10:37:59.555 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /users/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:37:59.568 +03:00 [INF] RequestBody: 
2022-08-13 10:37:59.571 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:37:59.573 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/users/login text/plain 59 - 404 0 - 21.9492ms
2022-08-13 10:38:33.660 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:33.662 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:33.667 +03:00 [INF] RequestBody: 
2022-08-13 10:38:33.668 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:33.670 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 9.9024ms
2022-08-13 10:38:41.221 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:41.222 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:41.225 +03:00 [INF] RequestBody: 
2022-08-13 10:38:41.229 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:41.232 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 10.5720ms
2022-08-13 10:38:43.319 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:43.322 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:43.329 +03:00 [INF] RequestBody: 
2022-08-13 10:38:43.338 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:43.341 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 22.1181ms
2022-08-13 10:38:58.727 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59
2022-08-13 10:38:58.729 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 59
Postman-Token: [Redacted]
2022-08-13 10:38:58.731 +03:00 [INF] RequestBody: 
2022-08-13 10:38:58.732 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:38:58.735 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 59 - 404 0 - 7.5627ms
2022-08-13 10:44:27.807 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7122/auth/login text/plain 136
2022-08-13 10:44:27.814 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: POST
Scheme: https
PathBase: 
Path: /auth/login
Accept: */*
Connection: keep-alive
Host: localhost:7122
User-Agent: PostmanRuntime/7.29.0
Accept-Encoding: gzip, deflate, br
Content-Type: text/plain
Content-Length: 136
Postman-Token: [Redacted]
2022-08-13 10:44:27.818 +03:00 [INF] RequestBody: 
2022-08-13 10:44:27.819 +03:00 [INF] Response:
StatusCode: 404
2022-08-13 10:44:27.820 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7122/auth/login text/plain 136 - 404 0 - 12.7315ms
2022-08-24 21:41:43.011 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-24 21:41:44.219 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-24 21:41:44.221 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-24 21:41:44.226 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-24 21:41:44.227 +03:00 [INF] Hosting environment: Development
2022-08-24 21:41:44.228 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-24 21:42:44.350 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-24 21:42:44.464 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:44.470 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:44.472 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:44.483 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 139.1170ms
2022-08-24 21:42:44.486 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-24 21:42:44.494 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:44.496 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:44.527 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:42:44.580 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-24 21:42:44.635 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-24 21:42:46.806 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:42:47.556 +03:00 [INF] Executed DbCommand (130ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:42:48.417 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:42:48.643 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-24 21:42:48.714 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-24 21:42:48.738 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:42:48.749 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4161.2164ms
2022-08-24 21:42:48.752 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:42:48.755 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjEzNjY1NjgsImV4cCI6MTY2MTM2NzQ2OCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.bI8XqiShpdiC5G2qJx7zX202rQHYfc1gdhmVslFEfmg","expiration":"2022-08-24T18:57:48.0781386Z","refreshToken":"RqKCHXdn8Q1FJqTZCizKNV1nqIgFATDrkjYXgXcBa2E="}}
2022-08-24 21:42:48.774 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4287.6962ms
2022-08-24 21:42:52.597 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:52.597 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:52.600 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:52.600 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:52.604 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:52.605 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:52.607 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:52.608 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:52.610 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.1433ms
2022-08-24 21:42:52.611 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.4786ms
2022-08-24 21:42:54.636 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:54.638 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:54.638 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:54.641 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:54.645 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:54.646 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:54.648 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:54.649 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:54.651 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.3936ms
2022-08-24 21:42:54.652 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.9623ms
2022-08-24 21:42:56.663 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:56.665 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:56.666 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:56.669 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:56.670 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:56.672 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:56.674 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:56.675 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:56.676 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 12.2058ms
2022-08-24 21:42:56.677 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.5462ms
2022-08-24 21:42:58.691 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:58.692 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:42:58.693 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:58.694 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:42:58.696 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:58.697 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:42:58.698 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:58.699 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:42:58.700 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.8456ms
2022-08-24 21:42:58.701 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.9474ms
2022-08-24 21:43:00.715 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:00.717 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:00.718 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:00.720 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:00.722 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:00.722 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:00.724 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:00.725 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.3583ms
2022-08-24 21:43:00.726 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:00.730 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.7890ms
2022-08-24 21:43:02.831 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:02.833 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:02.839 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:02.842 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:02.843 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.9782ms
2022-08-24 21:43:02.852 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:02.854 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:02.860 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:02.861 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:02.862 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.6692ms
2022-08-24 21:43:05.833 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:05.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:05.835 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:05.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:05.842 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:05.846 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:05.848 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:05.852 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:05.857 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 22.0688ms
2022-08-24 21:43:05.854 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 21.0407ms
2022-08-24 21:43:08.839 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:08.840 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:08.847 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:08.849 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:08.853 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 14.3677ms
2022-08-24 21:43:08.858 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:08.859 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:08.865 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:08.866 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:08.868 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 10.6807ms
2022-08-24 21:43:11.824 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:11.825 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:11.826 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:11.827 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:11.829 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:11.831 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:11.832 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:11.833 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:11.834 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.7645ms
2022-08-24 21:43:11.835 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 10.4681ms
2022-08-24 21:43:14.830 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:14.832 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:14.835 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:14.837 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:14.839 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.9989ms
2022-08-24 21:43:14.850 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:14.853 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:14.858 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:14.860 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:14.862 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 11.9103ms
2022-08-24 21:43:17.833 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:17.835 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:17.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:17.839 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:17.843 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:17.849 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:17.850 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:17.851 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:17.852 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.8822ms
2022-08-24 21:43:17.853 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.1026ms
2022-08-24 21:43:20.822 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:20.823 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:20.825 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:20.827 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:20.830 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:20.835 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:20.836 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:20.838 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:20.840 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 18.0838ms
2022-08-24 21:43:20.843 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 19.5775ms
2022-08-24 21:43:55.078 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-24 21:43:55.522 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-24 21:43:55.524 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-24 21:43:55.528 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-24 21:43:55.529 +03:00 [INF] Hosting environment: Development
2022-08-24 21:43:55.530 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-24 21:43:55.669 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:55.669 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:43:55.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.748 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.748 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.752 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:55.752 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:43:55.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 97.0799ms
2022-08-24 21:43:55.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 97.0849ms
2022-08-24 21:43:55.776 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:43:55.776 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:43:55.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:43:55.788 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.790 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.814 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.814 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.843 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:43:55.843 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:43:55.850 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.850 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:43:55.859 +03:00 [INF] RequestBody: 
2022-08-24 21:43:55.860 +03:00 [INF] RequestBody: 
2022-08-24 21:43:55.869 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"MVeWWC_FkWLg2OZYJplR5Q","connectionToken":"OVnbedpV34WmeTRmMqXwyQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:43:55.869 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"k_uPm1LZcFGIpXuhs0zVRg","connectionToken":"-pEqnhOm1jhH-6pCokbK-w","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:43:55.880 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 103.6230ms
2022-08-24 21:43:55.891 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 114.9754ms
2022-08-24 21:43:55.912 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=OVnbedpV34WmeTRmMqXwyQ - -
2022-08-24 21:43:55.936 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:43:55.937 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.940 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:43:55.973 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=-pEqnhOm1jhH-6pCokbK-w - -
2022-08-24 21:43:55.974 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:43:55.976 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:43:55.977 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:44:11.952 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-24 21:44:11.954 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:11.957 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:11.957 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:44:11.962 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 10.0785ms
2022-08-24 21:44:11.969 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-24 21:44:11.973 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:11.976 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:11.977 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:44:12.015 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-24 21:44:12.035 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-24 21:44:13.896 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:44:14.596 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:44:15.003 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-24 21:44:15.176 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-24 21:44:15.249 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-24 21:44:15.264 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:44:15.271 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3244.347ms
2022-08-24 21:44:15.273 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-24 21:44:15.277 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjEzNjY2NTQsImV4cCI6MTY2MTM2NzU1NCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.E3CW6-9Ht3NFrbTJYPk9UBRym9f-TuBknri3i-X5fyc","expiration":"2022-08-24T18:59:14.8290054Z","refreshToken":"tzZHPJSHIksyCassX/jleWD3d3XqzMPWEhFe9VEnHok="}}
2022-08-24 21:44:15.297 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3327.5573ms
2022-08-24 21:44:19.492 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:44:19.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:19.495 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:19.496 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:44:19.497 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.9746ms
2022-08-24 21:44:19.500 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:44:19.501 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:44:19.502 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:44:19.772 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:44:19.783 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:44:19.800 +03:00 [INF] Get All Products
2022-08-24 21:44:19.852 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:44:19.942 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:44:19.968 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:44:19.972 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:44:20.005 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:44:20.020 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:44:20.035 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:44:20.037 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 250.191ms
2022-08-24 21:44:20.040 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:44:20.042 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:44:20.048 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 548.4134ms
2022-08-24 21:46:18.223 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:46:18.223 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:46:18.236 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:43:55 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:46:18.231 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:43:55 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:46:18.241 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=-pEqnhOm1jhH-6pCokbK-w - - - 101 - - 142268.2074ms
2022-08-24 21:46:18.243 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=OVnbedpV34WmeTRmMqXwyQ - - - 101 - - 142330.8003ms
2022-08-24 21:46:19.389 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:19.390 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:19.392 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:19.392 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:46:19.393 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.3891ms
2022-08-24 21:46:19.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:19.397 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:19.400 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:19.403 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:19.405 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:46:19.410 +03:00 [INF] Get All Products
2022-08-24 21:46:19.424 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:46:19.429 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:46:19.434 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:46:19.437 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:46:19.438 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:46:19.439 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 31.7191ms
2022-08-24 21:46:19.440 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:19.441 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:46:19.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 46.8910ms
2022-08-24 21:46:54.016 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:54.018 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:54.019 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:54.020 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:46:54.021 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.1725ms
2022-08-24 21:46:54.031 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:46:54.032 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:46:54.034 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:46:54.038 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:54.039 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:46:54.046 +03:00 [INF] Get All Products
2022-08-24 21:46:54.048 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:46:54.055 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:46:54.060 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:46:54.064 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:46:54.067 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:46:54.068 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.2178ms
2022-08-24 21:46:54.070 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:46:54.071 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:46:54.075 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 43.9461ms
2022-08-24 21:47:27.767 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:27.775 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:27.777 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:27.778 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:27.779 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 12.8237ms
2022-08-24 21:47:27.783 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:27.784 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:27.787 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:27.788 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:27.789 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:47:27.791 +03:00 [INF] Get All Products
2022-08-24 21:47:27.793 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:47:27.795 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:47:27.798 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:47:27.800 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:47:27.802 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:47:27.803 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.8437ms
2022-08-24 21:47:27.804 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:27.805 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:47:27.808 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 25.3670ms
2022-08-24 21:47:30.388 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:47:30.390 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:30.394 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.396 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:30.398 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.0456ms
2022-08-24 21:47:30.402 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:47:30.404 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:30.407 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.408 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:47:30.411 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:47:30.413 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:47:30.415 +03:00 [INF] RequestBody: 
2022-08-24 21:47:30.416 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"IETguZrsrPL1_8W3hlCXlQ","connectionToken":"dJccAi9d5uN39bbfsThQSA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:47:30.420 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 18.2648ms
2022-08-24 21:47:30.434 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=dJccAi9d5uN39bbfsThQSA - -
2022-08-24 21:47:30.435 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:47:30.436 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:30.437 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:47:33.560 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:33.561 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:33.567 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:33.568 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:47:33.569 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.2628ms
2022-08-24 21:47:33.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:47:33.575 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:47:33.576 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:47:33.577 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:33.578 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:47:33.581 +03:00 [INF] Get All Products
2022-08-24 21:47:33.582 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:47:33.586 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:47:33.588 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:47:33.590 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:47:33.592 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:47:33.593 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.567ms
2022-08-24 21:47:33.594 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:47:33.595 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:47:33.597 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 23.3198ms
2022-08-24 21:51:05.488 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:51:05.491 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:47:30 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:51:05.492 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=dJccAi9d5uN39bbfsThQSA - - - 101 - - 215058.1692ms
2022-08-24 21:51:06.286 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:06.288 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:06.293 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:06.295 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:51:06.297 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 11.6845ms
2022-08-24 21:51:06.303 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:06.304 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:06.310 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:06.312 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:06.313 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:51:06.316 +03:00 [INF] Get All Products
2022-08-24 21:51:06.318 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:51:06.394 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:51:06.399 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:51:06.404 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:51:06.407 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:51:06.408 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 93.0086ms
2022-08-24 21:51:06.410 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:06.412 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:51:06.415 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 112.7390ms
2022-08-24 21:51:51.814 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:51.817 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:51.821 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:51.824 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:51:51.827 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 12.4482ms
2022-08-24 21:51:51.835 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:51:51.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:51:51.841 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:51:51.842 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:51.843 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:51:51.846 +03:00 [INF] Get All Products
2022-08-24 21:51:51.847 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:51:51.850 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:51:51.854 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:51:51.857 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:51:51.859 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:51:51.862 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3803ms
2022-08-24 21:51:51.866 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:51:51.867 +03:00 [INF] ResponseBody: {"totalCount":15,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:51:51.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 34.3203ms
2022-08-24 21:52:19.971 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-08-24 21:52:19.973 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:19.975 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:19.975 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:19.977 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 6.0917ms
2022-08-24 21:52:19.986 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 41
2022-08-24 21:52:19.988 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 41
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:19.990 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:19.992 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:52:19.996 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:20.000 +03:00 [INF] RequestBody: {"name":"ÜrüntSt","stock":3,"price":25}
2022-08-24 21:52:20.013 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:20.187 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-24 21:52:20.199 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-08-24 21:52:20.200 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 202.1296ms
2022-08-24 21:52:20.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:52:20.204 +03:00 [INF] Response:
StatusCode: 201
2022-08-24 21:52:20.206 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 41 - 201 0 - 220.5500ms
2022-08-24 21:52:20.221 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:20.223 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:20.226 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:20.227 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:20.229 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.8267ms
2022-08-24 21:52:20.233 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:20.235 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:20.238 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:20.239 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:20.241 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:20.245 +03:00 [INF] Get All Products
2022-08-24 21:52:20.246 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:20.248 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:20.251 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:20.254 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:20.256 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:20.258 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.2753ms
2022-08-24 21:52:20.260 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:20.261 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:20.263 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 30.1086ms
2022-08-24 21:52:23.033 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:23.035 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.037 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.040 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:23.044 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 10.3824ms
2022-08-24 21:52:23.049 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:23.051 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.055 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.057 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.059 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:23.065 +03:00 [INF] Get All Products
2022-08-24 21:52:23.066 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:23.073 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:23.078 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:52:23.080 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-24 21:52:23.085 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-24 21:52:23.089 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:23.091 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:23.092 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 28.4022ms
2022-08-24 21:52:23.094 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.095 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:23.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 48.6980ms
2022-08-24 21:52:23.608 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:23.610 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.613 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.616 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:23.620 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 12.2639ms
2022-08-24 21:52:23.624 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:23.626 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:23.629 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:23.631 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.634 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:23.638 +03:00 [INF] Get All Products
2022-08-24 21:52:23.639 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:23.642 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:23.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:23.649 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:23.650 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:23.652 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.8221ms
2022-08-24 21:52:23.653 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:23.655 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:23.659 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 35.0071ms
2022-08-24 21:52:24.328 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:24.330 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:24.334 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:24.337 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:24.341 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 12.9132ms
2022-08-24 21:52:24.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:24.347 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:24.351 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:24.353 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:24.355 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:24.357 +03:00 [INF] Get All Products
2022-08-24 21:52:24.358 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:24.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:24.364 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:24.367 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:24.369 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:24.371 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.3162ms
2022-08-24 21:52:24.372 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:24.373 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:24.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 29.4068ms
2022-08-24 21:52:33.179 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:33.182 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:33.184 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:33.185 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:33.187 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.5311ms
2022-08-24 21:52:33.192 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:52:33.194 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:33.197 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:33.199 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:33.200 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:33.204 +03:00 [INF] Get All Products
2022-08-24 21:52:33.206 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:33.210 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:33.213 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:33.216 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:33.218 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:33.219 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8774ms
2022-08-24 21:52:33.220 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:33.223 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:33.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 34.4209ms
2022-08-24 21:52:35.648 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:35.651 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:35.653 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:35.655 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:35.656 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 8.4288ms
2022-08-24 21:52:35.663 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-24 21:52:35.664 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:35.667 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:35.669 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:35.673 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:35.677 +03:00 [INF] Get All Products
2022-08-24 21:52:35.680 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:35.686 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:35.692 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-24 21:52:35.697 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:35.700 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:35.702 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.9661ms
2022-08-24 21:52:35.704 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:35.706 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:35.708 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 46.4623ms
2022-08-24 21:52:36.259 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:36.260 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:36.264 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:36.265 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:36.266 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 7.5126ms
2022-08-24 21:52:36.271 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-24 21:52:36.274 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:36.276 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:36.277 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:36.279 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:36.282 +03:00 [INF] Get All Products
2022-08-24 21:52:36.283 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:36.287 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:36.290 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:36.294 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:36.298 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:36.300 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.5877ms
2022-08-24 21:52:36.302 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:36.303 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:36.307 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 35.3538ms
2022-08-24 21:52:37.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:37.159 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:37.165 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:37.168 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:52:37.173 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 15.8128ms
2022-08-24 21:52:37.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-24 21:52:37.180 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:52:37.186 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:52:37.189 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:37.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:52:37.194 +03:00 [INF] Get All Products
2022-08-24 21:52:37.196 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:52:37.199 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:52:37.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:52:37.205 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:52:37.206 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:52:37.207 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.8882ms
2022-08-24 21:52:37.208 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:52:37.209 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:52:37.210 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 32.1682ms
2022-08-24 21:53:36.733 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-24 21:53:36.740 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:36.743 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.744 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:36.747 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 13.0439ms
2022-08-24 21:53:36.756 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:53:36.758 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:36.762 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.764 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:53:36.766 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:53:36.767 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:53:36.769 +03:00 [INF] RequestBody: 
2022-08-24 21:53:36.775 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"e_44rBFMnfwl_t8nvwLnLw","connectionToken":"0--94H5I5GdYh5I0pWelKg","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:53:36.784 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 27.6195ms
2022-08-24 21:53:36.798 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=0--94H5I5GdYh5I0pWelKg - -
2022-08-24 21:53:36.799 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:53:36.803 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:36.805 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:53:38.480 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-24 21:53:38.481 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:38.485 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:38.486 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-24 21:53:38.488 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-24 21:53:38.490 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-24 21:53:38.494 +03:00 [INF] RequestBody: 
2022-08-24 21:53:38.496 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"YxqRHM6JfHKiF2MJ4LbeXw","connectionToken":"94pPs0g3Y5OsodrM4NjvTQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-24 21:53:38.497 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 17.7608ms
2022-08-24 21:53:38.508 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=94pPs0g3Y5OsodrM4NjvTQ - -
2022-08-24 21:53:38.509 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-24 21:53:38.510 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:38.511 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-24 21:53:42.236 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:42.237 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:42.241 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:42.243 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:42.245 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.3277ms
2022-08-24 21:53:42.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:42.250 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:42.251 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:42.252 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:42.253 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:42.256 +03:00 [INF] Get All Products
2022-08-24 21:53:42.257 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:42.260 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:42.262 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:42.264 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:42.266 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:42.267 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.2558ms
2022-08-24 21:53:42.269 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:42.270 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:42.272 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 22.5839ms
2022-08-24 21:53:44.288 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:44.290 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:44.292 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:44.294 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:44.296 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:44.300 +03:00 [INF] Get All Products
2022-08-24 21:53:44.302 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:44.307 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:44.309 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:44.311 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:44.313 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:44.314 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.6637ms
2022-08-24 21:53:44.315 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:44.317 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:44.319 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 31.1894ms
2022-08-24 21:53:54.110 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products - -
2022-08-24 21:53:54.111 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.114 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.115 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:54.118 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products - - - 204 - - 7.5964ms
2022-08-24 21:53:54.123 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products application/json 39
2022-08-24 21:53:54.125 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 39
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.128 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.130 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:53:54.131 +03:00 [INF] Route matched with {action = "Post", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(eTrade.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:54.134 +03:00 [INF] RequestBody: {"name":"sdaass","stock":1,"price":112}
2022-08-24 21:53:54.136 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:54.140 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Single), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "CreatedDate", "Name", "Price", "Stock", "UpdatedDate")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-24 21:53:54.146 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2022-08-24 21:53:54.147 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API) in 13.1784ms
2022-08-24 21:53:54.148 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Post (eTradeAPI.API)'
2022-08-24 21:53:54.149 +03:00 [INF] Response:
StatusCode: 201
2022-08-24 21:53:54.150 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products application/json 39 - 201 0 - 27.7738ms
2022-08-24 21:53:54.171 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:54.172 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.175 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.177 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-24 21:53:54.179 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 8.5583ms
2022-08-24 21:53:54.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-24 21:53:54.186 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-24 21:53:54.189 +03:00 [INF] CORS policy execution successful.
2022-08-24 21:53:54.190 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:54.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-24 21:53:54.194 +03:00 [INF] Get All Products
2022-08-24 21:53:54.195 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-24 21:53:54.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-24 21:53:54.200 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-24 21:53:54.204 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-24 21:53:54.206 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-24 21:53:54.207 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.6041ms
2022-08-24 21:53:54.208 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-24 21:53:54.210 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-24 21:53:54.213 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 29.0763ms
2022-08-24 21:53:57.967 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:53:57.977 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:53:36 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:53:57.989 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=0--94H5I5GdYh5I0pWelKg - - - 101 - - 21190.7342ms
2022-08-24 21:53:59.345 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-24 21:53:59.348 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Wed, 24 Aug 2022 18:53:38 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-24 21:53:59.362 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=94pPs0g3Y5OsodrM4NjvTQ - - - 101 - - 20854.7477ms
2022-08-29 14:36:21.052 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 14:36:22.118 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 14:36:22.120 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 14:36:22.128 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 14:36:22.129 +03:00 [INF] Hosting environment: Development
2022-08-29 14:36:22.130 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 14:37:09.057 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 14:37:09.162 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:09.167 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:09.174 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:09.190 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 138.4442ms
2022-08-29 14:37:09.197 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 14:37:09.214 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:09.221 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:09.286 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 14:37:09.328 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 14:37:09.389 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 14:37:11.808 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:37:12.901 +03:00 [INF] Executed DbCommand (456ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 14:37:13.797 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 14:37:14.005 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 14:37:14.086 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 14:37:14.101 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:37:14.119 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4782.0876ms
2022-08-29 14:37:14.123 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 14:37:14.127 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3NzMwMzMsImV4cCI6MTY2MTc3MzkzMywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.famu6I_94sDznCpQo8nKGAK0IuGZ6UfjWKD3wKDrfj4","expiration":"2022-08-29T11:52:13.4305814Z","refreshToken":"H2izJrVpZ3l2/CiF6NdxPwYMHVCpDrgVXwspa/N2WVE="}}
2022-08-29 14:37:14.160 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4962.4833ms
2022-08-29 14:37:17.062 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-29 14:37:17.064 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:17.067 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:17.070 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 7.8990ms
2022-08-29 14:37:17.099 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-29 14:37:17.101 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:17.102 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.103 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-29 14:37:17.120 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-29 14:37:17.127 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-29 14:37:17.129 +03:00 [INF] RequestBody: 
2022-08-29 14:37:17.130 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"LKXJfwawtECPNzXK5EdN4A","connectionToken":"aAS-dGbqjiLjeJIMsnbIzw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-29 14:37:17.132 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 32.8692ms
2022-08-29 14:37:17.162 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=aAS-dGbqjiLjeJIMsnbIzw - -
2022-08-29 14:37:17.174 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-29 14:37:17.176 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:17.178 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-29 14:37:37.993 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:37:37.995 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:37.997 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:37.998 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:37:37.999 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.5526ms
2022-08-29 14:37:38.004 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:37:38.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:37:38.013 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:37:38.349 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:37:38.365 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:37:38.398 +03:00 [INF] Get All Products
2022-08-29 14:37:38.479 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:37:38.707 +03:00 [INF] Executed DbCommand (141ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:37:38.736 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:37:38.747 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:37:38.777 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:37:38.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:37:38.812 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:37:38.817 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 443.0183ms
2022-08-29 14:37:38.818 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:37:38.822 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:37:38.826 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 821.7841ms
2022-08-29 14:38:03.325 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:03.328 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:03.333 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:03.335 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:03.336 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 11.2171ms
2022-08-29 14:38:03.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:03.349 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:03.353 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:03.356 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:03.358 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:03.362 +03:00 [INF] Get All Products
2022-08-29 14:38:03.375 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:03.379 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:03.384 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:03.395 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:03.396 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:03.399 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 39.1823ms
2022-08-29 14:38:03.401 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:03.411 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:03.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 76.3759ms
2022-08-29 14:38:05.894 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-29 14:38:05.897 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:05.900 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:05.901 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:05.902 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.8080ms
2022-08-29 14:38:05.907 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-29 14:38:05.918 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:05.923 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:05.926 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-29 14:38:05.930 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:05.941 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:06.452 +03:00 [INF] Executed DbCommand (161ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-29 14:38:06.617 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-29 14:38:06.620 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:06.622 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 688.108ms
2022-08-29 14:38:06.624 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-29 14:38:06.627 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-29 14:38:06.628 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 721.0870ms
2022-08-29 14:38:15.804 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:15.806 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:15.813 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:15.816 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:15.820 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 15.5270ms
2022-08-29 14:38:15.828 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:15.837 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:15.840 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:15.843 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:15.847 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:15.856 +03:00 [INF] Get All Products
2022-08-29 14:38:15.858 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:15.868 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:15.873 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:38:15.886 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:38:15.895 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-29 14:38:15.900 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:15.902 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:15.916 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 64.1099ms
2022-08-29 14:38:15.923 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:15.925 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:15.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 102.5770ms
2022-08-29 14:38:16.958 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:16.961 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:16.968 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:16.983 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:16.988 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 30.7652ms
2022-08-29 14:38:16.995 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:16.997 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:16.999 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:17.021 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:17.025 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:17.031 +03:00 [INF] Get All Products
2022-08-29 14:38:17.034 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:17.042 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:17.048 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:17.058 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:17.060 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:17.064 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 33.1197ms
2022-08-29 14:38:17.075 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:17.078 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:17.104 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 109.6191ms
2022-08-29 14:38:19.247 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:19.249 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:19.257 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:19.258 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:19.262 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 16.6180ms
2022-08-29 14:38:19.268 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:19.268 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:19.280 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:19.282 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:19.283 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:19.290 +03:00 [INF] Get All Products
2022-08-29 14:38:19.293 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:19.297 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:19.306 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:19.312 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:19.314 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:19.324 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 34.4807ms
2022-08-29 14:38:19.326 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:19.328 +03:00 [INF] ResponseBody: {"totalCount":17,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ed0b79e4-889b-4b7b-835e-210870bdfb46","name":"sdaass","stock":1,"price":112,"createdDate":"2022-08-24T18:53:54.138928Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:19.330 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 62.0731ms
2022-08-29 14:38:34.187 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - -
2022-08-29 14:38:34.191 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:34.196 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:34.198 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:34.208 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - - - 204 - - 21.1027ms
2022-08-29 14:38:34.214 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - -
2022-08-29 14:38:34.215 +03:00 [INF] Request:
Protocol: HTTP/2
Method: DELETE
Scheme: https
PathBase: 
Path: /api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:34.228 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:34.231 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API)'
2022-08-29 14:38:34.247 +03:00 [INF] Route matched with {action = "Delete", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(eTrade.Application.Features.Commands.Product.RemoveProduct.RemoveProductCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:34.260 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:34.273 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-29 14:38:34.513 +03:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Products"
WHERE "Id" = @p0;
2022-08-29 14:38:34.538 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-29 14:38:34.540 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API) in 287.3156ms
2022-08-29 14:38:34.548 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Delete (eTradeAPI.API)'
2022-08-29 14:38:34.553 +03:00 [INF] Response:
StatusCode: 200
2022-08-29 14:38:34.562 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7122/api/products/ed0b79e4-889b-4b7b-835e-210870bdfb46 - - - 200 0 - 347.7719ms
2022-08-29 14:38:35.295 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:35.297 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:35.300 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:35.304 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:35.307 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=5 - - - 204 - - 12.0981ms
2022-08-29 14:38:35.320 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - -
2022-08-29 14:38:35.327 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:35.331 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:35.333 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:35.335 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:35.339 +03:00 [INF] Get All Products
2022-08-29 14:38:35.341 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:35.343 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:35.348 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:35.363 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:35.367 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:35.370 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.066ms
2022-08-29 14:38:35.374 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:35.377 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:35.382 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=5 - - - 200 - application/json;+charset=utf-8 62.3950ms
2022-08-29 14:38:49.820 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:49.821 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:49.826 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:49.828 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:49.830 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=5 - - - 204 - - 10.1577ms
2022-08-29 14:38:49.839 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - -
2022-08-29 14:38:49.842 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:49.847 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:49.850 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:49.852 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:49.859 +03:00 [INF] Get All Products
2022-08-29 14:38:49.860 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:49.862 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:49.879 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:49.885 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:49.888 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:49.890 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.2068ms
2022-08-29 14:38:49.893 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:49.902 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:49.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=5 - - - 200 - application/json;+charset=utf-8 66.4855ms
2022-08-29 14:38:51.307 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:51.310 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:51.324 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:51.326 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:51.338 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=5 - - - 204 - - 31.1734ms
2022-08-29 14:38:51.353 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - -
2022-08-29 14:38:51.356 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:51.371 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:51.381 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:51.386 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:51.395 +03:00 [INF] Get All Products
2022-08-29 14:38:51.398 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:51.401 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:51.407 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-29 14:38:51.420 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:51.422 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:51.427 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 34.2399ms
2022-08-29 14:38:51.431 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:51.433 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:51.448 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=5 - - - 200 - application/json;+charset=utf-8 95.3734ms
2022-08-29 14:38:55.567 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:55.568 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:55.578 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:55.580 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:38:55.583 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 16.4106ms
2022-08-29 14:38:55.591 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:38:55.595 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:38:55.598 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:38:55.600 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:55.613 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:38:55.625 +03:00 [INF] Get All Products
2022-08-29 14:38:55.628 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:38:55.642 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:38:55.648 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:38:55.656 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:38:55.659 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:38:55.664 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 40.4144ms
2022-08-29 14:38:55.673 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:38:55.674 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:38:55.685 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 93.1076ms
2022-08-29 14:43:09.252 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 14:43:09.911 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 14:43:09.914 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 14:43:09.919 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 14:43:09.920 +03:00 [INF] Hosting environment: Development
2022-08-29 14:43:09.921 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 14:44:06.436 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:44:06.580 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:44:06.590 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:44:06.596 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:44:06.611 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 181.6581ms
2022-08-29 14:44:06.620 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:44:06.630 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:44:06.632 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:44:06.996 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:44:07.047 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:44:07.398 +03:00 [INF] Get All Products
2022-08-29 14:44:08.862 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:44:09.315 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:44:09.377 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:44:09.380 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 14:44:09.442 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:44:09.467 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:44:09.492 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:44:09.506 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2446.7132ms
2022-08-29 14:44:09.510 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:44:09.514 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:44:09.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 2915.6968ms
2022-08-29 14:47:23.740 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:47:23.751 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:47:23.753 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:47:23.754 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 14:47:23.755 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 14.9492ms
2022-08-29 14:47:23.760 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 14:47:23.761 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 14:47:23.763 +03:00 [INF] CORS policy execution successful.
2022-08-29 14:47:23.769 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:47:23.770 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 14:47:23.773 +03:00 [INF] Get All Products
2022-08-29 14:47:23.828 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 14:47:23.835 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 14:47:23.842 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 14:47:23.846 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 14:47:23.848 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 14:47:23.850 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 78.0129ms
2022-08-29 14:47:23.852 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 14:47:23.854 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 14:47:23.856 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 95.7108ms
2022-08-29 18:02:15.594 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 18:02:15.598 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:15.603 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:15.606 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:02:15.609 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 15.7682ms
2022-08-29 18:02:15.625 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 18:02:15.633 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:15.641 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:15.647 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:02:15.666 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 18:02:15.699 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 18:02:15.748 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:02:16.093 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:02:16.422 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:02:16.689 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 18:02:16.774 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 18:02:16.780 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:02:16.785 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1114.8288ms
2022-08-29 18:02:16.790 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:02:16.796 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3ODUzMzYsImV4cCI6MTY2MTc4NjIzNiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.s--kFLPm7c_xpKBfMgARH9fftIrAafi8j993l6wfwEs","expiration":"2022-08-29T15:17:16.3799819Z","refreshToken":"2+BUxVo1LPgu+qNrdhyu4g6xfy/s31wXzHb0/nZocpw="}}
2022-08-29 18:02:16.807 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 1181.5922ms
2022-08-29 18:02:16.954 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 18:02:16.956 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:16.959 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:16.959 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:02:16.961 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.9430ms
2022-08-29 18:02:16.973 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-29 18:02:16.974 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:02:16.976 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:02:16.981 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:02:16.984 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:02:16.990 +03:00 [INF] Get All Products
2022-08-29 18:02:16.992 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:02:16.996 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:02:17.000 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:02:17.003 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:02:17.005 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:02:17.006 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.2663ms
2022-08-29 18:02:17.008 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:02:17.009 +03:00 [INF] ResponseBody: {"totalCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:02:17.014 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 41.3456ms
2022-08-29 18:26:37.407 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-29 18:26:38.166 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-29 18:26:38.168 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-29 18:26:38.174 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-29 18:26:38.175 +03:00 [INF] Hosting environment: Development
2022-08-29 18:26:38.176 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-29 18:26:38.489 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:38.566 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.574 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.580 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:26:38.585 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-29 18:26:38.589 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.591 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.593 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:26:38.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 9.5673ms
2022-08-29 18:26:38.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 111.3439ms
2022-08-29 18:26:38.597 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:38.599 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-29 18:26:38.604 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.609 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.612 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:38.614 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:38.646 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:26:38.646 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:38.698 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-29 18:26:38.698 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:26:38.751 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-29 18:26:39.459 +03:00 [INF] Get All Products
2022-08-29 18:26:40.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:40.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:41.329 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:26:41.380 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 18:26:41.381 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-29 18:26:41.414 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:26:41.430 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:26:41.438 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:26:41.463 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:41.474 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2764.5461ms
2022-08-29 18:26:41.477 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:41.477 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:26:41.491 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 2894.8577ms
2022-08-29 18:26:42.160 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-29 18:26:42.309 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-29 18:26:42.370 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-29 18:26:42.374 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:42.376 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3674.4083ms
2022-08-29 18:26:42.379 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-29 18:26:42.383 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE3ODY4MDEsImV4cCI6MTY2MTc4NzcwMSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.1dWirX3NzELjVCkmCJy4tks5Q1OkxeIQtcOA_-8hstk","expiration":"2022-08-29T15:41:41.8391718Z","refreshToken":"GsD5rk2oa98J7yqCXLWaVTlEdN5KMj1ZuLF2FwalU+A="}}
2022-08-29 18:26:42.391 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3791.5938ms
2022-08-29 18:26:43.141 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:26:43.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:26:43.144 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:26:43.148 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:43.149 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:26:43.155 +03:00 [INF] Get All Products
2022-08-29 18:26:43.202 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:26:43.205 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:26:43.208 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:26:43.210 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:26:43.211 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:26:43.213 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 61.4094ms
2022-08-29 18:26:43.216 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:26:43.218 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:26:43.221 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 79.2245ms
2022-08-29 18:27:05.096 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:27:05.098 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:27:05.100 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:27:05.101 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:27:05.103 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.0690ms
2022-08-29 18:27:05.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:27:05.113 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:27:05.117 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:27:05.119 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:27:05.119 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:27:05.124 +03:00 [INF] Get All Products
2022-08-29 18:27:05.126 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:27:05.130 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:27:05.133 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:27:05.136 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:27:05.137 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:27:05.139 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.4189ms
2022-08-29 18:27:05.146 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:27:05.147 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:27:05.151 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.6351ms
2022-08-29 18:28:28.559 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:28:28.560 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:28:28.563 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:28:28.565 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:28:28.567 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3700ms
2022-08-29 18:28:28.575 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:28:28.578 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:28:28.580 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:28:28.583 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:28:28.584 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:28:28.588 +03:00 [INF] Get All Products
2022-08-29 18:28:28.590 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:28:28.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:28:28.598 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:28:28.605 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:28:28.606 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:28:28.609 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.544ms
2022-08-29 18:28:28.611 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:28:28.612 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:28:28.616 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 40.9543ms
2022-08-29 18:29:23.722 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:23.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:23.736 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:23.737 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:23.739 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.8135ms
2022-08-29 18:29:23.744 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:23.746 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:23.748 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:23.750 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:23.753 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:23.757 +03:00 [INF] Get All Products
2022-08-29 18:29:23.759 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:23.766 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:23.771 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:23.777 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:23.779 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:23.783 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.356ms
2022-08-29 18:29:23.791 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:23.793 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:23.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 55.0265ms
2022-08-29 18:29:34.447 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:34.455 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:34.457 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:34.458 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:34.460 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.1491ms
2022-08-29 18:29:34.468 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:34.474 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:34.477 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:34.479 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:34.482 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:34.487 +03:00 [INF] Get All Products
2022-08-29 18:29:34.489 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:34.492 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:34.495 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:34.498 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:34.500 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:34.501 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.726ms
2022-08-29 18:29:34.502 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:34.503 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:34.506 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.7046ms
2022-08-29 18:29:55.230 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:55.239 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:55.242 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:55.244 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:29:55.246 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.8880ms
2022-08-29 18:29:55.252 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:29:55.253 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:29:55.256 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:29:55.258 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:55.260 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:29:55.265 +03:00 [INF] Get All Products
2022-08-29 18:29:55.268 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:29:55.272 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:29:55.279 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:29:55.283 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:29:55.286 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:29:55.288 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.2574ms
2022-08-29 18:29:55.291 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:29:55.293 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:29:55.302 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 50.7044ms
2022-08-29 18:30:01.134 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:01.136 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:01.140 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:01.142 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:01.144 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.3205ms
2022-08-29 18:30:01.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:01.156 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:01.160 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:01.161 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:01.164 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:01.170 +03:00 [INF] Get All Products
2022-08-29 18:30:01.171 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:01.174 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:01.178 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:01.184 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:01.186 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:01.188 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.0867ms
2022-08-29 18:30:01.191 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:01.193 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:01.198 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.0412ms
2022-08-29 18:30:15.954 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:15.956 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:15.960 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:15.961 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:15.963 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0096ms
2022-08-29 18:30:15.967 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:15.969 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:15.972 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:15.973 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:15.976 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:15.981 +03:00 [INF] Get All Products
2022-08-29 18:30:15.983 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:15.987 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:15.992 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:15.997 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:15.999 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:16.002 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.6128ms
2022-08-29 18:30:16.004 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:16.007 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:16.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 48.1016ms
2022-08-29 18:30:30.534 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:30.536 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:30.542 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:30.543 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:30.546 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.5713ms
2022-08-29 18:30:30.559 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:30.562 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:30.567 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:30.575 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:30.579 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:30.586 +03:00 [INF] Get All Products
2022-08-29 18:30:30.588 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:30.593 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:30.597 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:30.601 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:30.603 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:30.604 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.0983ms
2022-08-29 18:30:30.605 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:30.606 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:30.610 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 50.3473ms
2022-08-29 18:30:53.958 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:53.960 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:53.963 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:53.964 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:30:53.966 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.6073ms
2022-08-29 18:30:53.976 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:30:53.977 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:30:53.980 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:30:53.982 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:53.985 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:30:53.990 +03:00 [INF] Get All Products
2022-08-29 18:30:53.992 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:30:53.996 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:30:54.000 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:30:54.003 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:30:54.005 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:30:54.007 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.7368ms
2022-08-29 18:30:54.009 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:30:54.011 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:30:54.015 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 39.4652ms
2022-08-29 18:31:04.522 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:31:04.535 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:31:04.538 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:31:04.540 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-29 18:31:04.542 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 19.7787ms
2022-08-29 18:31:04.549 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-29 18:31:04.551 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-29 18:31:04.554 +03:00 [INF] CORS policy execution successful.
2022-08-29 18:31:04.556 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:31:04.558 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-29 18:31:04.562 +03:00 [INF] Get All Products
2022-08-29 18:31:04.563 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-29 18:31:04.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-29 18:31:04.568 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-29 18:31:04.572 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-29 18:31:04.573 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-29 18:31:04.575 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.7054ms
2022-08-29 18:31:04.578 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-29 18:31:04.580 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-29 18:31:04.586 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.4102ms
2022-08-30 08:16:44.136 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 08:16:44.855 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 08:16:44.856 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 08:16:44.860 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 08:16:44.861 +03:00 [INF] Hosting environment: Development
2022-08-30 08:16:44.862 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 08:20:06.157 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:06.266 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:06.273 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:06.276 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:06.296 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 144.0305ms
2022-08-30 08:20:06.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:06.314 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:06.319 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:06.351 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:06.400 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:07.173 +03:00 [INF] Get All Products
2022-08-30 08:20:09.042 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:09.510 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:09.592 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:20:09.594 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:20:09.652 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:09.684 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:09.715 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:09.729 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 3316.8857ms
2022-08-30 08:20:09.731 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:09.737 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:09.753 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 3453.9471ms
2022-08-30 08:20:10.957 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 08:20:10.960 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:10.968 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:10.971 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:10.973 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 16.8539ms
2022-08-30 08:20:10.977 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 08:20:10.982 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:10.987 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:10.988 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:20:10.992 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 08:20:11.004 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 08:20:11.066 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:11.220 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:20:12.133 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:20:12.320 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 08:20:12.399 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 08:20:12.404 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:12.407 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 1412.3351ms
2022-08-30 08:20:12.411 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:20:12.415 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4MzY4MTEsImV4cCI6MTY2MTgzNzcxMSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.IkPAl9T_51Kt8lA9h_Z5Y8wUCRdk03VwnS4h0HMQHoE","expiration":"2022-08-30T05:35:11.7359885Z","refreshToken":"wQtkHIQDkurMaytNmm5PDSO0vOOL1cakem+xa5WNc94="}}
2022-08-30 08:20:12.425 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 1447.0485ms
2022-08-30 08:20:14.143 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:14.146 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:14.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:14.153 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:14.156 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.5112ms
2022-08-30 08:20:14.162 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:14.164 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:14.172 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:14.175 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:14.178 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:14.181 +03:00 [INF] Get All Products
2022-08-30 08:20:14.190 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:14.193 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:14.197 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:14.199 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:14.200 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:14.201 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.8912ms
2022-08-30 08:20:14.202 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:14.203 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:14.207 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.5509ms
2022-08-30 08:20:21.021 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:21.022 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:21.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:21.028 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:20:21.031 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0584ms
2022-08-30 08:20:21.055 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:20:21.056 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:20:21.062 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:20:21.064 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:21.066 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:20:21.078 +03:00 [INF] Get All Products
2022-08-30 08:20:21.080 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:20:21.084 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:20:21.088 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:20:21.096 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:20:21.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:20:21.100 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.4301ms
2022-08-30 08:20:21.101 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:20:21.102 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:20:21.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 52.0870ms
2022-08-30 08:21:12.045 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:21:12.049 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:21:12.051 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:21:12.053 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:21:12.058 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.0803ms
2022-08-30 08:21:12.070 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:21:12.071 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:21:12.079 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:21:12.087 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:21:12.089 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:21:12.092 +03:00 [INF] Get All Products
2022-08-30 08:21:12.094 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:21:12.100 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:21:12.105 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:21:12.109 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:21:12.113 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:21:12.119 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.9265ms
2022-08-30 08:21:12.121 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:21:12.122 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:21:12.126 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 56.0323ms
2022-08-30 08:22:42.572 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:22:42.602 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:22:42.611 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:22:42.620 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:22:42.625 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 52.9926ms
2022-08-30 08:22:42.629 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:22:42.631 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:22:42.633 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:22:42.637 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:22:42.640 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:22:42.655 +03:00 [INF] Get All Products
2022-08-30 08:22:42.671 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:22:42.691 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:22:42.695 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:22:42.703 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:22:42.706 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:22:42.707 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 53.4204ms
2022-08-30 08:22:42.709 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:22:42.719 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:22:42.726 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 97.0166ms
2022-08-30 08:23:42.486 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:23:42.496 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:23:42.499 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:23:42.505 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:23:42.508 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.1109ms
2022-08-30 08:23:42.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:23:42.518 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:23:42.519 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:23:42.520 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:23:42.524 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:23:42.528 +03:00 [INF] Get All Products
2022-08-30 08:23:42.530 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:23:42.534 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:23:42.536 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:23:42.540 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:23:42.541 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:23:42.542 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.8507ms
2022-08-30 08:23:42.543 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:23:42.544 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:23:42.548 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 31.7665ms
2022-08-30 08:24:26.084 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:24:26.099 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:26.104 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:26.105 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:24:26.106 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.5054ms
2022-08-30 08:24:26.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:24:26.115 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:26.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:26.119 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:26.120 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:24:26.124 +03:00 [INF] Get All Products
2022-08-30 08:24:26.127 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:24:26.131 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:24:26.134 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:24:26.137 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:24:26.138 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:24:26.139 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.9582ms
2022-08-30 08:24:26.142 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:26.144 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:24:26.147 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.6627ms
2022-08-30 08:24:50.832 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:24:50.838 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:50.842 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:50.844 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:24:50.846 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 13.9960ms
2022-08-30 08:24:50.854 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:24:50.856 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:24:50.861 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:24:50.862 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:50.867 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:24:50.872 +03:00 [INF] Get All Products
2022-08-30 08:24:50.874 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:24:50.878 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:24:50.883 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:24:50.888 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:24:50.889 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:24:50.890 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.0688ms
2022-08-30 08:24:50.892 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:24:50.897 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:24:50.899 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 45.1699ms
2022-08-30 08:26:34.327 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:34.334 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:34.338 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:34.339 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:34.345 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 18.9889ms
2022-08-30 08:26:34.351 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:34.352 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:34.354 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:34.354 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:34.355 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:34.361 +03:00 [INF] Get All Products
2022-08-30 08:26:34.362 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:34.365 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:34.367 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:26:34.370 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:34.373 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:34.375 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.541ms
2022-08-30 08:26:34.376 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:34.378 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:34.381 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.5188ms
2022-08-30 08:26:44.026 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:26:44.028 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:44.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:44.033 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:44.036 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.9649ms
2022-08-30 08:26:44.042 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:26:44.044 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:44.050 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:44.053 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:44.055 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:44.060 +03:00 [INF] Get All Products
2022-08-30 08:26:44.063 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:44.067 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:44.069 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:26:44.070 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 08:26:44.074 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:26:44.077 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:44.079 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:44.080 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.9547ms
2022-08-30 08:26:44.081 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:44.083 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:44.084 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.7593ms
2022-08-30 08:26:57.064 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:57.067 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:57.069 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:57.069 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:26:57.071 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.1178ms
2022-08-30 08:26:57.075 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:26:57.076 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:26:57.078 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:26:57.079 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:57.080 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:26:57.083 +03:00 [INF] Get All Products
2022-08-30 08:26:57.084 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:26:57.087 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:26:57.092 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:26:57.103 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:26:57.105 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:26:57.107 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.248ms
2022-08-30 08:26:57.111 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:26:57.112 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:26:57.116 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.2631ms
2022-08-30 08:30:11.915 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:30:11.916 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:30:11.922 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:30:11.923 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:30:11.931 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.2010ms
2022-08-30 08:30:11.939 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:30:11.950 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:30:11.954 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:30:11.956 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:30:11.957 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:30:11.963 +03:00 [INF] Get All Products
2022-08-30 08:30:11.965 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:30:11.967 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:30:11.970 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:30:11.975 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:30:11.977 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:30:11.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.935ms
2022-08-30 08:30:11.980 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:30:11.982 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:30:11.988 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 48.4803ms
2022-08-30 08:31:12.449 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:12.455 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:12.460 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:12.461 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:31:12.463 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 14.2443ms
2022-08-30 08:31:12.476 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:12.478 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:12.481 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:12.482 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:12.483 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:31:12.488 +03:00 [INF] Get All Products
2022-08-30 08:31:12.492 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:31:12.496 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:31:12.500 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:31:12.506 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:31:12.509 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:31:12.510 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.4271ms
2022-08-30 08:31:12.512 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:12.513 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:31:12.516 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 40.0599ms
2022-08-30 08:31:41.910 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:41.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:41.915 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:41.917 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:31:41.919 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.2132ms
2022-08-30 08:31:41.927 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:31:41.929 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:31:41.932 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:31:41.934 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:41.935 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:31:41.942 +03:00 [INF] Get All Products
2022-08-30 08:31:41.943 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:31:41.947 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:31:41.950 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:31:41.953 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:31:41.956 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:31:41.957 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8012ms
2022-08-30 08:31:41.959 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:31:41.960 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:31:41.964 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.8644ms
2022-08-30 08:32:07.109 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:07.112 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:07.115 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:07.116 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:07.118 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0420ms
2022-08-30 08:32:07.125 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:07.126 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:07.129 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:07.131 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:07.133 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:07.144 +03:00 [INF] Get All Products
2022-08-30 08:32:07.145 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:07.223 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:07.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:07.230 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:07.232 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:07.233 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 90.4245ms
2022-08-30 08:32:07.235 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:07.245 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:07.250 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 125.1761ms
2022-08-30 08:32:14.931 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:14.934 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:14.936 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:14.938 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:14.940 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1831ms
2022-08-30 08:32:14.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:14.948 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:14.950 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:14.951 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:14.953 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:14.955 +03:00 [INF] Get All Products
2022-08-30 08:32:14.956 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:14.960 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:14.966 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:14.970 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:14.972 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:14.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.0539ms
2022-08-30 08:32:14.980 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:14.981 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:14.988 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.8830ms
2022-08-30 08:32:38.896 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:38.898 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:38.900 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:38.901 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:32:38.904 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.3886ms
2022-08-30 08:32:38.911 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:32:38.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:32:38.915 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:32:38.917 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:38.922 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:32:38.926 +03:00 [INF] Get All Products
2022-08-30 08:32:38.928 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:32:38.932 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:32:38.940 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:32:38.943 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:32:38.944 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:32:38.946 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.5905ms
2022-08-30 08:32:38.947 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:32:38.950 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:32:38.954 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 42.7625ms
2022-08-30 08:33:47.220 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:33:47.221 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:33:47.228 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:33:47.229 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:33:47.232 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.0491ms
2022-08-30 08:33:47.238 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:33:47.240 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:33:47.247 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:33:47.249 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:33:47.251 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:33:47.257 +03:00 [INF] Get All Products
2022-08-30 08:33:47.260 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:33:47.264 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:33:47.268 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:33:47.274 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:33:47.278 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:33:47.279 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 23.9348ms
2022-08-30 08:33:47.282 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:33:47.285 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:33:47.293 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 54.7856ms
2022-08-30 08:35:53.544 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.558 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.572 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.573 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:35:53.575 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 30.2587ms
2022-08-30 08:35:53.585 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.587 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.595 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.599 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.602 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:35:53.613 +03:00 [INF] Get All Products
2022-08-30 08:35:53.615 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:35:53.619 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:35:53.624 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:35:53.628 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:35:53.630 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:35:53.633 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.0132ms
2022-08-30 08:35:53.634 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.639 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:35:53.645 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 59.9082ms
2022-08-30 08:35:53.984 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:35:53.985 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:35:53.988 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:35:53.990 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:53.991 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:35:53.993 +03:00 [INF] Get All Products
2022-08-30 08:35:53.994 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:35:53.997 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:35:54.001 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:35:54.006 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:35:54.008 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:35:54.009 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.6786ms
2022-08-30 08:35:54.011 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:35:54.013 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:35:54.023 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.3035ms
2022-08-30 08:37:06.905 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:37:06.912 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:37:06.917 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:37:06.919 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:37:06.921 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.2300ms
2022-08-30 08:37:06.928 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:37:06.930 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:37:06.936 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:37:06.938 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:37:06.939 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:37:06.947 +03:00 [INF] Get All Products
2022-08-30 08:37:06.949 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:37:06.952 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:37:06.954 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:37:06.960 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:37:06.961 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:37:06.963 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.2385ms
2022-08-30 08:37:06.964 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:37:06.967 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:37:06.971 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 42.5177ms
2022-08-30 08:38:43.619 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:38:43.621 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:38:43.625 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:38:43.626 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:38:43.628 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1715ms
2022-08-30 08:38:43.640 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:38:43.642 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:38:43.647 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:38:43.648 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:38:43.653 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:38:43.658 +03:00 [INF] Get All Products
2022-08-30 08:38:43.660 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:38:43.670 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:38:43.675 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:38:43.683 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:38:43.685 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:38:43.686 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.52ms
2022-08-30 08:38:43.688 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:38:43.689 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:38:43.693 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 53.2339ms
2022-08-30 08:40:36.021 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:36.033 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:36.043 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:36.044 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:40:36.047 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 25.6675ms
2022-08-30 08:40:36.058 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:36.061 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:36.063 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:36.065 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:36.069 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:36.072 +03:00 [INF] Get All Products
2022-08-30 08:40:36.073 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:36.076 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:36.078 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:36.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:36.084 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:36.085 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.4178ms
2022-08-30 08:40:36.087 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:36.089 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:36.101 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.5761ms
2022-08-30 08:40:48.305 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:48.307 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:48.312 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:48.316 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:40:48.322 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 16.0300ms
2022-08-30 08:40:48.326 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:48.331 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:48.340 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:48.341 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:48.343 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:48.349 +03:00 [INF] Get All Products
2022-08-30 08:40:48.354 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:48.358 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:48.365 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:48.371 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:48.375 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:48.377 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.8427ms
2022-08-30 08:40:48.379 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:48.396 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:48.402 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 75.3805ms
2022-08-30 08:40:52.792 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:40:52.795 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:40:52.797 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:40:52.799 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:52.800 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:40:52.802 +03:00 [INF] Get All Products
2022-08-30 08:40:52.803 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:40:52.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:40:52.811 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:40:52.814 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:40:52.816 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:40:52.817 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.7953ms
2022-08-30 08:40:52.819 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:40:52.823 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:40:52.830 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 38.3564ms
2022-08-30 08:41:39.391 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 08:41:39.398 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:39.408 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:39.410 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:41:39.413 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 21.1896ms
2022-08-30 08:41:39.423 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 08:41:39.428 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:39.429 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:39.430 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:41:39.431 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 08:41:39.434 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 08:41:39.436 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:41:39.442 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:41:39.456 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 08:41:39.465 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 08:41:39.470 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 08:41:39.472 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:41:39.473 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 39.2061ms
2022-08-30 08:41:39.474 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 08:41:39.482 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4MzgwOTksImV4cCI6MTY2MTgzODk5OSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.ut8S17s_SrEz4sxIY4p6wfhCu1sq06U2MUfqJkFVMD8","expiration":"2022-08-30T05:56:39.4556139Z","refreshToken":"cBqq6IqInTIo0+QMU6VQimuQLEDrmQr7AmS6dbnPsGo="}}
2022-08-30 08:41:39.486 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 62.3381ms
2022-08-30 08:41:41.022 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:41:41.023 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:41.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:41.028 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:41:41.030 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.6505ms
2022-08-30 08:41:41.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:41:41.036 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:41:41.039 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:41:41.040 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:41:41.041 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:41:41.044 +03:00 [INF] Get All Products
2022-08-30 08:41:41.045 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:41:41.049 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:41:41.053 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:41:41.055 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:41:41.056 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:41:41.057 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.6157ms
2022-08-30 08:41:41.058 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:41:41.061 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:41:41.065 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.9135ms
2022-08-30 08:42:00.279 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:42:00.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:00.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:00.287 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:42:00.290 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.6933ms
2022-08-30 08:42:00.302 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:42:00.310 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:00.316 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:00.317 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:00.318 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:42:00.322 +03:00 [INF] Get All Products
2022-08-30 08:42:00.324 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:42:00.333 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:42:00.335 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:42:00.337 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:42:00.338 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:42:00.339 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.9988ms
2022-08-30 08:42:00.341 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:00.342 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:42:00.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.2294ms
2022-08-30 08:42:08.161 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:42:08.163 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:08.167 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:08.169 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:42:08.171 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.9681ms
2022-08-30 08:42:08.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:42:08.179 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:42:08.187 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:42:08.189 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:08.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:42:08.195 +03:00 [INF] Get All Products
2022-08-30 08:42:08.197 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:42:08.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:42:08.205 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:42:08.207 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:42:08.208 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:42:08.210 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.6215ms
2022-08-30 08:42:08.211 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:42:08.212 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:42:08.216 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 38.3354ms
2022-08-30 08:43:28.274 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:43:28.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:43:28.284 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:43:28.285 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:43:28.289 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 15.2983ms
2022-08-30 08:43:28.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:43:28.308 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:43:28.313 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:43:28.314 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:43:28.315 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:43:28.318 +03:00 [INF] Get All Products
2022-08-30 08:43:28.319 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:43:28.323 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:43:28.325 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:43:28.331 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:43:28.332 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:43:28.333 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8796ms
2022-08-30 08:43:28.334 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:43:28.336 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:43:28.337 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 36.9657ms
2022-08-30 08:44:01.755 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:01.756 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:01.760 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:01.761 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:01.763 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.2042ms
2022-08-30 08:44:01.768 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:01.770 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:01.773 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:01.775 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:01.777 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:01.787 +03:00 [INF] Get All Products
2022-08-30 08:44:01.788 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:01.791 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:01.799 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:44:01.803 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:01.805 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:01.807 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.5877ms
2022-08-30 08:44:01.809 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:01.814 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:01.817 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 48.5407ms
2022-08-30 08:44:31.689 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:31.696 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:31.700 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:31.701 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:31.703 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.2999ms
2022-08-30 08:44:31.712 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:31.715 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:31.719 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:31.720 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:31.721 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:31.725 +03:00 [INF] Get All Products
2022-08-30 08:44:31.726 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:31.732 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:31.735 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:31.737 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:31.739 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:31.741 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.6196ms
2022-08-30 08:44:31.744 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:31.745 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:31.748 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.6681ms
2022-08-30 08:44:34.659 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:34.661 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:34.668 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:34.670 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:34.672 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 12.4974ms
2022-08-30 08:44:34.678 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:44:34.684 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:34.688 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:34.690 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:34.693 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:34.699 +03:00 [INF] Get All Products
2022-08-30 08:44:34.700 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:34.704 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:34.706 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:44:34.708 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:34.713 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:34.714 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.1181ms
2022-08-30 08:44:34.716 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:34.717 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:34.719 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 41.4931ms
2022-08-30 08:44:35.896 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:44:35.898 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:35.901 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:35.902 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:35.905 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 8.9897ms
2022-08-30 08:44:35.909 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:44:35.911 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:35.916 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:35.922 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:35.924 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:35.928 +03:00 [INF] Get All Products
2022-08-30 08:44:35.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:35.936 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:35.939 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:35.941 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:35.943 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:35.944 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.7271ms
2022-08-30 08:44:35.945 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:35.947 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:44:35.948 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 38.9457ms
2022-08-30 08:44:37.126 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:44:37.128 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:37.131 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:37.132 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:37.134 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 8.4975ms
2022-08-30 08:44:37.137 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:44:37.138 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:37.140 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:37.142 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:37.143 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:37.145 +03:00 [INF] Get All Products
2022-08-30 08:44:37.147 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:37.153 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:37.157 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:37.159 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:37.161 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:37.164 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.1133ms
2022-08-30 08:44:37.165 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:37.167 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:44:37.169 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 31.9519ms
2022-08-30 08:44:43.145 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-2&size=12 - -
2022-08-30 08:44:43.148 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.152 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.154 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:43.156 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-2&size=12 - - - 204 - - 10.7743ms
2022-08-30 08:44:43.161 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-2&size=12 - -
2022-08-30 08:44:43.164 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.168 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.169 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.170 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:43.173 +03:00 [INF] Get All Products
2022-08-30 08:44:43.174 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:43.178 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:43.215 +03:00 [ERR] Failed executing DbCommand (27ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:43.433 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.676 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 503.6205ms
2022-08-30 08:44:43.677 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.718 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-3&size=12 - -
2022-08-30 08:44:43.726 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.728 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.729 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.795 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:43.797 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-3&size=12 - - - 204 - - 78.9206ms
2022-08-30 08:44:43.800 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:43.802 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-3&size=12 - -
2022-08-30 08:44:43.803 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:43.806 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:43.808 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-2&size=12 - - - 500 - application/json 647.1148ms
2022-08-30 08:44:43.810 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.813 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:43.816 +03:00 [INF] Get All Products
2022-08-30 08:44:43.817 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:43.820 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:43.826 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:43.830 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:43.947 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 131.302ms
2022-08-30 08:44:43.948 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:43.981 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.027 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:44.029 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-3&size=12 - - - 500 - application/json 226.2868ms
2022-08-30 08:44:44.235 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-4&size=12 - -
2022-08-30 08:44:44.236 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:44.240 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:44.241 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:44.244 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-4&size=12 - - - 204 - - 9.2873ms
2022-08-30 08:44:44.249 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-4&size=12 - -
2022-08-30 08:44:44.251 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:44.255 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:44.256 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:44.257 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:44.260 +03:00 [INF] Get All Products
2022-08-30 08:44:44.263 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:44.265 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:44.270 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:44.274 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.379 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 119.3138ms
2022-08-30 08:44:44.380 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:44.418 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:44.479 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:44.480 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-4&size=12 - - - 500 - application/json 230.8934ms
2022-08-30 08:44:45.278 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-5&size=12 - -
2022-08-30 08:44:45.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:45.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:45.288 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:45.293 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-5&size=12 - - - 204 - - 14.0897ms
2022-08-30 08:44:45.297 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-5&size=12 - -
2022-08-30 08:44:45.302 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:45.305 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:45.306 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:45.308 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:45.311 +03:00 [INF] Get All Products
2022-08-30 08:44:45.312 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:45.316 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:45.320 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:45.323 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:45.417 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 106.8438ms
2022-08-30 08:44:45.420 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:45.448 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:45.482 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:45.483 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-5&size=12 - - - 500 - application/json 186.1709ms
2022-08-30 08:44:53.287 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - -
2022-08-30 08:44:53.289 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:53.292 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:53.294 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:53.296 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=-1&size=12 - - - 204 - - 8.1350ms
2022-08-30 08:44:53.299 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - -
2022-08-30 08:44:53.303 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:53.305 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:53.306 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:53.308 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:53.311 +03:00 [INF] Get All Products
2022-08-30 08:44:53.311 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:53.314 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:53.323 +03:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:53.328 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'eTrade.Persistence.Contexts.eTradeAPIDBContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:53.428 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 117.7205ms
2022-08-30 08:44:53.430 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:53.472 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|211_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryHandler.Handle(GetAllProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetAllProduct\GetAllProductQueryHandler.cs:line 25
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetAllProductQueryRequest getAllProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 36
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodelimit.c
    Line: 374
    Routine: recompute_limits
2022-08-30 08:44:53.522 +03:00 [ERR] 2201X: OFFSET must not be negative
2022-08-30 08:44:53.523 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=-1&size=12 - - - 500 - application/json 223.7978ms
2022-08-30 08:44:54.006 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:54.008 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:54.010 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:54.012 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:44:54.014 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.6028ms
2022-08-30 08:44:54.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:44:54.018 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:44:54.027 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:44:54.029 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:54.032 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:44:54.035 +03:00 [INF] Get All Products
2022-08-30 08:44:54.038 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:44:54.040 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:44:54.042 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:44:54.044 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:44:54.045 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:44:54.046 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 11.4939ms
2022-08-30 08:44:54.047 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:44:54.048 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:44:54.052 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 34.1795ms
2022-08-30 08:45:22.920 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:45:22.921 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:45:22.925 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:45:22.926 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:45:22.929 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.5488ms
2022-08-30 08:45:22.935 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:45:22.936 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:45:22.941 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:45:22.943 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:45:22.946 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:45:22.957 +03:00 [INF] Get All Products
2022-08-30 08:45:22.960 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:45:22.967 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:45:22.971 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:45:22.976 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:45:22.979 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:45:22.983 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 28.0704ms
2022-08-30 08:45:22.985 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:45:22.991 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:45:22.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 64.0143ms
2022-08-30 08:47:05.712 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:05.721 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:05.724 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:05.725 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:47:05.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.0014ms
2022-08-30 08:47:05.737 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:05.741 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:05.745 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:05.747 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:05.749 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:47:05.761 +03:00 [INF] Get All Products
2022-08-30 08:47:05.764 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:47:05.767 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:47:05.771 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:47:05.773 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:47:05.775 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:47:05.775 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3012ms
2022-08-30 08:47:05.776 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:05.778 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:47:05.781 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.2057ms
2022-08-30 08:47:34.090 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:34.092 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:34.094 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:34.095 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:47:34.098 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3552ms
2022-08-30 08:47:34.111 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:47:34.124 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:47:34.134 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:47:34.139 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:34.142 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:47:34.156 +03:00 [INF] Get All Products
2022-08-30 08:47:34.158 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:47:34.168 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:47:34.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:47:34.178 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:47:34.185 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:47:34.188 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 32.6392ms
2022-08-30 08:47:34.194 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:47:34.195 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:47:34.204 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 92.2182ms
2022-08-30 08:48:40.580 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:48:40.587 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:48:40.590 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:48:40.592 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:48:40.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 15.0256ms
2022-08-30 08:48:40.607 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:48:40.615 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:48:40.619 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:48:40.621 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:48:40.622 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:48:40.626 +03:00 [INF] Get All Products
2022-08-30 08:48:40.627 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:48:40.631 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:48:40.634 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:48:40.637 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:48:40.639 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:48:40.640 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.539ms
2022-08-30 08:48:40.642 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:48:40.645 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:48:40.648 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.8716ms
2022-08-30 08:49:31.496 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:31.503 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:31.507 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:31.508 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:31.510 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 13.8914ms
2022-08-30 08:49:31.520 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:31.523 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:31.526 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:31.529 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:31.530 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:31.537 +03:00 [INF] Get All Products
2022-08-30 08:49:31.539 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:31.543 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:31.545 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:49:31.550 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:31.551 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:31.552 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.1175ms
2022-08-30 08:49:31.554 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:31.555 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:31.557 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 37.0289ms
2022-08-30 08:49:33.801 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:33.802 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:33.807 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:33.809 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:33.816 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 15.2426ms
2022-08-30 08:49:33.823 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:33.825 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:33.831 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:33.833 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:33.835 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:33.837 +03:00 [INF] Get All Products
2022-08-30 08:49:33.838 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:33.842 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:33.846 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:49:33.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:33.850 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:33.851 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.2669ms
2022-08-30 08:49:33.853 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:33.855 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:33.860 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.6098ms
2022-08-30 08:49:36.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:49:36.114 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:36.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:36.120 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:36.121 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:36.123 +03:00 [INF] Get All Products
2022-08-30 08:49:36.125 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:36.131 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:36.134 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:49:36.137 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:36.139 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:36.140 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.3901ms
2022-08-30 08:49:36.144 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:36.147 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:36.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 35.5174ms
2022-08-30 08:49:40.003 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:40.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:40.009 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:40.011 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:49:40.013 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.7311ms
2022-08-30 08:49:40.017 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:49:40.019 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:49:40.026 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:49:40.027 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:40.030 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:49:40.032 +03:00 [INF] Get All Products
2022-08-30 08:49:40.033 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:49:40.036 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:49:40.042 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:49:40.045 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:49:40.048 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:49:40.049 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.972ms
2022-08-30 08:49:40.051 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:49:40.052 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:49:40.059 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.3599ms
2022-08-30 08:56:27.634 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:27.635 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:27.641 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:27.644 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:27.647 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 13.7363ms
2022-08-30 08:56:27.666 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:27.679 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:27.685 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:27.687 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:27.690 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:27.694 +03:00 [INF] Get All Products
2022-08-30 08:56:27.696 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:27.796 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:27.799 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:27.801 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:27.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:27.805 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 112.6519ms
2022-08-30 08:56:27.817 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:27.823 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:27.832 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 166.1146ms
2022-08-30 08:56:30.613 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:30.615 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:30.619 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:30.621 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:30.623 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 9.8318ms
2022-08-30 08:56:30.627 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:30.629 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:30.631 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:30.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:30.634 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:30.636 +03:00 [INF] Get All Products
2022-08-30 08:56:30.637 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:30.644 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:30.646 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:56:30.649 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:30.650 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:30.651 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.4097ms
2022-08-30 08:56:30.653 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:30.656 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:30.658 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 31.4059ms
2022-08-30 08:56:33.491 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:33.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:33.497 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:33.499 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:33.501 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.3161ms
2022-08-30 08:56:33.505 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:33.507 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:33.513 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:33.514 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:33.515 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:33.518 +03:00 [INF] Get All Products
2022-08-30 08:56:33.519 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:33.522 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:33.525 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:33.530 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:33.533 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:33.534 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.2106ms
2022-08-30 08:56:33.536 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:33.539 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:33.550 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 44.4457ms
2022-08-30 08:56:36.334 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:36.335 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:36.339 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:36.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:36.342 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.5515ms
2022-08-30 08:56:36.346 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 08:56:36.349 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:36.352 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:36.353 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:36.354 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:36.357 +03:00 [INF] Get All Products
2022-08-30 08:56:36.357 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:36.360 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:36.366 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_0 OFFSET @__p_0
2022-08-30 08:56:36.368 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:36.370 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:36.372 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.3779ms
2022-08-30 08:56:36.373 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:36.375 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00"},{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00"},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00"},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:36.376 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 30.8664ms
2022-08-30 08:56:37.804 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:56:37.805 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:37.809 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:37.810 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:37.811 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=2&size=12 - - - 204 - - 7.4765ms
2022-08-30 08:56:37.814 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - -
2022-08-30 08:56:37.815 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:37.817 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:37.818 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:37.818 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:37.821 +03:00 [INF] Get All Products
2022-08-30 08:56:37.822 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:37.824 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:37.826 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:37.831 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:37.832 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:37.833 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.4712ms
2022-08-30 08:56:37.835 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:37.837 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:56:37.838 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=2&size=12 - - - 200 - application/json;+charset=utf-8 23.6002ms
2022-08-30 08:56:39.291 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:56:39.294 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:39.300 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:39.305 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:39.306 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=3&size=12 - - - 204 - - 15.1142ms
2022-08-30 08:56:39.312 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - -
2022-08-30 08:56:39.313 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:39.318 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:39.320 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:39.324 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:39.326 +03:00 [INF] Get All Products
2022-08-30 08:56:39.327 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:39.330 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:39.335 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:39.338 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:39.339 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:39.340 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.435ms
2022-08-30 08:56:39.341 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:39.343 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[]}
2022-08-30 08:56:39.344 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=3&size=12 - - - 200 - application/json;+charset=utf-8 32.2163ms
2022-08-30 08:56:40.857 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:40.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:40.862 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:40.864 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:56:40.866 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.9030ms
2022-08-30 08:56:40.870 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:56:40.872 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:56:40.874 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:56:40.875 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:40.876 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:56:40.879 +03:00 [INF] Get All Products
2022-08-30 08:56:40.880 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:56:40.886 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:56:40.889 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:56:40.893 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:56:40.894 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:56:40.895 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.5209ms
2022-08-30 08:56:40.896 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:56:40.900 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:56:40.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 36.8867ms
2022-08-30 08:58:33.635 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:58:33.642 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:58:33.654 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:58:33.655 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:58:33.658 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 22.9374ms
2022-08-30 08:58:33.669 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:58:33.670 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:58:33.673 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:58:33.704 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:58:33.723 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:58:33.734 +03:00 [INF] Get All Products
2022-08-30 08:58:33.736 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:58:33.745 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:58:33.749 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:58:33.758 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:58:33.760 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:58:33.762 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 29.3912ms
2022-08-30 08:58:33.773 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:58:33.779 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:58:33.793 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 124.2007ms
2022-08-30 08:59:39.448 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:59:39.449 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:59:39.454 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:59:39.464 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 08:59:39.468 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 21.0968ms
2022-08-30 08:59:39.477 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 08:59:39.480 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 08:59:39.484 +03:00 [INF] CORS policy execution successful.
2022-08-30 08:59:39.487 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:59:39.490 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 08:59:39.506 +03:00 [INF] Get All Products
2022-08-30 08:59:39.513 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 08:59:39.525 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 08:59:39.534 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 08:59:39.545 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 08:59:39.548 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 08:59:39.553 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 48.106ms
2022-08-30 08:59:39.558 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 08:59:39.560 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00"},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00"},{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00"},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00"},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00"},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00"},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 08:59:39.566 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 88.5887ms
2022-08-30 09:03:23.869 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 09:03:23.875 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:23.884 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:23.885 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:23.886 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 17.0968ms
2022-08-30 09:03:23.890 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 09:03:23.891 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:23.894 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:23.895 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 09:03:23.896 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 09:03:23.898 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 09:03:23.912 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:24.040 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 09:03:24.056 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 09:03:24.064 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 09:03:24.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 09:03:24.074 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:24.075 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 177.4997ms
2022-08-30 09:03:24.079 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 09:03:24.080 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4Mzk0MDQsImV4cCI6MTY2MTg0MDMwNCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.VukX1ZpQu1f_sRHbqxYdSkIwvo_BA71ds3Lvjq5WaY4","expiration":"2022-08-30T06:18:24.0545508Z","refreshToken":"8D75QoI1HVrhiS/OsvdRNZ4uvbNsZihh4p0PPvhHEf4="}}
2022-08-30 09:03:24.083 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 192.9767ms
2022-08-30 09:03:24.827 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 09:03:24.830 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:24.837 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.842 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:24.847 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 19.5037ms
2022-08-30 09:03:24.861 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 09:03:24.862 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:24.864 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.865 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 09:03:24.878 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 09:03:24.881 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 09:03:24.884 +03:00 [INF] RequestBody: 
2022-08-30 09:03:24.889 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"gKn43inN_5_0P_EYr6_Rhg","connectionToken":"1gEJQLHwYsYyS5Zhn96eFw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 09:03:24.891 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 30.3708ms
2022-08-30 09:03:24.914 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=1gEJQLHwYsYyS5Zhn96eFw - -
2022-08-30 09:03:24.915 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 09:03:24.919 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:24.921 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 09:03:27.304 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 09:03:27.306 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:27.308 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:27.309 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:27.311 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.6907ms
2022-08-30 09:03:27.314 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 09:03:27.315 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:27.317 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:27.319 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 09:03:27.320 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:27.322 +03:00 [INF] Get All Products
2022-08-30 09:03:27.323 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:27.326 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 09:03:27.329 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 09:03:27.335 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 09:03:27.337 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:27.339 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.2605ms
2022-08-30 09:03:27.340 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 09:03:27.342 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 09:03:27.347 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 32.5323ms
2022-08-30 09:03:29.188 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:29.190 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:29.193 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:29.194 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:29.195 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.4891ms
2022-08-30 09:03:29.199 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:29.202 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:29.203 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:29.449 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:03:29.454 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:29.461 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:29.810 +03:00 [INF] Executed DbCommand (107ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 09:03:29.893 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 09:03:29.900 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:03:29.902 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 444.6145ms
2022-08-30 09:03:29.910 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:03:29.914 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"}]
2022-08-30 09:03:29.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 716.9761ms
2022-08-30 09:03:49.373 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:03:49.375 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:49.378 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:49.379 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:03:49.380 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.6491ms
2022-08-30 09:03:49.385 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 multipart/form-data;+boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR 152986
2022-08-30 09:03:49.387 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 152986
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:03:49.391 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:03:49.395 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 09:03:49.400 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:03:53.172 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:03:53.181 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-30 09:03:53.394 +03:00 [INF] Executed DbCommand (109ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2022-08-30 09:03:53.420 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@p6='?' (DbType = Guid), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p6, @p7);
2022-08-30 09:03:53.433 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-30 09:03:53.436 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 4032.0767ms
2022-08-30 09:03:53.438 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 09:03:53.440 +03:00 [INF] Response:
StatusCode: 200
2022-08-30 09:03:53.444 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 multipart/form-data;+boundary=----WebKitFormBoundaryeEsmqd4Vg57zZSXR 152986 - 200 0 - 4059.0819ms
2022-08-30 09:04:01.013 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:04:01.016 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:04:01.019 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:04:01.020 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 09:04:01.022 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.5284ms
2022-08-30 09:04:01.026 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 09:04:01.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 09:04:01.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 09:04:01.034 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:04:01.037 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 09:04:01.042 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:04:01.045 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 09:04:01.050 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 09:04:01.053 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 09:04:01.055 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 13.5692ms
2022-08-30 09:04:01.056 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 09:04:01.057 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 09:04:01.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 32.3561ms
2022-08-30 09:13:28.513 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:13:40.763 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 09:13:41.151 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-08-30 09:13:41.213 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2022-08-30 09:13:41.353 +03:00 [INF] Executed DbCommand (132ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2022-08-30 09:13:41.372 +03:00 [INF] Applying migration '20220830061328_mig_10'.
2022-08-30 09:13:41.492 +03:00 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Files" ADD "Showcase" boolean NULL;
2022-08-30 09:13:41.494 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220830061328_mig_10', '6.0.4');
2022-08-30 09:15:26.032 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 09:15:26.390 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 09:15:26.391 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 09:15:26.395 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 09:15:26.396 +03:00 [INF] Hosting environment: Development
2022-08-30 09:15:26.397 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:08:14.649 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:08:15.603 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:08:15.605 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:08:15.608 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:08:15.609 +03:00 [INF] Hosting environment: Development
2022-08-30 11:08:15.610 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:23:37.087 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:23:37.171 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:37.179 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:37.185 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:37.204 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 120.5390ms
2022-08-30 11:23:37.209 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:23:37.219 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:37.223 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:37.257 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:23:37.309 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:23:37.380 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:23:39.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:40.122 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:23:40.969 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:23:41.156 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:23:41.240 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:23:41.253 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:41.262 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3941.1936ms
2022-08-30 11:23:41.263 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:23:41.267 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDc4MjAsImV4cCI6MTY2MTg0ODcyMCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.uP4UEbc1JrJsD0GRiONrdgi-UKuSFzA_XLygLoh9frc","expiration":"2022-08-30T08:38:40.6201655Z","refreshToken":"dGxW7gxO3c5i5Vu9iRdXgORsJchfMcXOHr2vQpG9uww="}}
2022-08-30 11:23:41.288 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4079.7758ms
2022-08-30 11:23:41.355 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:23:41.357 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:41.359 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:41.360 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:41.361 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.9135ms
2022-08-30 11:23:41.365 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:23:41.378 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:41.386 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:41.388 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:23:41.398 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:23:41.430 +03:00 [INF] Get All Products
2022-08-30 11:23:41.490 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:41.543 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:23:41.561 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:23:41.563 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:23:41.582 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:23:41.595 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:23:41.613 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:41.616 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 214.4122ms
2022-08-30 11:23:41.617 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:23:41.622 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:23:41.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 265.6992ms
2022-08-30 11:23:44.279 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:23:44.282 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:44.286 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:44.288 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:23:44.291 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 11.8275ms
2022-08-30 11:23:44.296 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:23:44.300 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:23:44.306 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:23:44.554 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:23:44.560 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:23:44.580 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:23:44.890 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:23:45.010 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:23:45.017 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:23:45.021 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 457.0758ms
2022-08-30 11:23:45.027 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:23:45.031 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:23:45.034 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 738.4469ms
2022-08-30 11:24:30.839 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:24:30.841 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:24:30.846 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:24:30.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:24:30.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 9.3489ms
2022-08-30 11:24:30.853 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 application/json 2
2022-08-30 11:24:30.861 +03:00 [INF] Request:
Protocol: HTTP/2
Method: PUT
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 2
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:24:30.864 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:24:30.865 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2022-08-30 11:24:30.866 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2022-08-30 11:24:30.867 +03:00 [INF] RequestBody: 
2022-08-30 11:24:30.867 +03:00 [INF] Response:
StatusCode: 405
Allow: DELETE, GET
2022-08-30 11:24:30.873 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 application/json 2 - 405 0 - 19.6072ms
2022-08-30 11:25:27.458 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:25:27.852 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:25:27.853 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:25:27.858 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:25:27.859 +03:00 [INF] Hosting environment: Development
2022-08-30 11:25:27.859 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:26:38.652 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:26:38.745 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:38.753 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:38.759 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:38.779 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 130.4370ms
2022-08-30 11:26:38.792 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:26:38.800 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:38.804 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:38.829 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:26:38.865 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:26:38.898 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:26:41.113 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:41.836 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:26:42.570 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:26:42.759 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:26:42.829 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:26:42.846 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:42.865 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3985.1277ms
2022-08-30 11:26:42.869 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:26:42.876 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDgwMDIsImV4cCI6MTY2MTg0ODkwMiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.Jc3Div3JDsMnUuIqK3-T2wYb-0Yg2n7dNady09tXMto","expiration":"2022-08-30T08:41:42.3002474Z","refreshToken":"qDumC/5NfHRR3Piuvj6qVXO0GxYAAMFEad4scnf7AXE="}}
2022-08-30 11:26:42.908 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4116.0979ms
2022-08-30 11:26:44.307 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:26:44.309 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:44.311 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.312 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:44.314 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 6.2610ms
2022-08-30 11:26:44.322 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:26:44.325 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:44.328 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.329 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:26:44.346 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:26:44.349 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:26:44.350 +03:00 [INF] RequestBody: 
2022-08-30 11:26:44.351 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"8tnpcTr0VNjlvWTJ_jzQEQ","connectionToken":"hJYIrfCLpjdFtTaJSuW_cA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:26:44.356 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 33.2229ms
2022-08-30 11:26:44.384 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=hJYIrfCLpjdFtTaJSuW_cA - -
2022-08-30 11:26:44.392 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:26:44.394 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:44.397 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 11:26:46.925 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:26:46.926 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:46.928 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:46.929 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:46.931 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 6.5717ms
2022-08-30 11:26:46.936 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:26:46.938 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:46.946 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:46.948 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:46.962 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:46.982 +03:00 [INF] Get All Products
2022-08-30 11:26:47.040 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:47.093 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:26:47.115 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:26:47.119 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:26:47.140 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:26:47.158 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:26:47.178 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:47.181 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 213.1653ms
2022-08-30 11:26:47.186 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:47.187 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:26:47.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 254.9091ms
2022-08-30 11:26:48.590 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:48.592 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:48.594 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:48.596 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:48.598 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.4653ms
2022-08-30 11:26:48.605 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:48.609 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:48.614 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:48.884 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:26:48.893 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:48.926 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:49.222 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:26:49.336 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:26:49.340 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:26:49.342 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 436.9523ms
2022-08-30 11:26:49.345 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:26:49.347 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:26:49.349 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 744.2667ms
2022-08-30 11:26:51.412 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:51.414 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:51.416 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:51.418 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:26:51.420 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.3855ms
2022-08-30 11:26:51.424 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:26:51.425 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:26:51.431 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:26:51.433 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:51.441 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetByIdProduct.GetByIdProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:26:51.461 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:26:51.705 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 255.9916ms
2022-08-30 11:26:51.706 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:26:51.739 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception was thrown while attempting to evaluate a LINQ query parameter expression. See the inner exception for more information. To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
 ---> System.FormatException: Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).
   at System.Guid.GuidResult.SetFailure(Boolean overflow, String failureMessageID)
   at System.Guid.TryParseExactN(ReadOnlySpan`1 guidString, GuidResult& result)
   at System.Guid.TryParseGuid(ReadOnlySpan`1 guidString, GuidResult& result)
   at System.Guid.Parse(ReadOnlySpan`1 input)
   at System.Guid.Parse(String input)
   at lambda_method333(Closure )
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.GetValue(Expression expression, String& parameterName)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.GetValue(Expression expression, String& parameterName)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Evaluate(Expression expression, Boolean generateParameter)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression node)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.Visit(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(Expression expression, Boolean clearEvaluatedValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, LambdaExpression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, Expression`1 predicate, CancellationToken cancellationToken)
   at eTrade.Persistence.Repositories.ReadRepository`1.GetByIdAsync(String id, Boolean tracking) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\eTrade.Persistence\Repositories\ReadRepository.cs:line 0
   at eTrade.Application.Features.Queries.Product.GetByIdProduct.GetByIdProductQueryHandler.Handle(GetByIdProductQueryRequest request, CancellationToken cancellationToken) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Core\eTrade.Application\Features\Queries\Product\GetByIdProduct\GetByIdProductQueryHandler.cs:line 23
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at eTradeAPI.API.controller.ProductsController.Get(GetByIdProductQueryRequest getByIdProductQueryRequest) in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\controller\ProductsController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_6>d.MoveNext() in C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\Program.cs:line 119
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.HttpLogging.HttpLoggingMiddleware.InvokeInternal(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)
2022-08-30 11:26:52.023 +03:00 [ERR] An exception was thrown while attempting to evaluate a LINQ query parameter expression. See the inner exception for more information. To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
2022-08-30 11:26:52.027 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 500 - application/json 603.4976ms
2022-08-30 11:27:02.687 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 11:27:02.690 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 08:26:44 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 11:27:02.692 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=hJYIrfCLpjdFtTaJSuW_cA - - - 101 - - 18307.9893ms
2022-08-30 11:50:27.645 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:50:28.102 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:50:28.104 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:50:28.109 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:50:28.110 +03:00 [INF] Hosting environment: Development
2022-08-30 11:50:28.110 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:50:35.973 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 11:50:36.052 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:36.061 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:36.068 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:50:36.084 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 114.6831ms
2022-08-30 11:50:36.088 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 11:50:36.135 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:36.138 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:36.162 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:50:36.199 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 11:50:36.231 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 11:50:37.990 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:50:38.608 +03:00 [INF] Executed DbCommand (25ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:50:39.054 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 11:50:39.240 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 11:50:39.317 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 11:50:39.330 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:50:39.342 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3135.039ms
2022-08-30 11:50:39.345 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 11:50:39.348 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NDk0MzgsImV4cCI6MTY2MTg1MDMzOCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.ceSOcEjqWyU3RDKiTdSIMv6ZZ2JICNMayJY88IJofHc","expiration":"2022-08-30T09:05:38.8595575Z","refreshToken":"4b7zwQRTRQaPi2cTC4Vx20UTGGpFB5VuFBtBj9gNjzo="}}
2022-08-30 11:50:39.372 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3284.6319ms
2022-08-30 11:50:44.963 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:50:44.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:44.969 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:44.971 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:50:44.972 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 9.1384ms
2022-08-30 11:50:44.984 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:50:44.987 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:50:44.989 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:44.994 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:50:45.011 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:50:45.014 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:50:45.015 +03:00 [INF] RequestBody: 
2022-08-30 11:50:45.017 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"l_fiOdhIkXBGMNRo_5KlBw","connectionToken":"qdHbP9oOZGQsybSejko0Dw","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:50:45.019 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 35.1502ms
2022-08-30 11:50:45.048 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=qdHbP9oOZGQsybSejko0Dw - -
2022-08-30 11:50:45.061 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:50:45.065 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:50:45.069 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 11:54:08.511 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 11:54:09.003 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 11:54:09.016 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 11:54:09.025 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 11:54:09.026 +03:00 [INF] Hosting environment: Development
2022-08-30 11:54:09.027 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 11:54:13.028 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:54:13.109 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:13.118 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:13.124 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:13.136 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 111.7133ms
2022-08-30 11:54:13.150 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 11:54:13.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:13.170 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:13.195 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:54:13.235 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:13.578 +03:00 [INF] Get All Products
2022-08-30 11:54:15.100 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:15.585 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 11:54:15.659 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:54:15.663 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 11:54:15.720 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 11:54:15.753 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 11:54:15.775 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:15.786 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2540.4757ms
2022-08-30 11:54:15.788 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 11:54:15.792 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 11:54:15.810 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 2660.3246ms
2022-08-30 11:54:17.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:17.160 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:17.164 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:17.165 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:17.167 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.9973ms
2022-08-30 11:54:17.171 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:17.176 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:17.179 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:17.564 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:54:17.570 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:17.685 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:18.273 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 11:54:18.516 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 11:54:18.522 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:18.526 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 951.2493ms
2022-08-30 11:54:18.532 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 11:54:18.538 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 11:54:18.547 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 1375.8364ms
2022-08-30 11:54:20.979 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:20.981 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:20.983 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:20.984 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:20.986 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 7.2818ms
2022-08-30 11:54:20.993 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 11:54:20.998 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:21.001 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:21.004 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 11:54:21.008 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 11:54:21.035 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 11:54:21.093 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 11:54:21.138 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 11:54:21.346 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-08-30 11:54:21.414 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 11:54:21.417 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 11:54:21.419 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 404.675ms
2022-08-30 11:54:21.421 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 11:54:21.422 +03:00 [INF] ResponseBody: {}
2022-08-30 11:54:21.423 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 430.4867ms
2022-08-30 11:54:23.782 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 11:54:23.783 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:23.786 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.786 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 11:54:23.788 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 5.8893ms
2022-08-30 11:54:23.797 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 11:54:23.799 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 11:54:23.800 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.802 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 11:54:23.811 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 11:54:23.815 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 11:54:23.817 +03:00 [INF] RequestBody: 
2022-08-30 11:54:23.818 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"1KpzrDXGWezfedBo87GRag","connectionToken":"omZY2oLI_jT5wS-T-xom3A","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 11:54:23.820 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 22.5778ms
2022-08-30 11:54:23.840 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=omZY2oLI_jT5wS-T-xom3A - -
2022-08-30 11:54:23.842 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 11:54:23.844 +03:00 [INF] CORS policy execution successful.
2022-08-30 11:54:23.845 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 12:01:56.959 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 12:01:56.962 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 08:54:22 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 12:01:56.964 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=omZY2oLI_jT5wS-T-xom3A - - - 101 - - 453124.3195ms
2022-08-30 12:01:57.661 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:01:57.662 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:01:57.665 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:01:57.667 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 12:01:57.669 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.4952ms
2022-08-30 12:01:57.673 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:01:57.674 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:01:57.676 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:01:57.680 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:01:57.681 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 12:01:57.684 +03:00 [INF] Get All Products
2022-08-30 12:01:57.694 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 12:01:57.777 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 12:01:57.785 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 12:01:57.789 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 12:01:57.791 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 12:01:57.795 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 111.9546ms
2022-08-30 12:01:57.797 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:01:57.800 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 12:01:57.806 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 133.2207ms
2022-08-30 12:02:22.168 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:02:22.171 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:02:22.175 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:02:22.176 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 12:02:22.179 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 10.7390ms
2022-08-30 12:02:22.187 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 12:02:22.191 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 12:02:22.194 +03:00 [INF] CORS policy execution successful.
2022-08-30 12:02:22.196 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:02:22.196 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 12:02:22.201 +03:00 [INF] Get All Products
2022-08-30 12:02:22.207 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 12:02:22.211 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 12:02:22.215 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
FROM "Products" AS p
LIMIT @__p_1 OFFSET @__p_0
2022-08-30 12:02:22.220 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 12:02:22.222 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 12:02:22.223 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.5981ms
2022-08-30 12:02:22.225 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 12:02:22.226 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00"},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00"},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00"},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00"}]}
2022-08-30 12:02:22.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 43.0008ms
2022-08-30 13:05:46.828 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:05:47.198 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:05:47.200 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:05:47.204 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:05:47.206 +03:00 [INF] Hosting environment: Development
2022-08-30 13:05:47.206 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:05:48.798 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:05:48.916 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:48.926 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:48.930 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:48.947 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 152.9096ms
2022-08-30 13:05:48.957 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:05:48.962 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:48.964 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:48.983 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:05:49.013 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:05:49.039 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:05:50.613 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:51.169 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:05:51.535 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:05:51.696 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:05:51.756 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:05:51.768 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:51.780 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 2759.0661ms
2022-08-30 13:05:51.783 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:05:51.786 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTM5NTEsImV4cCI6MTY2MTg1NDg1MSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.wNbhKnbs970ZqizE7U9ZQzPcJu3LXeS97TKCl9efUkE","expiration":"2022-08-30T10:20:51.3813535Z","refreshToken":"0yWsRxPyxCD+DUgCZWvrrWSnFQA7ZhW8YuNvT/wFtOM="}}
2022-08-30 13:05:51.805 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 2847.4940ms
2022-08-30 13:05:51.880 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:05:51.883 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:51.886 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:51.887 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:51.888 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.5869ms
2022-08-30 13:05:51.892 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:05:51.903 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:51.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:51.907 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:51.912 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:05:51.928 +03:00 [INF] Get All Products
2022-08-30 13:05:51.981 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:52.025 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:05:52.087 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:05:52.089 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:05:52.310 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:05:52.333 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:05:52.352 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:52.356 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 442.0744ms
2022-08-30 13:05:52.359 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:52.360 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:05:52.363 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 470.0747ms
2022-08-30 13:05:56.889 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:05:56.890 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.893 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.895 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:56.897 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.4717ms
2022-08-30 13:05:56.902 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:05:56.904 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.908 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.910 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:05:56.913 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:05:56.916 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:05:56.919 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:56.920 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.026ms
2022-08-30 13:05:56.922 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:05:56.923 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:05:56.924 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.1521ms
2022-08-30 13:05:56.930 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:05:56.931 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.935 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.936 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:05:56.937 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.5063ms
2022-08-30 13:05:56.940 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:05:56.940 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:05:56.942 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:05:56.942 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:56.943 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:05:56.947 +03:00 [INF] Get All Products
2022-08-30 13:05:56.957 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:05:56.963 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:05:56.970 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:05:56.975 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:05:56.976 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:05:56.978 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 33.1831ms
2022-08-30 13:05:56.979 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:05:56.981 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:05:56.987 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 47.9726ms
2022-08-30 13:06:14.830 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:06:14.833 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:14.835 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.836 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:14.839 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 8.3261ms
2022-08-30 13:06:14.856 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:06:14.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:14.859 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.860 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:06:14.870 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:06:14.872 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:06:14.873 +03:00 [INF] RequestBody: 
2022-08-30 13:06:14.874 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"iXIqUVO88DjUnS5afq_zWg","connectionToken":"QLb3wFd115_LsQ1en1VkIQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:06:14.875 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 19.7959ms
2022-08-30 13:06:14.901 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=QLb3wFd115_LsQ1en1VkIQ - -
2022-08-30 13:06:14.902 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:06:14.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:14.905 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:06:23.292 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:06:23.294 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:23.295 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:23.296 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:23.297 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.8730ms
2022-08-30 13:06:23.301 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:06:23.302 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:23.303 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:23.304 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:06:23.305 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:23.312 +03:00 [INF] Get All Products
2022-08-30 13:06:23.313 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:23.317 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:06:23.321 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:06:23.324 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:06:23.326 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:06:23.327 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.4674ms
2022-08-30 13:06:23.329 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:06:23.330 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:06:23.334 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 32.9211ms
2022-08-30 13:06:24.560 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:24.563 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:24.565 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:24.565 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:24.567 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.5634ms
2022-08-30 13:06:24.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:24.572 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:24.575 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:24.712 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:06:24.718 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:24.729 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:24.801 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:06:24.880 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:06:24.883 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:06:24.884 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 161.1876ms
2022-08-30 13:06:24.886 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:06:24.889 +03:00 [INF] ResponseBody: []
2022-08-30 13:06:24.891 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 320.6285ms
2022-08-30 13:06:35.395 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:06:35.397 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:35.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:35.401 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:06:35.401 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.7838ms
2022-08-30 13:06:35.405 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 multipart/form-data;+boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA 152986
2022-08-30 13:06:35.407 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/products/upload
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 152986
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
responsetype: [Redacted]
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:06:35.409 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:06:35.411 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 13:06:35.416 +03:00 [INF] Route matched with {action = "Upload", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Upload(eTrade.Application.Features.Commands.ProductImageFile.UploadProductImage.UploadProductImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:06:39.277 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:06:39.286 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
FROM "Products" AS p
WHERE p."Id" = @__Parse_0
LIMIT 1
2022-08-30 13:06:39.429 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?', @p4='?', @p5='?' (DbType = Boolean), @p6='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Files" ("Id", "CreatedDate", "Discriminator", "FileName", "Path", "Showcase", "Storage")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2022-08-30 13:06:39.433 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p7='?' (DbType = Guid), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ProductProductImageFile" ("ProductImageFilesId", "ProductsId")
VALUES (@p7, @p8);
2022-08-30 13:06:39.444 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2022-08-30 13:06:39.445 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API) in 4025.2869ms
2022-08-30 13:06:39.447 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Upload (eTradeAPI.API)'
2022-08-30 13:06:39.448 +03:00 [INF] Response:
StatusCode: 200
2022-08-30 13:06:39.451 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/products/upload?id=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 multipart/form-data;+boundary=----WebKitFormBoundary5Y6gaMbTyFTeH8ZA 152986 - 200 0 - 4045.6997ms
2022-08-30 13:07:28.673 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:07:28.676 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:06:14 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:07:28.677 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=QLb3wFd115_LsQ1en1VkIQ - - - 101 - - 73776.3970ms
2022-08-30 13:07:29.536 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:29.537 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:29.539 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:29.540 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:07:29.543 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 7.1799ms
2022-08-30 13:07:29.550 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:29.550 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:29.552 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:29.553 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:29.554 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:07:29.556 +03:00 [INF] Get All Products
2022-08-30 13:07:29.558 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:07:29.561 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:07:29.565 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:07:29.568 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:07:29.570 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:07:29.572 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.0001ms
2022-08-30 13:07:29.573 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:29.579 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:07:29.582 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 31.9912ms
2022-08-30 13:07:36.058 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:36.060 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:36.063 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:36.069 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:07:36.072 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 13.2687ms
2022-08-30 13:07:36.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:07:36.087 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:07:36.090 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:07:36.092 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:36.094 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:07:36.099 +03:00 [INF] Get All Products
2022-08-30 13:07:36.101 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:07:36.107 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:07:36.114 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:07:36.125 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:07:36.129 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:07:36.133 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 36.3557ms
2022-08-30 13:07:36.136 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:07:36.138 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:07:36.146 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 64.1587ms
2022-08-30 13:08:43.158 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:08:43.167 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:43.170 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:43.171 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:43.172 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 13.6422ms
2022-08-30 13:08:43.176 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:08:43.178 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:43.182 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:43.184 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:08:43.187 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:08:43.190 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:08:43.191 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:43.199 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:08:43.215 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:08:43.226 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:08:43.231 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:08:43.232 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:43.233 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 44.0626ms
2022-08-30 13:08:43.235 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:08:43.236 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQxMjMsImV4cCI6MTY2MTg1NTAyMywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.vDVK3GlqBYJM_5ggK8oohuu7Wm-vaZTBRaplH8kFiXo","expiration":"2022-08-30T10:23:43.213477Z","refreshToken":"y+jduB+LSsvtUBe2Ehy2ytk2ldk3FO9CODc2HC4/nwY="}}
2022-08-30 13:08:43.239 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 62.7974ms
2022-08-30 13:08:44.920 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:08:44.921 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:44.923 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:44.925 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:44.927 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 7.4248ms
2022-08-30 13:08:44.964 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:08:44.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:44.968 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:44.969 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:08:44.972 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:08:44.975 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:08:44.976 +03:00 [INF] RequestBody: 
2022-08-30 13:08:44.977 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"5nzAMU5u7iUaXFa5byqBkQ","connectionToken":"wWnHzwOAixv3wBMEgZSZEA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:08:44.980 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 15.9156ms
2022-08-30 13:08:45.011 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=wWnHzwOAixv3wBMEgZSZEA - -
2022-08-30 13:08:45.013 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:08:45.019 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:45.021 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:08:46.125 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:08:46.126 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:46.129 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:46.132 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:46.134 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 9.2012ms
2022-08-30 13:08:46.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:08:46.141 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:46.146 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:46.147 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:46.149 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:08:46.153 +03:00 [INF] Get All Products
2022-08-30 13:08:46.154 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:46.159 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:08:46.165 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:08:46.170 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:08:46.173 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:46.175 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 22.5538ms
2022-08-30 13:08:46.177 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:46.178 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:08:46.186 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 47.6854ms
2022-08-30 13:08:47.421 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:08:47.424 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.428 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.431 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:47.433 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.2791ms
2022-08-30 13:08:47.436 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:08:47.437 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.439 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.439 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:08:47.440 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:08:47.444 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:08:47.445 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:47.446 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.3412ms
2022-08-30 13:08:47.447 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:08:47.448 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:08:47.449 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 13.3186ms
2022-08-30 13:08:47.456 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:08:47.458 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.460 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.462 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:08:47.463 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.8276ms
2022-08-30 13:08:47.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:08:47.468 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:08:47.470 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:08:47.471 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:47.472 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:08:47.475 +03:00 [INF] Get All Products
2022-08-30 13:08:47.478 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:08:47.483 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:08:47.488 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:08:47.497 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:08:47.500 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:08:47.501 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 26.8341ms
2022-08-30 13:08:47.504 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:08:47.507 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:08:47.519 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 51.3429ms
2022-08-30 13:10:37.318 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:10:37.329 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:08:44 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:10:37.330 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=wWnHzwOAixv3wBMEgZSZEA - - - 101 - - 112319.3458ms
2022-08-30 13:10:38.080 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:38.081 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.083 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.084 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:38.086 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 5.7841ms
2022-08-30 13:10:38.089 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:38.090 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.093 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.093 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:38.094 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:10:38.097 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:10:38.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:38.100 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.1458ms
2022-08-30 13:10:38.101 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:38.103 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:10:38.105 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.3719ms
2022-08-30 13:10:38.133 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:38.135 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.137 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.138 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:38.139 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.9987ms
2022-08-30 13:10:38.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:38.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:38.144 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:38.144 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:38.145 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:38.147 +03:00 [INF] Get All Products
2022-08-30 13:10:38.148 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:38.150 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:38.153 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:38.155 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:38.156 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:38.157 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 10.9365ms
2022-08-30 13:10:38.159 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:38.160 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:38.163 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 21.1802ms
2022-08-30 13:10:41.139 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:10:41.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:41.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:41.147 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:41.148 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:10:41.150 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:10:41.152 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:41.153 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.5639ms
2022-08-30 13:10:41.154 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:10:41.155 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:10:41.157 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 18.1898ms
2022-08-30 13:10:41.185 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:10:41.186 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:41.189 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:41.190 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:41.191 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:41.195 +03:00 [INF] Get All Products
2022-08-30 13:10:41.197 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:41.202 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:41.209 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:41.215 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:41.218 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:41.219 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.5287ms
2022-08-30 13:10:41.221 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:41.222 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:41.226 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 41.7143ms
2022-08-30 13:10:46.895 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:10:46.896 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:46.898 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.899 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:46.901 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 5.5216ms
2022-08-30 13:10:46.904 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:10:46.905 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:46.907 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.909 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:10:46.910 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:10:46.911 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:10:46.912 +03:00 [INF] RequestBody: 
2022-08-30 13:10:46.913 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"7vP8VRWIDxlz9LAH8Dlqlg","connectionToken":"a9sBzmHOtHSvBaQ4GlBwYQ","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:10:46.915 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 10.8099ms
2022-08-30 13:10:46.927 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=a9sBzmHOtHSvBaQ4GlBwYQ - -
2022-08-30 13:10:46.927 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:10:46.929 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:46.930 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:10:49.531 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:10:49.532 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:49.534 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:49.534 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:49.535 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 4.4510ms
2022-08-30 13:10:49.539 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:10:49.540 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:49.542 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:49.543 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:49.545 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:49.548 +03:00 [INF] Get All Products
2022-08-30 13:10:49.549 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:49.556 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:10:49.565 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:49.570 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:10:49.572 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:49.573 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.8689ms
2022-08-30 13:10:49.574 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:10:49.575 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:10:49.578 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 39.5312ms
2022-08-30 13:10:50.891 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:50.894 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:50.895 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:50.895 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:50.896 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.1144ms
2022-08-30 13:10:50.900 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:50.902 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:50.904 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:50.907 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:10:50.909 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:50.913 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:50.919 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:10:50.932 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:10:50.935 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:50.937 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 24.6851ms
2022-08-30 13:10:50.939 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:10:50.940 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:10:50.941 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 41.0337ms
2022-08-30 13:10:52.928 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:52.930 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:52.932 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:52.934 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:10:52.935 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 6.7945ms
2022-08-30 13:10:52.940 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:10:52.943 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:10:52.945 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:10:52.947 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:10:52.954 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:10:52.966 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:10:53.001 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:10:53.021 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:10:53.029 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
2022-08-30 13:10:53.033 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:10:53.034 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:10:53.035 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 76.2142ms
2022-08-30 13:10:53.037 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:10:53.037 +03:00 [INF] ResponseBody: {}
2022-08-30 13:10:53.038 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 98.2937ms
2022-08-30 13:11:03.382 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:03.384 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:03.387 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:03.389 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:03.391 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 8.3584ms
2022-08-30 13:11:03.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:03.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:03.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:03.401 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:11:03.402 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:03.406 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:03.411 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:03.416 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:11:03.417 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:03.418 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 13.0268ms
2022-08-30 13:11:03.419 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:11:03.420 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 13:11:03.421 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 26.3634ms
2022-08-30 13:11:05.333 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:05.335 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:05.336 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:05.337 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:05.338 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 4.8273ms
2022-08-30 13:11:05.342 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:11:05.344 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:05.346 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:05.347 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:11:05.348 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:05.351 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:05.356 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:11:05.362 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:11:05.365 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:11:05.366 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:05.367 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 17.5918ms
2022-08-30 13:11:05.369 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:11:05.369 +03:00 [INF] ResponseBody: {}
2022-08-30 13:11:05.370 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 28.0742ms
2022-08-30 13:11:07.670 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:07.672 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.675 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.676 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:07.677 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.5652ms
2022-08-30 13:11:07.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:07.684 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.686 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.687 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:07.688 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:11:07.692 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:11:07.693 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:07.694 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.2682ms
2022-08-30 13:11:07.695 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:07.696 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:11:07.698 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 15.3900ms
2022-08-30 13:11:07.707 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:07.709 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.710 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.712 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:07.714 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9485ms
2022-08-30 13:11:07.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:07.718 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:07.721 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:07.722 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:07.724 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:07.730 +03:00 [INF] Get All Products
2022-08-30 13:11:07.731 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:07.733 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:11:07.737 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:07.739 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:11:07.741 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:07.743 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.5063ms
2022-08-30 13:11:07.745 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:07.747 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:11:07.763 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 45.4332ms
2022-08-30 13:11:14.688 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:14.690 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.693 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.695 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:14.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.5624ms
2022-08-30 13:11:14.702 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:11:14.704 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.706 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.707 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:14.709 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:11:14.710 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:11:14.712 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:14.714 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.3298ms
2022-08-30 13:11:14.715 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:11:14.716 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:11:14.717 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 14.6806ms
2022-08-30 13:11:14.723 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:14.724 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.725 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.726 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:11:14.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.7218ms
2022-08-30 13:11:14.730 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:11:14.731 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:11:14.732 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:11:14.733 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:14.734 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:11:14.736 +03:00 [INF] Get All Products
2022-08-30 13:11:14.737 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:11:14.739 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:11:14.742 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:11:14.746 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:11:14.747 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:11:14.748 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.0531ms
2022-08-30 13:11:14.749 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:11:14.750 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:11:14.754 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 23.6655ms
2022-08-30 13:12:25.291 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:12:25.609 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:12:25.610 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:12:25.615 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:12:25.616 +03:00 [INF] Hosting environment: Development
2022-08-30 13:12:25.617 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:12:25.791 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:12:25.908 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:12:25.913 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:25.915 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:12:25.924 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 136.0496ms
2022-08-30 13:12:25.936 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:12:25.939 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:12:25.940 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:25.957 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:12:25.977 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:12:25.982 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:12:25.983 +03:00 [INF] RequestBody: 
2022-08-30 13:12:25.986 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"It9PBlu3YHzKYMGLbm0Urg","connectionToken":"yzgfeGpLUc9NnkM_1JBMlA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:12:25.988 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 51.8004ms
2022-08-30 13:12:26.022 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=yzgfeGpLUc9NnkM_1JBMlA - -
2022-08-30 13:12:26.029 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:12:26.031 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:12:26.033 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:12:49.487 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:12:49.501 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:12:25 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:12:49.529 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=yzgfeGpLUc9NnkM_1JBMlA - - - 101 - - 23507.5764ms
2022-08-30 13:14:19.130 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:14:19.132 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:19.135 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:19.136 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:19.138 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 8.1576ms
2022-08-30 13:14:19.145 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:14:19.150 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:19.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:19.154 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:14:19.209 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:14:19.237 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:14:21.635 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:22.183 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:14:23.025 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:14:23.192 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:14:23.426 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:14:23.435 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:23.444 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 4224.0778ms
2022-08-30 13:14:23.446 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:14:23.447 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQ0NjIsImV4cCI6MTY2MTg1NTM2MiwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.zFXFbd_6lEWLZZOfjqyQcnvfGTOcQtxE1e4nzGjddJw","expiration":"2022-08-30T10:29:22.7389467Z","refreshToken":"9GdQD9E6ldaUh6VAn+92ZIlzBmzL1auSonIzIHNKJcE="}}
2022-08-30 13:14:23.460 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 4315.0302ms
2022-08-30 13:14:26.842 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:14:26.844 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:26.846 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:26.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 6.5008ms
2022-08-30 13:14:26.855 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:14:26.858 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:26.860 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.861 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:14:26.862 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:14:26.865 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:14:26.866 +03:00 [INF] RequestBody: 
2022-08-30 13:14:26.868 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"HsUhxHO_2f4H88hZfUikvA","connectionToken":"xh2C696surF47hACtECbMA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:14:26.870 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 14.8268ms
2022-08-30 13:14:26.882 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=xh2C696surF47hACtECbMA - -
2022-08-30 13:14:26.885 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:14:26.888 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:26.892 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:14:29.576 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:14:29.576 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:29.578 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:29.578 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:29.579 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 3.6506ms
2022-08-30 13:14:29.582 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:14:29.583 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:29.584 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:29.585 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:29.590 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:29.609 +03:00 [INF] Get All Products
2022-08-30 13:14:29.658 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:29.746 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:14:29.841 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:14:29.843 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:14:30.113 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:30.134 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:14:30.160 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:30.165 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 572.9357ms
2022-08-30 13:14:30.167 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:30.169 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":true,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:14:30.180 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 598.2204ms
2022-08-30 13:14:34.843 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:34.845 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:34.847 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:34.847 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:34.848 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.6899ms
2022-08-30 13:14:34.851 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:34.853 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:34.855 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:35.206 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:35.215 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:35.259 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:35.335 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:35.450 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:14:35.456 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:35.457 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 236.5465ms
2022-08-30 13:14:35.460 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:35.465 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:14:35.467 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 615.8731ms
2022-08-30 13:14:38.689 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:38.690 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:38.692 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:38.693 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:38.694 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.4366ms
2022-08-30 13:14:38.699 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:14:38.701 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:38.703 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:38.704 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:38.709 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:38.721 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:38.775 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:38.817 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:38.882 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:14:38.886 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:38.888 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 174.784ms
2022-08-30 13:14:38.891 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:38.895 +03:00 [INF] ResponseBody: {}
2022-08-30 13:14:38.898 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 198.9086ms
2022-08-30 13:14:42.703 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:42.705 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:42.708 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:42.710 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:42.712 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 9.1021ms
2022-08-30 13:14:42.717 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:42.719 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:42.722 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:42.726 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:42.729 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:42.737 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:42.747 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:42.761 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:14:42.770 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:42.773 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 37.575ms
2022-08-30 13:14:42.781 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:14:42.783 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/24323432432.PNG","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","fileName":"24323432432.PNG"},{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-6.jpg","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","fileName":"wallpaper-6.jpg"}]
2022-08-30 13:14:42.785 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 68.5924ms
2022-08-30 13:14:45.882 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:45.885 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:45.892 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:45.894 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:45.896 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 204 - - 14.2795ms
2022-08-30 13:14:45.903 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - -
2022-08-30 13:14:45.908 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:45.916 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:45.918 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:45.921 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:45.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:45.940 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:45.985 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:14:46.028 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p2='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Files" SET "Showcase" = @p0
WHERE "Id" = @p1;
UPDATE "Files" SET "Showcase" = @p2
WHERE "Id" = @p3;
2022-08-30 13:14:46.032 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:14:46.034 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:46.034 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 107.4435ms
2022-08-30 13:14:46.036 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:14:46.036 +03:00 [INF] ResponseBody: {}
2022-08-30 13:14:46.037 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=24f0bd3b-9ec5-4db7-8ed8-e756267bfc35&productId=c4ed3ddf-5bce-4069-9a1c-e960372e1db7 - - - 200 - application/json;+charset=utf-8 134.6294ms
2022-08-30 13:14:48.963 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:14:48.966 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:48.969 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:48.973 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:48.974 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 10.9127ms
2022-08-30 13:14:48.979 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:14:48.982 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:48.984 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:48.985 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:14:48.988 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:14:48.992 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:14:48.995 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:48.997 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.9252ms
2022-08-30 13:14:48.999 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:14:49.002 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:14:49.004 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.3465ms
2022-08-30 13:14:49.012 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:14:49.013 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:49.016 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:49.017 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:14:49.021 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.6278ms
2022-08-30 13:14:49.026 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:14:49.028 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:14:49.030 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:14:49.031 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:49.032 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:14:49.036 +03:00 [INF] Get All Products
2022-08-30 13:14:49.037 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:14:49.039 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:14:49.042 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:14:49.045 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:14:49.047 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:14:49.049 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.4618ms
2022-08-30 13:14:49.050 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:14:49.051 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:14:49.056 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.6199ms
2022-08-30 13:15:33.979 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:15:33.990 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:14:26 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:15:33.992 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=xh2C696surF47hACtECbMA - - - 101 - - 67110.1183ms
2022-08-30 13:15:34.532 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:34.534 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.536 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.538 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:34.539 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.1461ms
2022-08-30 13:15:34.547 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:34.549 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.551 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.552 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:34.554 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:34.557 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:34.560 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:34.561 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.0618ms
2022-08-30 13:15:34.564 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:34.570 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:34.572 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.5058ms
2022-08-30 13:15:34.594 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:34.596 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.601 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.602 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:34.604 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0505ms
2022-08-30 13:15:34.608 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:34.610 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:34.614 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:34.615 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:34.616 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:34.621 +03:00 [INF] Get All Products
2022-08-30 13:15:34.622 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:34.626 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:34.630 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:34.635 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:34.636 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:34.638 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.4468ms
2022-08-30 13:15:34.640 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:34.641 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:34.646 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.7202ms
2022-08-30 13:15:53.067 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:53.069 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.071 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.073 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:53.075 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.3571ms
2022-08-30 13:15:53.082 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:53.084 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.088 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.089 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:53.091 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:53.095 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:53.098 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:53.100 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.9347ms
2022-08-30 13:15:53.102 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:53.104 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:53.107 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 24.5258ms
2022-08-30 13:15:53.136 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:53.138 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.140 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.141 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:53.142 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.8690ms
2022-08-30 13:15:53.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:53.149 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:53.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:53.153 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:53.155 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:53.163 +03:00 [INF] Get All Products
2022-08-30 13:15:53.166 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:53.168 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:53.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:53.175 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:53.177 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:53.178 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.7649ms
2022-08-30 13:15:53.179 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:53.180 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:53.184 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.3941ms
2022-08-30 13:15:58.336 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:58.337 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.339 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:58.343 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.0674ms
2022-08-30 13:15:58.364 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:15:58.365 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.367 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.368 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:58.368 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:15:58.371 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:15:58.377 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:58.389 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 17.9365ms
2022-08-30 13:15:58.393 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:15:58.394 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:15:58.398 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 34.3705ms
2022-08-30 13:15:58.417 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:58.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.421 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.424 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:15:58.429 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 12.0671ms
2022-08-30 13:15:58.439 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:15:58.442 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:15:58.445 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:15:58.446 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:58.448 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:15:58.451 +03:00 [INF] Get All Products
2022-08-30 13:15:58.452 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:15:58.457 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:15:58.464 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:15:58.468 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:15:58.470 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:15:58.472 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.0404ms
2022-08-30 13:15:58.474 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:15:58.478 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:15:58.485 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 46.1412ms
2022-08-30 13:16:02.902 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:02.904 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:02.909 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:02.912 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:02.915 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:02.928 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:02.933 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:02.935 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.3208ms
2022-08-30 13:16:02.937 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:02.940 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:02.942 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 40.1922ms
2022-08-30 13:16:02.950 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:02.951 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:02.952 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:02.953 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:02.954 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:02.957 +03:00 [INF] Get All Products
2022-08-30 13:16:02.958 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:02.961 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:02.964 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:02.967 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:02.968 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:02.969 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 12.8972ms
2022-08-30 13:16:02.970 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:02.971 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:02.974 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 24.5396ms
2022-08-30 13:16:05.943 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:05.945 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:05.948 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:05.950 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:05.951 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.7207ms
2022-08-30 13:16:05.955 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:05.957 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:05.963 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:05.965 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:05.966 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:05.968 +03:00 [INF] Get All Products
2022-08-30 13:16:05.970 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:05.975 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:05.978 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:16:05.980 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:16:05.989 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:05.993 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:05.994 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:05.995 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 27.6822ms
2022-08-30 13:16:05.996 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:05.997 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:05.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 43.4447ms
2022-08-30 13:16:09.612 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:09.614 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:09.617 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:09.618 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:09.621 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.1158ms
2022-08-30 13:16:09.625 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:09.627 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:09.631 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:09.633 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:09.635 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:09.639 +03:00 [INF] Get All Products
2022-08-30 13:16:09.642 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:09.645 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:09.649 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:09.653 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:09.655 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:09.656 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 17.8316ms
2022-08-30 13:16:09.657 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:09.658 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:09.663 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 37.9883ms
2022-08-30 13:16:12.248 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:12.250 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:12.252 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:12.254 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:12.256 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 8.0672ms
2022-08-30 13:16:12.261 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:12.263 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:12.266 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:12.267 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:12.271 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:12.275 +03:00 [INF] Get All Products
2022-08-30 13:16:12.277 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:12.281 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:12.285 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:12.291 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:12.293 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:12.296 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.8167ms
2022-08-30 13:16:12.298 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:12.300 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:12.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 42.9970ms
2022-08-30 13:16:16.989 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:16.991 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:16.994 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:16.996 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:16.998 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.3467ms
2022-08-30 13:16:17.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:17.005 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:17.008 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:17.011 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:17.013 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:17.020 +03:00 [INF] Get All Products
2022-08-30 13:16:17.023 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:17.028 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:17.039 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:17.051 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:17.057 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:17.062 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 44.5882ms
2022-08-30 13:16:17.065 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:17.066 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:17.072 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 68.8066ms
2022-08-30 13:16:21.672 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:21.674 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.677 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.678 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:21.679 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.8214ms
2022-08-30 13:16:21.716 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:21.718 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.722 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.725 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:21.728 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:21.732 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:21.736 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:21.739 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.1003ms
2022-08-30 13:16:21.742 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:21.744 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:21.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 30.1664ms
2022-08-30 13:16:21.775 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:21.776 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:21.777 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:21.778 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:21.779 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:21.781 +03:00 [INF] Get All Products
2022-08-30 13:16:21.782 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:21.787 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:21.791 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:21.794 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:21.795 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:21.796 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.8446ms
2022-08-30 13:16:21.798 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:21.799 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:21.805 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 30.4521ms
2022-08-30 13:16:25.686 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:25.688 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:25.691 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:25.692 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:25.694 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.5839ms
2022-08-30 13:16:25.698 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:16:25.700 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:25.705 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:25.708 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:25.710 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:25.713 +03:00 [INF] Get All Products
2022-08-30 13:16:25.714 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:25.718 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:25.723 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:25.728 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:25.729 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:25.730 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.0017ms
2022-08-30 13:16:25.731 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:25.733 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:25.735 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 36.6140ms
2022-08-30 13:16:29.375 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:29.377 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:29.380 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:29.381 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:29.384 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 9.0517ms
2022-08-30 13:16:29.389 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:29.389 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:29.391 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:29.392 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:29.393 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:29.395 +03:00 [INF] Get All Products
2022-08-30 13:16:29.397 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:29.401 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:29.406 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:29.409 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:29.411 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:29.412 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 16.9148ms
2022-08-30 13:16:29.413 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:29.415 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:29.420 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 31.1021ms
2022-08-30 13:16:35.837 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:35.839 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.841 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.843 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:35.845 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.6364ms
2022-08-30 13:16:35.850 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:16:35.852 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.855 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.856 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:35.858 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:16:35.860 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:16:35.862 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:35.863 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.378ms
2022-08-30 13:16:35.865 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:16:35.867 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:16:35.868 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.8604ms
2022-08-30 13:16:35.877 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:35.878 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.879 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.881 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:16:35.882 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.4814ms
2022-08-30 13:16:35.888 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:16:35.889 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:16:35.891 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:16:35.891 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:35.892 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:16:35.894 +03:00 [INF] Get All Products
2022-08-30 13:16:35.895 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:16:35.897 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:16:35.901 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:16:35.905 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:16:35.907 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:16:35.908 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.9014ms
2022-08-30 13:16:35.909 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:16:35.910 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:16:35.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 27.9303ms
2022-08-30 13:17:43.335 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:43.337 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.338 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.340 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:17:43.342 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 6.4296ms
2022-08-30 13:17:43.348 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:43.350 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.352 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.354 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:43.355 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:17:43.359 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:17:43.362 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:43.364 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 5.542ms
2022-08-30 13:17:43.367 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:43.374 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:17:43.375 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.9527ms
2022-08-30 13:17:43.391 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:43.392 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.394 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.395 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:17:43.396 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 5.0069ms
2022-08-30 13:17:43.399 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:43.400 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:43.401 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:43.402 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:43.403 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:17:43.406 +03:00 [INF] Get All Products
2022-08-30 13:17:43.407 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:17:43.480 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:17:43.486 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:17:43.490 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:17:43.492 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:43.493 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 87.6152ms
2022-08-30 13:17:43.494 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:43.495 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:17:43.498 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 99.1017ms
2022-08-30 13:17:47.001 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:17:47.003 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:47.005 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:47.005 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:47.006 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller eTradeAPI.API.controller.FilesController (eTradeAPI.API).
2022-08-30 13:17:47.010 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:17:47.012 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:47.015 +03:00 [INF] Executed action eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.4858ms
2022-08-30 13:17:47.016 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:17:47.017 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:17:47.018 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.1416ms
2022-08-30 13:17:47.086 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:17:47.096 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:17:47.102 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:17:47.103 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:47.105 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:17:47.110 +03:00 [INF] Get All Products
2022-08-30 13:17:47.111 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:17:47.115 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:17:47.121 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:17:47.127 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:17:47.128 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:17:47.131 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.5345ms
2022-08-30 13:17:47.133 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:17:47.134 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:17:47.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 53.6992ms
2022-08-30 13:19:15.169 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:19:15.575 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:19:15.577 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:19:15.582 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:19:15.583 +03:00 [INF] Hosting environment: Development
2022-08-30 13:19:15.584 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:19:25.133 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:19:25.251 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:25.262 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:25.266 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:25.282 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 159.7174ms
2022-08-30 13:19:25.294 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:19:25.299 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:25.301 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:25.327 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:19:25.366 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:19:25.400 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:19:27.333 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:27.911 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:19:28.255 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:19:28.409 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:19:28.466 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:19:28.480 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:28.494 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3116.459ms
2022-08-30 13:19:28.497 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:19:28.501 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTQ3NjgsImV4cCI6MTY2MTg1NTY2OCwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.lM6rdlbMyagtu8ke94iUr7LId4EuKIEzos9HZ6CZAZk","expiration":"2022-08-30T10:34:28.1078609Z","refreshToken":"2NpDsJcmmC6VWUEhnd62gLWwbzBrbHU8WbRVbZXMFHs="}}
2022-08-30 13:19:28.522 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3228.0978ms
2022-08-30 13:19:30.442 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:30.444 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.447 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.448 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:30.449 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.2210ms
2022-08-30 13:19:30.454 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:30.462 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.464 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.466 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:30.468 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:19:30.470 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:19:30.472 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:30.473 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.0896ms
2022-08-30 13:19:30.475 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:30.476 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:19:30.477 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.1240ms
2022-08-30 13:19:30.482 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:30.483 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.484 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.485 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:30.486 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.1637ms
2022-08-30 13:19:30.488 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:30.489 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:30.491 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:30.493 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:30.498 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:30.513 +03:00 [INF] Get All Products
2022-08-30 13:19:30.557 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:30.596 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:30.650 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:30.654 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:30.817 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:30.834 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:30.848 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:30.851 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 351.3641ms
2022-08-30 13:19:30.853 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:30.854 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:30.858 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 369.7358ms
2022-08-30 13:19:39.108 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:39.110 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.113 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.115 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:39.116 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.4383ms
2022-08-30 13:19:39.119 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:19:39.120 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.127 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.129 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:39.130 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:19:39.132 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:19:39.133 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:39.134 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.0114ms
2022-08-30 13:19:39.135 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:19:39.136 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:19:39.137 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.7802ms
2022-08-30 13:19:39.143 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:19:39.144 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.146 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:39.147 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 3.6085ms
2022-08-30 13:19:39.149 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 13:19:39.150 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:39.151 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:39.152 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:39.153 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:39.157 +03:00 [INF] Get All Products
2022-08-30 13:19:39.167 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:39.172 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:39.175 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:39.177 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:19:39.186 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:39.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:39.193 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:39.194 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 39.8392ms
2022-08-30 13:19:39.195 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:39.197 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:39.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 49.6148ms
2022-08-30 13:19:42.557 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:42.559 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:42.561 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:42.563 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:19:42.565 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.9650ms
2022-08-30 13:19:42.570 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:19:42.571 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:19:42.575 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:19:42.577 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:42.578 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:19:42.584 +03:00 [INF] Get All Products
2022-08-30 13:19:42.587 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:19:42.593 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:19:42.598 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:19:42.603 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:19:42.605 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:19:42.606 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 25.2934ms
2022-08-30 13:19:42.608 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:19:42.609 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:19:42.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.8747ms
2022-08-30 13:20:24.694 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:20:25.128 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:20:25.130 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:20:25.135 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:20:25.136 +03:00 [INF] Hosting environment: Development
2022-08-30 13:20:25.137 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:41:45.885 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:41:46.270 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:41:46.274 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:41:46.279 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:41:46.280 +03:00 [INF] Hosting environment: Development
2022-08-30 13:41:46.281 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:42:04.822 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 13:42:04.957 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:04.966 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:04.969 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:04.986 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 166.9808ms
2022-08-30 13:42:04.997 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 13:42:05.003 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:05.004 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:05.029 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:42:05.061 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 13:42:05.093 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 13:42:07.096 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:07.647 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:42:08.003 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 13:42:08.134 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 13:42:08.204 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 13:42:08.215 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:08.225 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3155.0291ms
2022-08-30 13:42:08.227 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 13:42:08.231 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NTYxMjcsImV4cCI6MTY2MTg1NzAyNywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.69Xca1ogfuY2kWB5wL4ZVQxBKT1PwSp-ieBlBhxmQhM","expiration":"2022-08-30T10:57:07.8486801Z","refreshToken":"Cgd4rx64fqHDGmuqbj7NKAZQLqGsohtP4AdcGhPOZQI="}}
2022-08-30 13:42:08.248 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3250.5805ms
2022-08-30 13:42:12.139 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 13:42:12.141 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:12.145 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.147 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:12.151 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 12.1709ms
2022-08-30 13:42:12.173 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 13:42:12.177 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:12.181 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.183 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 13:42:12.217 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 13:42:12.220 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 13:42:12.221 +03:00 [INF] RequestBody: 
2022-08-30 13:42:12.225 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"DpAAkAY-O9F6SQ3p_PCqng","connectionToken":"uxPluQ3tP0FMbMdOKG2B8Q","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 13:42:12.229 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 55.8144ms
2022-08-30 13:42:12.258 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=uxPluQ3tP0FMbMdOKG2B8Q - -
2022-08-30 13:42:12.268 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 13:42:12.269 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:12.272 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 13:42:16.024 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:42:16.027 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:16.029 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:16.029 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:16.030 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 5.8426ms
2022-08-30 13:42:16.033 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 13:42:16.034 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:16.035 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:16.036 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:42:16.041 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:16.056 +03:00 [INF] Get All Products
2022-08-30 13:42:16.118 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:16.203 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:42:16.302 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:42:16.305 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:42:16.596 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:42:16.615 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:42:16.631 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:16.633 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 587.9ms
2022-08-30 13:42:16.635 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:42:16.636 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:42:16.641 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 607.5598ms
2022-08-30 13:42:18.641 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:18.643 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:18.644 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:18.645 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:18.646 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.6139ms
2022-08-30 13:42:18.650 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:18.654 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:18.658 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:18.866 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:42:18.870 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:18.894 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:18.976 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:42:19.147 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 13:42:19.150 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:19.152 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 277.873ms
2022-08-30 13:42:19.153 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 13:42:19.157 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 13:42:19.158 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 507.9265ms
2022-08-30 13:42:20.978 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:20.981 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:20.983 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:20.984 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:42:20.985 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 7.1258ms
2022-08-30 13:42:20.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 13:42:20.992 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/ChangeShowcaseImage
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:42:20.995 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:42:20.997 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:42:21.002 +03:00 [INF] Route matched with {action = "ChangeShowcaseImage", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangeShowcaseImage(eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:42:33.478 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:42:33.528 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND ((t."Id" = @__Parse_0) AND f."Showcase")
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:42:33.589 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId", t1."Id", t1."CreatedDate", t1."Name", t1."Price", t1."Stock", t1."UpdatedDate", t0."CreatedDate0", t0."Name", t0."Price", t0."Stock", t0."UpdatedDate"
FROM (
    SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase", t."Id" AS "Id0", t."CreatedDate" AS "CreatedDate0", t."Name", t."Price", t."Stock", t."UpdatedDate", t."ProductImageFilesId", t."ProductsId"
    FROM "Files" AS f
    INNER JOIN (
        SELECT p0."Id", p0."CreatedDate", p0."Name", p0."Price", p0."Stock", p0."UpdatedDate", p."ProductImageFilesId", p."ProductsId"
        FROM "ProductProductImageFile" AS p
        INNER JOIN "Products" AS p0 ON p."ProductsId" = p0."Id"
    ) AS t ON f."Id" = t."ProductImageFilesId"
    WHERE (f."Discriminator" = 'ProductImageFile') AND (f."Id" = @__Parse_0)
    LIMIT 1
) AS t0
LEFT JOIN (
    SELECT p1."ProductImageFilesId", p1."ProductsId", p2."Id", p2."CreatedDate", p2."Name", p2."Price", p2."Stock", p2."UpdatedDate"
    FROM "ProductProductImageFile" AS p1
    INNER JOIN "Products" AS p2 ON p1."ProductsId" = p2."Id"
) AS t1 ON t0."Id" = t1."ProductImageFilesId"
ORDER BY t0."Id", t0."ProductImageFilesId", t0."ProductsId", t0."Id0", t1."ProductImageFilesId", t1."ProductsId"
2022-08-30 13:42:56.487 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.ProductImageFile.ChangeShowcaseImage.ChangeShowcaseImageCommandResponse'.
2022-08-30 13:42:56.491 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:42:56.493 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API) in 35485.2389ms
2022-08-30 13:42:56.501 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.ChangeShowcaseImage (eTradeAPI.API)'
2022-08-30 13:42:56.503 +03:00 [INF] ResponseBody: {}
2022-08-30 13:42:56.505 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/ChangeShowcaseImage?imageId=cbbe5e3d-c7e9-48f7-a6f0-697dbc803786&productId=a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 35514.4107ms
2022-08-30 13:43:55.370 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:43:55.372 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:43:55.376 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:43:55.377 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:43:55.378 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.8288ms
2022-08-30 13:43:55.385 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:43:55.386 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:43:55.388 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:43:55.389 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:43:55.392 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:44:13.514 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:44:13.518 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:44:13.519 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 18125.2608ms
2022-08-30 13:44:13.521 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:44:13.524 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:44:13.526 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 18140.6771ms
2022-08-30 13:44:13.536 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:44:13.538 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:44:13.540 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:44:13.541 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:44:13.543 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 7.4474ms
2022-08-30 13:44:13.553 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:44:13.555 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:44:13.557 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:44:13.558 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:44:13.559 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:44:13.561 +03:00 [INF] Get All Products
2022-08-30 13:44:13.563 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:44:13.565 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:44:13.570 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:44:13.574 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:44:13.578 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:44:13.579 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 18.6597ms
2022-08-30 13:44:13.581 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:44:13.582 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:44:13.587 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.8621ms
2022-08-30 13:49:09.965 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 13:49:09.967 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 10:42:11 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 13:49:09.968 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=uxPluQ3tP0FMbMdOKG2B8Q - - - 101 - - 417710.3410ms
2022-08-30 13:49:10.481 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:49:10.483 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:10.485 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:10.486 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:49:10.489 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.3932ms
2022-08-30 13:49:10.497 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:49:10.499 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:10.502 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:10.503 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:49:10.505 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:49:13.744 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:49:13.762 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:49:13.769 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3260.0867ms
2022-08-30 13:49:13.771 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:49:13.773 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:49:13.774 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 3277.1300ms
2022-08-30 13:49:13.786 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:49:13.786 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:13.789 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:13.789 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 13:49:13.790 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.5544ms
2022-08-30 13:49:13.793 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:49:13.794 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:49:13.795 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:49:13.796 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:49:13.797 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:49:13.802 +03:00 [INF] Get All Products
2022-08-30 13:49:13.803 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:49:13.866 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:49:13.873 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:49:13.877 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:49:13.879 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:49:13.880 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 80.8839ms
2022-08-30 13:49:13.881 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:49:13.882 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:49:13.886 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 93.2046ms
2022-08-30 13:58:02.788 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 13:58:03.462 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 13:58:03.464 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 13:58:03.468 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 13:58:03.469 +03:00 [INF] Hosting environment: Development
2022-08-30 13:58:03.470 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 13:58:22.724 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 13:58:22.817 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:58:22.823 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:58:22.856 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:58:22.873 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 13:58:25.621 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 13:58:25.633 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:58:25.650 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2768.4317ms
2022-08-30 13:58:25.658 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 13:58:25.661 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 13:58:25.667 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2949.6870ms
2022-08-30 13:58:25.680 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 13:58:25.683 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 13:58:25.685 +03:00 [INF] CORS policy execution successful.
2022-08-30 13:58:25.689 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:58:25.717 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 13:58:26.059 +03:00 [INF] Get All Products
2022-08-30 13:58:27.223 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 13:58:27.656 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 13:58:27.786 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:58:27.787 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 13:58:28.026 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 13:58:28.052 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 13:58:28.068 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 13:58:28.070 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 2351.2686ms
2022-08-30 13:58:28.072 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 13:58:28.074 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 13:58:28.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 2407.7634ms
2022-08-30 14:01:57.692 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:01:57.694 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:01:57.697 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:01:57.699 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:01:57.701 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:01:59.789 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:01:59.804 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:01:59.811 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2107.5514ms
2022-08-30 14:01:59.817 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:01:59.818 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:01:59.819 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2127.8884ms
2022-08-30 14:01:59.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:01:59.846 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:01:59.848 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:01:59.848 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:01:59.849 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:01:59.852 +03:00 [INF] Get All Products
2022-08-30 14:01:59.892 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:01:59.897 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:01:59.903 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:01:59.907 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:01:59.908 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:01:59.909 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 58.5617ms
2022-08-30 14:01:59.911 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:01:59.913 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:01:59.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 71.5717ms
2022-08-30 14:47:26.293 +03:00 [INF] User profile is available. Using 'C:\Users\mustafabati\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2022-08-30 14:47:26.714 +03:00 [INF] Now listening on: https://localhost:7122
2022-08-30 14:47:26.715 +03:00 [INF] Now listening on: http://localhost:5122
2022-08-30 14:47:26.720 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-30 14:47:26.721 +03:00 [INF] Hosting environment: Development
2022-08-30 14:47:26.721 +03:00 [INF] Content root path: C:\Users\mustafabati\Desktop\eTradeApp\eTradeAPI\Presentation\eTrade.API\
2022-08-30 14:47:40.082 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 14:47:40.183 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:40.193 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:40.202 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:40.225 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 147.5385ms
2022-08-30 14:47:40.245 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 14:47:40.252 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:40.255 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:40.280 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:40.319 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 14:47:40.355 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 14:47:42.325 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:42.882 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:43.647 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:43.831 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 14:47:43.917 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 14:47:43.930 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:43.941 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 3613.8125ms
2022-08-30 14:47:43.944 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:43.947 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NjAwNjMsImV4cCI6MTY2MTg2MDk2MywiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.1JFqbXD4X0Agzc7hHKVdiUyI_y7fzKlmbxrO9tFZz2E","expiration":"2022-08-30T12:02:43.4412214Z","refreshToken":"GiyBT2NCdmHGtalxny+OGRb8fZDz3j6wvFQpdowfbpg="}}
2022-08-30 14:47:43.969 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 3723.6021ms
2022-08-30 14:47:49.260 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/auth/login - -
2022-08-30 14:47:49.264 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:49.268 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:49.270 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:49.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/auth/login - - - 204 - - 11.4281ms
2022-08-30 14:47:49.278 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/api/auth/login application/json 45
2022-08-30 14:47:49.280 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /api/auth/login
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Content-Type: application/json
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 45
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:49.283 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:49.285 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:49.286 +03:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest) on controller eTradeAPI.API.controller.AuthController (eTradeAPI.API).
2022-08-30 14:47:49.289 +03:00 [INF] RequestBody: {"usernameOrEmail":"test1","password":"1234"}
2022-08-30 14:47:49.355 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:49.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:49.384 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."ConcurrencyStamp", a."Email", a."EmailConfirmed", a."LockoutEnabled", a."LockoutEnd", a."NameSurname", a."NormalizedEmail", a."NormalizedUserName", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenEndDate", a."SecurityStamp", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2022-08-30 14:47:49.398 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@p17='?', @p0='?' (DbType = Int32), @p1='?', @p18='?', @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?', @p9='?', @p10='?', @p11='?' (DbType = Boolean), @p12='?', @p13='?' (DbType = DateTime), @p14='?', @p15='?' (DbType = Boolean), @p16='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "ConcurrencyStamp" = @p1, "Email" = @p2, "EmailConfirmed" = @p3, "LockoutEnabled" = @p4, "LockoutEnd" = @p5, "NameSurname" = @p6, "NormalizedEmail" = @p7, "NormalizedUserName" = @p8, "PasswordHash" = @p9, "PhoneNumber" = @p10, "PhoneNumberConfirmed" = @p11, "RefreshToken" = @p12, "RefreshTokenEndDate" = @p13, "SecurityStamp" = @p14, "TwoFactorEnabled" = @p15, "UserName" = @p16
WHERE "Id" = @p17 AND "ConcurrencyStamp" = @p18;
2022-08-30 14:47:49.413 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandResponse+LoginUserSuccessCommandResponse'.
2022-08-30 14:47:49.415 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:49.418 +03:00 [INF] Executed action eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API) in 129.5867ms
2022-08-30 14:47:49.419 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.AuthController.Login (eTradeAPI.API)'
2022-08-30 14:47:49.421 +03:00 [INF] ResponseBody: {"token":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdDEiLCJuYmYiOjE2NjE4NjAwNjksImV4cCI6MTY2MTg2MDk2OSwiaXNzIjoid3d3Lm15YXBpLmNvbSIsImF1ZCI6Ind3dy5iYXRpLmNvbSJ9.gs7M7NtswStvVX_eqthCd4fKHTq1lkGrFChHENhZSes","expiration":"2022-08-30T12:02:49.3804721Z","refreshToken":"jhY5YQMT/TuPB14CEMrxOSX44wrMBdobGTihidnC1YQ="}}
2022-08-30 14:47:49.422 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/api/auth/login application/json 45 - 200 - application/json;+charset=utf-8 144.7439ms
2022-08-30 14:47:51.257 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - -
2022-08-30 14:47:51.258 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Cache-Control: max-age=0
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:51.259 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.260 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:51.262 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/products-hub/negotiate?negotiateVersion=1 - - - 204 - - 4.8711ms
2022-08-30 14:47:51.278 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0
2022-08-30 14:47:51.282 +03:00 [INF] Request:
Protocol: HTTP/2
Method: POST
Scheme: https
PathBase: 
Path: /products-hub/negotiate
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: max-age=0
Content-Type: text/plain;charset=UTF-8
Origin: [Redacted]
Referer: [Redacted]
Content-Length: 0
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: [Redacted]
x-signalr-user-agent: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:51.285 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.290 +03:00 [INF] Executing endpoint '/products-hub/negotiate'
2022-08-30 14:47:51.316 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json
Content-Length: 316
2022-08-30 14:47:51.317 +03:00 [INF] Executed endpoint '/products-hub/negotiate'
2022-08-30 14:47:51.318 +03:00 [INF] RequestBody: 
2022-08-30 14:47:51.320 +03:00 [INF] ResponseBody: {"negotiateVersion":1,"connectionId":"8cjfChuD0S7ZvXFX9-hWbw","connectionToken":"D11k4N20gY8cR9aSa6MWZA","availableTransports":[{"transport":"WebSockets","transferFormats":["Text","Binary"]},{"transport":"ServerSentEvents","transferFormats":["Text"]},{"transport":"LongPolling","transferFormats":["Text","Binary"]}]}
2022-08-30 14:47:51.321 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7122/products-hub/negotiate?negotiateVersion=1 text/plain;charset=UTF-8 0 - 200 316 application/json 43.6839ms
2022-08-30 14:47:51.374 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7122/products-hub?id=D11k4N20gY8cR9aSa6MWZA - -
2022-08-30 14:47:51.385 +03:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: https
PathBase: 
Path: /products-hub
Connection: Upgrade
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Cache-Control: no-cache
Origin: [Redacted]
Pragma: [Redacted]
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: [Redacted]
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits
2022-08-30 14:47:51.387 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:51.388 +03:00 [INF] Executing endpoint '/products-hub'
2022-08-30 14:47:55.418 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 14:47:55.419 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:55.420 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:55.421 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:55.421 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=5 - - - 204 - - 3.5866ms
2022-08-30 14:47:55.425 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - -
2022-08-30 14:47:55.426 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:55.427 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:55.427 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:47:55.433 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:47:55.447 +03:00 [INF] Get All Products
2022-08-30 14:47:55.458 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:55.549 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:47:55.652 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:47:55.654 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:47:55.967 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:47:55.987 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:47:56.002 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:56.003 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 568.7698ms
2022-08-30 14:47:56.004 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:47:56.005 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:47:56.008 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=5 - - - 200 - application/json;+charset=utf-8 583.0017ms
2022-08-30 14:47:57.699 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 14:47:57.701 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:57.703 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:57.703 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:47:57.705 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 204 - - 5.8325ms
2022-08-30 14:47:57.710 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - -
2022-08-30 14:47:57.714 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:47:57.716 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:47:57.914 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 14:47:57.920 +03:00 [INF] Route matched with {action = "GetProductImages", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProductImages(eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:47:57.930 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:47:58.014 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__Parse_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."CreatedDate", t."Name", t."Price", t."Stock", t."UpdatedDate", t0."ProductImageFilesId", t0."ProductsId", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase"
FROM (
    SELECT p."Id", p."CreatedDate", p."Name", p."Price", p."Stock", p."UpdatedDate"
    FROM "Products" AS p
    WHERE p."Id" = @__Parse_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT p0."ProductImageFilesId", p0."ProductsId", t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:47:58.192 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[eTrade.Application.Features.Queries.ProductImageFile.GetProductImages.GetProductImagesQueryResponse, eTrade.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-08-30 14:47:58.195 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:47:58.196 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API) in 273.8795ms
2022-08-30 14:47:58.198 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.GetProductImages (eTradeAPI.API)'
2022-08-30 14:47:58.200 +03:00 [INF] ResponseBody: [{"path":"https://ecommercebati.blob.core.windows.net/photo-images/wallpaper-7.jpg","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","fileName":"wallpaper-7.jpg"}]
2022-08-30 14:47:58.201 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products/getproductimages/a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7 - - - 200 - application/json;+charset=utf-8 491.8212ms
2022-08-30 14:48:05.977 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:05.978 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:05.980 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:05.982 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:05.985 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 8.4921ms
2022-08-30 14:48:05.990 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:05.992 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:05.995 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:05.996 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:05.998 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:48:08.686 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:48:08.695 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:08.697 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2697.1889ms
2022-08-30 14:48:08.700 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:08.703 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:48:08.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2714.2023ms
2022-08-30 14:48:08.714 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:08.716 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:08.718 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:08.719 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:08.720 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.9759ms
2022-08-30 14:48:08.725 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:08.726 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:08.727 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:08.728 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:08.729 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:48:08.732 +03:00 [INF] Get All Products
2022-08-30 14:48:08.733 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:48:08.735 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:48:08.739 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:48:08.744 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:48:08.745 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:08.746 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.1357ms
2022-08-30 14:48:08.747 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:08.748 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:48:08.751 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.6666ms
2022-08-30 14:48:16.393 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:16.395 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:16.397 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:16.398 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:16.399 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 5.7039ms
2022-08-30 14:48:16.403 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:48:16.405 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:16.407 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:16.408 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:16.409 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:48:18.574 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:48:18.578 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:18.581 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2170.4554ms
2022-08-30 14:48:18.583 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:48:18.584 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:48:18.585 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 2181.4594ms
2022-08-30 14:48:18.593 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:18.595 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:18.596 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:18.597 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:48:18.599 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 6.2043ms
2022-08-30 14:48:18.604 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:48:18.604 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:48:18.606 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:48:18.607 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:18.607 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:48:18.611 +03:00 [INF] Get All Products
2022-08-30 14:48:18.612 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:48:18.617 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:48:18.620 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:48:18.626 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:48:18.627 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:48:18.628 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 19.3551ms
2022-08-30 14:48:18.629 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:48:18.630 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:48:18.633 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 29.7757ms
2022-08-30 14:51:55.470 +03:00 [INF] Executed endpoint '/products-hub'
2022-08-30 14:51:55.475 +03:00 [INF] Response:
StatusCode: 101
Connection: Upgrade
Date: Tue, 30 Aug 2022 11:47:50 GMT
Server: Kestrel
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Upgrade: websocket
Vary: [Redacted]
Sec-WebSocket-Accept: [Redacted]
2022-08-30 14:51:55.477 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7122/products-hub?id=D11k4N20gY8cR9aSa6MWZA - - - 101 - - 244102.8877ms
2022-08-30 14:51:56.441 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:51:56.442 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.444 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.446 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:51:56.448 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.2900ms
2022-08-30 14:51:56.452 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:51:56.452 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.454 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.454 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:51:56.456 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:51:56.460 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:51:56.461 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:51:56.462 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.7807ms
2022-08-30 14:51:56.465 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:51:56.466 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:51:56.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 16.0660ms
2022-08-30 14:51:56.486 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:51:56.487 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.488 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.488 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:51:56.489 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.7989ms
2022-08-30 14:51:56.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:51:56.493 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:51:56.494 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:51:56.495 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:51:56.496 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:51:56.498 +03:00 [INF] Get All Products
2022-08-30 14:51:56.500 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:51:56.503 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:51:56.508 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:51:56.513 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:51:56.515 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:51:56.518 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 20.2995ms
2022-08-30 14:51:56.519 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:51:56.521 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:51:56.525 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 32.6920ms
2022-08-30 14:52:03.118 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:52:03.119 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.122 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.123 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:52:03.125 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 7.1226ms
2022-08-30 14:52:03.146 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:52:03.148 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.150 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.151 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:52:03.153 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:52:03.158 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:52:03.165 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:52:03.167 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 9.4453ms
2022-08-30 14:52:03.169 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:52:03.171 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:52:03.173 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 26.4741ms
2022-08-30 14:52:03.202 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:52:03.206 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.209 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.210 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:52:03.212 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 10.0364ms
2022-08-30 14:52:03.218 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:52:03.219 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:52:03.221 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:52:03.222 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:52:03.223 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:52:03.226 +03:00 [INF] Get All Products
2022-08-30 14:52:03.227 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:52:03.229 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:52:03.234 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:52:03.237 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:52:03.239 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:52:03.240 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 15.2738ms
2022-08-30 14:52:03.241 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:52:03.242 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:52:03.248 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 29.4026ms
2022-08-30 14:53:45.372 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:53:45.380 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.383 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.385 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:53:45.387 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 15.2144ms
2022-08-30 14:53:45.395 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:53:45.396 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.399 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.400 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:53:45.402 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:53:45.406 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:53:45.407 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:53:45.409 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 3.5832ms
2022-08-30 14:53:45.411 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:53:45.416 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:53:45.418 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 22.7503ms
2022-08-30 14:53:45.437 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:53:45.437 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.438 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.439 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:53:45.440 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 3.4270ms
2022-08-30 14:53:45.443 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:53:45.444 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:53:45.445 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:53:45.446 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:53:45.446 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:53:45.448 +03:00 [INF] Get All Products
2022-08-30 14:53:45.449 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:53:45.502 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:53:45.508 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:53:45.511 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:53:45.513 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:53:45.514 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 66.2246ms
2022-08-30 14:53:45.515 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:53:45.517 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:53:45.520 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 76.9965ms
2022-08-30 14:55:21.139 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:55:21.142 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.146 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.148 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:55:21.150 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.1949ms
2022-08-30 14:55:21.155 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:55:21.156 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.158 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.161 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:55:21.163 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:55:21.166 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:55:21.168 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:55:21.171 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 4.9084ms
2022-08-30 14:55:21.173 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:55:21.176 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:55:21.178 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 23.2470ms
2022-08-30 14:55:21.198 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:55:21.200 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.201 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.202 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:55:21.203 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.4068ms
2022-08-30 14:55:21.210 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:55:21.211 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:55:21.215 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:55:21.217 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:55:21.218 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:55:21.222 +03:00 [INF] Get All Products
2022-08-30 14:55:21.224 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:55:21.226 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:55:21.230 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:55:21.233 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:55:21.234 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:55:21.235 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 13.652ms
2022-08-30 14:55:21.237 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:55:21.238 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:55:21.242 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 33.0120ms
2022-08-30 14:58:00.680 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:00.693 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.700 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.703 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:00.706 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 25.4921ms
2022-08-30 14:58:00.737 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:00.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.747 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.749 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:00.752 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:58:00.756 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:58:00.758 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:00.763 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 7.1648ms
2022-08-30 14:58:00.766 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:00.769 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:58:00.770 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 33.0576ms
2022-08-30 14:58:00.785 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:00.787 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.788 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.789 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:00.790 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 4.2722ms
2022-08-30 14:58:00.795 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:00.796 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:00.797 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:00.798 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:00.799 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:00.801 +03:00 [INF] Get All Products
2022-08-30 14:58:00.802 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:00.805 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:00.808 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:00.812 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:00.814 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:00.815 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 14.5677ms
2022-08-30 14:58:00.817 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:00.818 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:00.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 26.5278ms
2022-08-30 14:58:08.686 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:08.688 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.690 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.693 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:08.697 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/files/GetBaseStorageUrl - - - 204 - - 11.0001ms
2022-08-30 14:58:08.702 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - -
2022-08-30 14:58:08.705 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/files/GetBaseStorageUrl
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.707 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.709 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:08.710 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (eTradeAPI.API).
2022-08-30 14:58:08.713 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2022-08-30 14:58:08.714 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:08.715 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API) in 2.5776ms
2022-08-30 14:58:08.717 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (eTradeAPI.API)'
2022-08-30 14:58:08.718 +03:00 [INF] ResponseBody: {"url":"https://ecommercebati.blob.core.windows.net"}
2022-08-30 14:58:08.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 17.8344ms
2022-08-30 14:58:08.727 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 14:58:08.730 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.732 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.733 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:08.735 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=1&size=12 - - - 204 - - 7.8871ms
2022-08-30 14:58:08.738 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - -
2022-08-30 14:58:08.739 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:08.741 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:08.742 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:08.742 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:08.745 +03:00 [INF] Get All Products
2022-08-30 14:58:08.746 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:08.749 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:08.752 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:58:08.753 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2022-08-30 14:58:08.762 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:08.767 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:08.768 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:08.769 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 24.8513ms
2022-08-30 14:58:08.771 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:08.772 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"5ed8fa75-2911-4229-b79b-a3154a7c919e","name":"bati","stock":23,"price":36,"createdDate":"2022-05-07T21:59:12.953788Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"76935574-448e-4106-bc57-5b7b4b0027f0","name":"710de7","stock":10,"price":3,"createdDate":"2022-05-07T22:08:48.494353Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9ffbbddc-328d-4025-8b06-b54f82cb1401","name":"test 79","stock":13,"price":19,"createdDate":"2022-05-07T19:45:01.85018Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"deb52249-39c8-4b3a-a0ea-a63e3539857a","name":"ÜrüntSt","stock":3,"price":25,"createdDate":"2022-08-24T18:52:20.159066Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:08.773 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 34.9357ms
2022-08-30 14:58:10.390 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:10.392 +03:00 [INF] Request:
Protocol: HTTP/2
Method: OPTIONS
Scheme: https
PathBase: 
Path: /api/products
Accept: */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Access-Control-Request-Headers: [Redacted]
Access-Control-Request-Method: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:10.396 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:10.397 +03:00 [INF] Response:
StatusCode: 204
Access-Control-Allow-Credentials: [Redacted]
Access-Control-Allow-Headers: [Redacted]
Access-Control-Allow-Methods: [Redacted]
Access-Control-Allow-Origin: [Redacted]
Vary: [Redacted]
2022-08-30 14:58:10.398 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7122/api/products?page=0&size=12 - - - 204 - - 8.7545ms
2022-08-30 14:58:10.403 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - -
2022-08-30 14:58:10.405 +03:00 [INF] Request:
Protocol: HTTP/2
Method: GET
Scheme: https
PathBase: 
Path: /api/products
Accept: application/json, text/plain, */*
Host: localhost:7122
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
:method: [Redacted]
Accept-Encoding: gzip, deflate, br
Accept-Language: tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7
Authorization: [Redacted]
Origin: [Redacted]
Referer: [Redacted]
sec-ch-ua: "Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"
sec-ch-ua-mobile: [Redacted]
sec-ch-ua-platform: [Redacted]
sec-fetch-site: [Redacted]
sec-fetch-mode: [Redacted]
sec-fetch-dest: [Redacted]
2022-08-30 14:58:10.409 +03:00 [INF] CORS policy execution successful.
2022-08-30 14:58:10.411 +03:00 [INF] Executing endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:10.413 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryRequest) on controller eTradeAPI.API.controller.ProductsController (eTradeAPI.API).
2022-08-30 14:58:10.419 +03:00 [INF] Get All Products
2022-08-30 14:58:10.421 +03:00 [INF] Entity Framework Core 6.0.4 initialized 'eTradeAPIDBContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:6.0.3+94d0a8eaeb9cf5af6ce55a9e59153c1a1be3244f' with options: None
2022-08-30 14:58:10.426 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)::INT
FROM "Products" AS p
2022-08-30 14:58:10.431 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2022-08-30 14:58:10.436 +03:00 [INF] Executing OkObjectResult, writing value of type 'eTrade.Application.Features.Queries.Product.GetAllProduct.GetAllProductQueryResponse'.
2022-08-30 14:58:10.438 +03:00 [INF] Response:
StatusCode: 200
Content-Type: application/json; charset=utf-8
2022-08-30 14:58:10.439 +03:00 [INF] Executed action eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API) in 21.3211ms
2022-08-30 14:58:10.440 +03:00 [INF] Executed endpoint 'eTradeAPI.API.controller.ProductsController.Get (eTradeAPI.API)'
2022-08-30 14:58:10.442 +03:00 [INF] ResponseBody: {"totalProductCount":16,"products":[{"id":"0dbc0737-5a2f-42c1-ae28-f0f9a4ad7d0c","name":"test13","stock":4,"price":31,"createdDate":"2022-05-07T19:43:28.670487Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"3bd1911e-e3a0-47e3-bd56-1770bee83505","name":"test49","stock":17,"price":12,"createdDate":"2022-05-07T19:43:59.238189Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"881a7e9f-cae0-4574-bfc1-27bb90987507","name":"deneme 2","stock":1,"price":4,"createdDate":"2022-05-07T19:08:55.421604Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"9e1ad9cd-86e6-462a-9152-a5e303102b7c","name":"test63","stock":8,"price":6,"createdDate":"2022-05-07T19:44:23.527858Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"a4442043-9c1e-4f5e-9cb6-ff1a6604e6c7","name":"ürün 1","stock":1,"price":2,"createdDate":"2022-05-07T19:04:08.492469Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"wallpaper-7.jpg","path":"photo-images/wallpaper-7.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"cbbe5e3d-c7e9-48f7-a6f0-697dbc803786","createdDate":"2022-08-30T10:06:39.411042Z"}]},{"id":"b582b272-3e17-4494-bcab-2f6ac5cd2aca","name":"test12","stock":2,"price":20,"createdDate":"2022-05-07T19:43:20.725508Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"bbbd04c3-0f11-4185-b22c-d3a9a84ecc5e","name":"test60","stock":25,"price":20,"createdDate":"2022-05-07T19:44:10.295295Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":false,"products":null,"fileName":"hostDomain.PNG","path":"photo-images\\hostDomain.PNG","storage":"LocalStorage","updatedDate":"0001-01-01T00:00:00","id":"5e3725f2-381d-4735-8245-30a608147d41","createdDate":"2022-05-26T21:16:12.330767Z"}]},{"id":"be12bfba-814f-4141-b085-042f5dbefb4d","name":"Defter","stock":100,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"c4ed3ddf-5bce-4069-9a1c-e960372e1db7","name":"Kalem","stock":100,"price":15,"createdDate":"2022-04-24T07:21:24.315664Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[{"showcase":true,"products":null,"fileName":"24323432432.PNG","path":"photo-images/24323432432.PNG","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"24f0bd3b-9ec5-4db7-8ed8-e756267bfc35","createdDate":"2022-06-04T07:28:21.009806Z"},{"showcase":false,"products":null,"fileName":"wallpaper-6.jpg","path":"photo-images/wallpaper-6.jpg","storage":"AzureStorage","updatedDate":"0001-01-01T00:00:00","id":"2d5df13c-ff5d-4a72-bbdf-3c0b08af4cab","createdDate":"2022-08-30T06:03:53.268471Z"}]},{"id":"ddbc81c2-0f1f-4456-b8ab-12510893d62d","name":"Silgi","stock":50,"price":1,"createdDate":"2022-04-24T07:34:38.938968Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"e11b06fc-d110-45b2-b29c-98ed9cbcaef1","name":"test 70","stock":7,"price":11,"createdDate":"2022-05-07T19:44:40.534865Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]},{"id":"f9d9fe0c-0ed9-4f73-941b-fafac7b62d41","name":"Kağıt","stock":1000,"price":5,"createdDate":"2022-04-24T07:34:38.938975Z","updatedDate":"0001-01-01T00:00:00","productImageFiles":[]}]}
2022-08-30 14:58:10.447 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7122/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 43.2923ms
